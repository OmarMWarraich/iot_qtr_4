{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27","program":"/home/omar/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing","--edition=2018","/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=a76f53e70689bf52","-C","extra-filename=-a76f53e70689bf52","--out-dir","/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps","-L","dependency=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps","--extern","cfg_if=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libcfg_if-1ea64960760a6d98.rmeta","--extern","pin_project_lite=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libpin_project_lite-9947e3c941c54187.rmeta","--extern","tracing_core=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libtracing_core-3768756c5e855e3e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/omar/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libtracing-a76f53e70689bf52.rmeta"},"prelude":{"crate_id":{"name":"tracing","disambiguator":[493763725846053420,0]},"crate_root":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src","external_crates":[{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":20,"id":{"name":"tracing_core","disambiguator":[16606611327060845141,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[18257175922802125800,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[13850998262773622920,0]}}],"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":0,"byte_end":42960,"line_start":1,"line_end":1063,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37372,"byte_end":37382,"line_start":901,"line_end":901,"column_start":27,"column_end":37},"alias_span":null,"name":"Instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":797},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37411,"byte_end":37419,"line_start":902,"line_end":902,"column_start":28,"column_end":36},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":814},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37428,"byte_end":37433,"line_start":902,"line_end":902,"column_start":45,"column_end":50},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":288},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37442,"byte_end":37447,"line_start":902,"line_end":902,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":677},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37461,"byte_end":37471,"line_start":902,"line_end":902,"column_start":78,"column_end":88},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1171},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37510,"byte_end":37512,"line_start":905,"line_end":905,"column_start":21,"column_end":23},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":9},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37558,"byte_end":37566,"line_start":909,"line_end":909,"column_start":5,"column_end":13},"alias_span":null,"name":"callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":54},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37575,"byte_end":37583,"line_start":909,"line_end":909,"column_start":22,"column_end":30},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":436},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37590,"byte_end":37598,"line_start":910,"line_end":910,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37590,"byte_end":37598,"line_start":910,"line_end":910,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":216},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37626,"byte_end":37631,"line_start":912,"line_end":912,"column_start":24,"column_end":29},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1071},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37633,"byte_end":37638,"line_start":912,"line_end":912,"column_start":31,"column_end":36},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":461},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37640,"byte_end":37648,"line_start":912,"line_end":912,"column_start":38,"column_end":46},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":471},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37687,"byte_end":37691,"line_start":915,"line_end":915,"column_start":21,"column_end":25},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":149},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121679,"byte_end":121690,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":146},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121797,"byte_end":121809,"line_start":135,"line_end":135,"column_start":35,"column_end":47},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":805},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121916,"byte_end":121928,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":155},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121970,"byte_end":121981,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"alias_span":null,"name":"get_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":150},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121983,"byte_end":122001,"line_start":140,"line_end":140,"column_start":18,"column_end":36},"alias_span":null,"name":"set_global_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":797},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":122003,"byte_end":122011,"line_start":140,"line_end":140,"column_start":38,"column_end":46},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":810},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":122013,"byte_end":122034,"line_start":140,"line_end":140,"column_start":48,"column_end":69},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":151},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":122342,"byte_end":122354,"line_start":149,"line_end":149,"column_start":35,"column_end":47},"alias_span":null,"name":"has_been_set","value":"","parent":{"krate":0,"index":69}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122444,"byte_end":122445,"line_start":2,"line_end":2,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"ValueSet, Value, Field","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":20,"index":1105},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133962,"byte_end":133983,"line_start":53,"line_end":53,"column_start":34,"column_end":55},"alias_span":null,"name":"ParseLevelFilterError","value":"","parent":{"krate":0,"index":169}},{"kind":"Use","ref_id":{"krate":20,"index":1089},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133985,"byte_end":133996,"line_start":53,"line_end":53,"column_start":57,"column_end":68},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":169}},{"kind":"Use","ref_id":{"krate":20,"index":1188},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149734,"byte_end":149744,"line_start":328,"line_end":328,"column_start":30,"column_end":40},"alias_span":null,"name":"Attributes","value":"","parent":{"krate":0,"index":178}},{"kind":"Use","ref_id":{"krate":20,"index":1171},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149746,"byte_end":149748,"line_start":328,"line_end":328,"column_start":42,"column_end":44},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":178}},{"kind":"Use","ref_id":{"krate":20,"index":1196},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149750,"byte_end":149756,"line_start":328,"line_end":328,"column_start":46,"column_end":52},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":178}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196017,"byte_end":196018,"line_start":2,"line_end":2,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Subscriber, Interest","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":20,"index":805},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196126,"byte_end":196138,"line_start":6,"line_end":6,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":20,"index":810},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198598,"byte_end":198619,"line_start":68,"line_end":68,"column_start":35,"column_end":56},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":20,"index":54},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38112,"byte_end":38120,"line_start":935,"line_end":935,"column_start":30,"column_end":38},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":340}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":0,"byte_end":42960,"line_start":1,"line_end":1063,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":69},{"krate":0,"index":95},{"krate":0,"index":113},{"krate":0,"index":169},{"krate":0,"index":178},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":340},{"krate":0,"index":382}],"decl_id":null,"docs":" A scoped, structured logging and diagnostics system.","sig":null,"attributes":[{"value":"/ A scoped, structured logging and diagnostics system.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":61,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `tracing` is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":80,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ structured, event-based diagnostic information.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":152,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":204,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In asynchronous systems like Tokio, interpreting traditional log messages can","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":208,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ often be quite challenging. Since individual tasks are multiplexed on the same","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":290,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ thread, associated events and log lines are intermixed making it difficult to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":373,"byte_end":454,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ trace the logic flow. `tracing` expands upon logging-style diagnostics by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":455,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ allowing libraries and applications to record structured events with additional","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":533,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ information about *temporality* and *causality* — unlike a log message, a span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":617,"byte_end":701,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ in `tracing` has a beginning and end time, may be entered and exited by the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":702,"byte_end":781,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ flow of execution, and may exist within a nested tree of similar spans. In","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":782,"byte_end":860,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ addition, `tracing` spans are *structured*, with the ability to record typed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":861,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ data as well as textual messages.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":942,"byte_end":979,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":980,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `tracing` crate provides the APIs necessary for instrumenting libraries","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":984,"byte_end":1063,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and applications to emit trace data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1064,"byte_end":1104,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1109,"byte_end":1112,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1113,"byte_end":1149,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ # Core Concepts","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1150,"byte_end":1169,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1170,"byte_end":1173,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The core of `tracing`'s API is composed of _spans_, _events_ and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1174,"byte_end":1242,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ _subscribers_. We'll cover these in turn.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1243,"byte_end":1288,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1289,"byte_end":1292,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1293,"byte_end":1305,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1306,"byte_end":1309,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ To record the flow of execution through a program, `tracing` introduces the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1310,"byte_end":1389,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ concept of [spans]. Unlike a log line that represents a _moment in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1390,"byte_end":1460,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ time_, a span represents a _period of time_ with a beginning and an end. When a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1461,"byte_end":1544,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/ program begins executing in a context or performing a unit of work, it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1545,"byte_end":1619,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ _enters_ that context's span, and when it stops executing in that context,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1620,"byte_end":1698,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ it _exits_ the span. The span in which a thread is currently executing is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1699,"byte_end":1776,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ referred to as that thread's _current_ span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1777,"byte_end":1825,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1830,"byte_end":1846,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1847,"byte_end":1854,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1855,"byte_end":1886,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1887,"byte_end":1904,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1905,"byte_end":1951,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ // `enter` returns a RAII guard which, when dropped, exits the span. this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":1952,"byte_end":2029,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ // indicates that we are in the span for the current lexical scope.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2030,"byte_end":2101,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2102,"byte_end":2132,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ // perform some work in the context of `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2133,"byte_end":2188,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2189,"byte_end":2196,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2197,"byte_end":2203,"line_start":49,"line_end":49,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2204,"byte_end":2207,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`span` module][span]'s documentation provides further details on how to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2208,"byte_end":2288,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ use spans.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2289,"byte_end":2303,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2304,"byte_end":2307,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2308,"byte_end":2440,"line_start":54,"line_end":54,"column_start":1,"column_end":133}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2441,"byte_end":2525,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2526,"byte_end":2608,"line_start":56,"line_end":56,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2609,"byte_end":2657,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/     <a href=\"span/struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2658,"byte_end":2747,"line_start":58,"line_end":58,"column_start":1,"column_end":90}},{"value":"/     for details.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2748,"byte_end":2768,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2769,"byte_end":2785,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2786,"byte_end":2789,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Events","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2790,"byte_end":2803,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2804,"byte_end":2807,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An [`Event`] represents a _moment_ in time. It signifies something that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2808,"byte_end":2883,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ happened while a trace was being recorded. `Event`s are comparable to the log","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2884,"byte_end":2965,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ records emitted by unstructured logging code, but unlike a typical log line,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":2966,"byte_end":3046,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ an `Event` may occur within the context of a span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3047,"byte_end":3101,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3102,"byte_end":3105,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3106,"byte_end":3122,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3123,"byte_end":3130,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tracing::{event, span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3131,"byte_end":3169,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3170,"byte_end":3173,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3174,"byte_end":3191,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/ // records an event outside of any span context:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3192,"byte_end":3244,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/ event!(Level::INFO, \"something happened\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3245,"byte_end":3291,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3296,"byte_end":3341,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ let _guard = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3342,"byte_end":3372,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3373,"byte_end":3376,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // records an event within \"my_span\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3377,"byte_end":3418,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ event!(Level::DEBUG, \"something happened inside my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3419,"byte_end":3481,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3482,"byte_end":3489,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3490,"byte_end":3496,"line_start":83,"line_end":83,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3497,"byte_end":3500,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ In general, events should be used to represent points in time _within_ a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3501,"byte_end":3577,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ span — a request returned with a given status code, _n_ new items were","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3578,"byte_end":3654,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ taken from a queue, and so on.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3655,"byte_end":3689,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3690,"byte_end":3693,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The [`Event` struct][`Event`] documentation provides further details on using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3694,"byte_end":3775,"line_start":89,"line_end":89,"column_start":1,"column_end":82}},{"value":"/ events.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3776,"byte_end":3787,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3788,"byte_end":3791,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Subscribers","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3792,"byte_end":3810,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3811,"byte_end":3814,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As `Span`s and `Event`s occur, they are recorded or aggregated by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3815,"byte_end":3884,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/ implementations of the [`Subscriber`] trait. `Subscriber`s are notified","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3885,"byte_end":3960,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ when an `Event` takes place and when a `Span` is entered or exited. These","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":3961,"byte_end":4038,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ notifications are represented by the following `Subscriber` trait methods:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4039,"byte_end":4117,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4118,"byte_end":4121,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ + [`event`][Subscriber::event], called when an `Event` takes place,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4122,"byte_end":4193,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ + [`enter`], called when execution enters a `Span`,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4194,"byte_end":4249,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/ + [`exit`], called when execution exits a `Span`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4250,"byte_end":4302,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4303,"byte_end":4306,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ In addition, subscribers may implement the [`enabled`] function to _filter_","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4307,"byte_end":4386,"line_start":103,"line_end":103,"column_start":1,"column_end":80}},{"value":"/ the notifications they receive based on [metadata] describing each `Span`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4387,"byte_end":4464,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ or `Event`. If a call to `Subscriber::enabled` returns `false` for a given","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4465,"byte_end":4543,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ set of metadata, that `Subscriber` will *not* be notified about the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4544,"byte_end":4615,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ corresponding `Span` or `Event`. For performance reasons, if no currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ active subscribers express interest in a given set of metadata by returning","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4694,"byte_end":4773,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ `true`, then the corresponding `Span` or `Event` will never be constructed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4774,"byte_end":4853,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4854,"byte_end":4857,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4858,"byte_end":4869,"line_start":111,"line_end":111,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4870,"byte_end":4873,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4874,"byte_end":4915,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4916,"byte_end":4919,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4920,"byte_end":4931,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4932,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":19}},{"value":"/ tracing = \"0.1\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4951,"byte_end":4970,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4971,"byte_end":4978,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4979,"byte_end":4982,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":4983,"byte_end":5037,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5038,"byte_end":5041,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Recording Spans and Events","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5042,"byte_end":5075,"line_start":122,"line_end":122,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5076,"byte_end":5079,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Spans and events are recorded using macros.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5080,"byte_end":5127,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5128,"byte_end":5131,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ### Spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5132,"byte_end":5145,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5146,"byte_end":5149,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] macro expands to a [`Span` struct][`Span`] which is used to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5150,"byte_end":5227,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ record a span. The [`Span::enter`] method on that struct records that the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5228,"byte_end":5305,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ span has been entered, and returns a [RAII] guard object, which will exit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5306,"byte_end":5383,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ the span when dropped.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5384,"byte_end":5410,"line_start":131,"line_end":131,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5411,"byte_end":5414,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5415,"byte_end":5431,"line_start":133,"line_end":133,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5432,"byte_end":5435,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5436,"byte_end":5447,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5448,"byte_end":5479,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5480,"byte_end":5497,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/ // Construct a new span named \"my span\" with trace log level.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5498,"byte_end":5563,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5564,"byte_end":5610,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5611,"byte_end":5614,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // Enter the span, returning a guard object.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5615,"byte_end":5663,"line_start":141,"line_end":141,"column_start":1,"column_end":49}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5664,"byte_end":5694,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5695,"byte_end":5698,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // Any trace events that occur before the guard is dropped will occur","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5699,"byte_end":5772,"line_start":144,"line_end":144,"column_start":1,"column_end":74}},{"value":"/ // within the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5773,"byte_end":5796,"line_start":145,"line_end":145,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5797,"byte_end":5800,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ // Dropping the guard will exit the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5801,"byte_end":5846,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5847,"byte_end":5854,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5855,"byte_end":5862,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5863,"byte_end":5866,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The [`#[instrument]`][instrument] attribute provides an easy way to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5867,"byte_end":5938,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ add `tracing` spans to functions. A function annotated with `#[instrument]`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":5939,"byte_end":6018,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ will create and enter a span with that function's name every time the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6019,"byte_end":6092,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ function is called, with arguments to that function will be recorded as","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6093,"byte_end":6168,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ fields using `fmt::Debug`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6169,"byte_end":6199,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6200,"byte_end":6203,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6204,"byte_end":6220,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6221,"byte_end":6234,"line_start":158,"line_end":158,"column_start":1,"column_end":14}},{"value":"/ # // this doctest is ignored because we don't have a way to say","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6235,"byte_end":6302,"line_start":159,"line_end":159,"column_start":1,"column_end":68}},{"value":"/ # // that it should only be run with cfg(feature = \"attributes\")","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6303,"byte_end":6371,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ use tracing::{Level, event, instrument};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6372,"byte_end":6416,"line_start":161,"line_end":161,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6417,"byte_end":6420,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ #[instrument]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6421,"byte_end":6438,"line_start":163,"line_end":163,"column_start":1,"column_end":18}},{"value":"/ pub fn my_function(my_arg: usize) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6439,"byte_end":6478,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/     // This event will be recorded inside a span named `my_function` with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6479,"byte_end":6560,"line_start":165,"line_end":165,"column_start":1,"column_end":82}},{"value":"/     // field `my_arg`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6561,"byte_end":6587,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/     event!(Level::INFO, \"inside my_function!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6588,"byte_end":6639,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6640,"byte_end":6654,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6655,"byte_end":6660,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6661,"byte_end":6679,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6680,"byte_end":6687,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6688,"byte_end":6691,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ For functions which don't have built-in tracing support and can't have","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6692,"byte_end":6766,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ the `#[instrument]` attribute applied (such as from an external crate,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6767,"byte_end":6841,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ the [`Span` struct][`Span`] has a [`in_scope()` method][`in_scope`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6842,"byte_end":6913,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/ which can be used to easily wrap synchonous code in a span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6914,"byte_end":6977,"line_start":176,"line_end":176,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6978,"byte_end":6981,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6982,"byte_end":6998,"line_start":178,"line_end":178,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":6999,"byte_end":7010,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7011,"byte_end":7038,"line_start":180,"line_end":180,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7039,"byte_end":7042,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ # fn doc() -> Result<(), ()> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7043,"byte_end":7077,"line_start":182,"line_end":182,"column_start":1,"column_end":35}},{"value":"/ # mod serde_json {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7078,"byte_end":7100,"line_start":183,"line_end":183,"column_start":1,"column_end":23}},{"value":"/ #    pub(crate) fn from_slice(buf: &[u8]) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7101,"byte_end":7175,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7176,"byte_end":7183,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # let buf: [u8; 0] = [];","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7184,"byte_end":7212,"line_start":186,"line_end":186,"column_start":1,"column_end":29}},{"value":"/ let json = info_span!(\"json.parse\").in_scope(|| serde_json::from_slice(&buf))?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7213,"byte_end":7296,"line_start":187,"line_end":187,"column_start":1,"column_end":84}},{"value":"/ # let _ = json; // suppress unused variable warning","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7297,"byte_end":7352,"line_start":188,"line_end":188,"column_start":1,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7353,"byte_end":7365,"line_start":189,"line_end":189,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7366,"byte_end":7373,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7374,"byte_end":7381,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7382,"byte_end":7385,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ You can find more examples showing how to use this crate [here][examples].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7386,"byte_end":7464,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7465,"byte_end":7468,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [RAII]: https://github.com/rust-unofficial/patterns/blob/master/patterns/behavioural/RAII.md","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7469,"byte_end":7565,"line_start":195,"line_end":195,"column_start":1,"column_end":97}},{"value":"/ [examples]: https://github.com/tokio-rs/tracing/tree/master/examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7566,"byte_end":7638,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7639,"byte_end":7642,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ### Events","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7643,"byte_end":7657,"line_start":198,"line_end":198,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7658,"byte_end":7661,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`Event`]s are recorded using the [`event!`] macro:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7662,"byte_end":7717,"line_start":200,"line_end":200,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7718,"byte_end":7721,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7722,"byte_end":7733,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7734,"byte_end":7751,"line_start":203,"line_end":203,"column_start":1,"column_end":18}},{"value":"/ use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7752,"byte_end":7784,"line_start":204,"line_end":204,"column_start":1,"column_end":33}},{"value":"/ event!(Level::INFO, \"something has happened!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7785,"byte_end":7836,"line_start":205,"line_end":205,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7837,"byte_end":7844,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7845,"byte_end":7852,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7853,"byte_end":7856,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ## Using the Macros","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7857,"byte_end":7880,"line_start":209,"line_end":209,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7881,"byte_end":7884,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] and [`event!`] macros as well as the `#[instrument]` attribute","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7885,"byte_end":7965,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"/ use fairly similar syntax, with some exceptions.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":7966,"byte_end":8018,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8019,"byte_end":8022,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ### Configuring Attributes","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8023,"byte_end":8053,"line_start":214,"line_end":214,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8054,"byte_end":8057,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Both macros require a [`Level`] specifying the verbosity of the span or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8058,"byte_end":8133,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ event. Optionally, the [target] and [parent span] may be overridden. If the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8134,"byte_end":8213,"line_start":217,"line_end":217,"column_start":1,"column_end":80}},{"value":"/ target and parent span are not overridden, they will default to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8214,"byte_end":8285,"line_start":218,"line_end":218,"column_start":1,"column_end":72}},{"value":"/ module path where the macro was invoked and the current span (as determined","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8286,"byte_end":8365,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ by the subscriber), respectively.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8366,"byte_end":8403,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8404,"byte_end":8407,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8408,"byte_end":8424,"line_start":222,"line_end":222,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8425,"byte_end":8428,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8429,"byte_end":8436,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8437,"byte_end":8477,"line_start":225,"line_end":225,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8478,"byte_end":8495,"line_start":226,"line_end":226,"column_start":1,"column_end":18}},{"value":"/ span!(target: \"app_spans\", Level::TRACE, \"my span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8496,"byte_end":8552,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ event!(target: \"app_events\", Level::INFO, \"something has happened!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8553,"byte_end":8626,"line_start":228,"line_end":228,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8627,"byte_end":8634,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8635,"byte_end":8642,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8643,"byte_end":8650,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8651,"byte_end":8691,"line_start":232,"line_end":232,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8692,"byte_end":8709,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8710,"byte_end":8756,"line_start":234,"line_end":234,"column_start":1,"column_end":47}},{"value":"/ event!(parent: &span, Level::INFO, \"something has happened!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8757,"byte_end":8823,"line_start":235,"line_end":235,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8824,"byte_end":8831,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8832,"byte_end":8839,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8840,"byte_end":8843,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The span macros also take a string literal after the level, to set the name","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8844,"byte_end":8923,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"/ of the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8924,"byte_end":8940,"line_start":240,"line_end":240,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8941,"byte_end":8944,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ ### Recording Fields","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8945,"byte_end":8969,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8970,"byte_end":8973,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ Structured fields on spans and events are specified using the syntax","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":8974,"byte_end":9046,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ `field_name = field_value`. Fields are separated by commas.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9047,"byte_end":9110,"line_start":245,"line_end":245,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9111,"byte_end":9114,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9115,"byte_end":9122,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9123,"byte_end":9157,"line_start":248,"line_end":248,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9158,"byte_end":9175,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"/ // records an event with two fields:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9176,"byte_end":9216,"line_start":250,"line_end":250,"column_start":1,"column_end":41}},{"value":"/ //  - \"answer\", with the value 42","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9217,"byte_end":9254,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ //  - \"question\", with the value \"life, the universe and everything\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9255,"byte_end":9327,"line_start":252,"line_end":252,"column_start":1,"column_end":73}},{"value":"/ event!(Level::INFO, answer = 42, question = \"life, the universe, and everything\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9328,"byte_end":9414,"line_start":253,"line_end":253,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9415,"byte_end":9422,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9423,"byte_end":9430,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9431,"byte_end":9434,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ As shorthand, local variables may be used as field values without an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9435,"byte_end":9507,"line_start":257,"line_end":257,"column_start":1,"column_end":73}},{"value":"/ assignment, similar to [struct initializers]. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9508,"byte_end":9570,"line_start":258,"line_end":258,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9571,"byte_end":9574,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9575,"byte_end":9582,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9583,"byte_end":9616,"line_start":261,"line_end":261,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9617,"byte_end":9634,"line_start":262,"line_end":262,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9635,"byte_end":9659,"line_start":263,"line_end":263,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9660,"byte_end":9663,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ span!(Level::TRACE, \"login\", user);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9664,"byte_end":9703,"line_start":265,"line_end":265,"column_start":1,"column_end":40}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9704,"byte_end":9728,"line_start":266,"line_end":266,"column_start":1,"column_end":25}},{"value":"/ span!(Level::TRACE, \"login\", user = user);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9729,"byte_end":9775,"line_start":267,"line_end":267,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9776,"byte_end":9783,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9784,"byte_end":9790,"line_start":269,"line_end":269,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9791,"byte_end":9794,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ Field names can include dots, but should not be terminated by them:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9795,"byte_end":9866,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9867,"byte_end":9874,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9875,"byte_end":9908,"line_start":273,"line_end":273,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9909,"byte_end":9926,"line_start":274,"line_end":274,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9927,"byte_end":9951,"line_start":275,"line_end":275,"column_start":1,"column_end":25}},{"value":"/ let email = \"ferris@rust-lang.org\";","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9952,"byte_end":9991,"line_start":276,"line_end":276,"column_start":1,"column_end":40}},{"value":"/ span!(Level::TRACE, \"login\", user, user.email = email);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":9992,"byte_end":10051,"line_start":277,"line_end":277,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10052,"byte_end":10059,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10060,"byte_end":10066,"line_start":279,"line_end":279,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10067,"byte_end":10070,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ Since field names can include dots, fields on local structs can be used","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10071,"byte_end":10146,"line_start":281,"line_end":281,"column_start":1,"column_end":76}},{"value":"/ using the local variable shorthand:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10147,"byte_end":10186,"line_start":282,"line_end":282,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10187,"byte_end":10194,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10195,"byte_end":10228,"line_start":284,"line_end":284,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10229,"byte_end":10246,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/ # struct User {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10247,"byte_end":10266,"line_start":286,"line_end":286,"column_start":1,"column_end":20}},{"value":"/ #    name: &'static str,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10267,"byte_end":10295,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ #    email: &'static str,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10296,"byte_end":10325,"line_start":288,"line_end":288,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10326,"byte_end":10333,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ let user = User {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10334,"byte_end":10355,"line_start":290,"line_end":290,"column_start":1,"column_end":22}},{"value":"/     name: \"ferris\",","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10356,"byte_end":10379,"line_start":291,"line_end":291,"column_start":1,"column_end":24}},{"value":"/     email: \"ferris@rust-lang.org\",","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10380,"byte_end":10418,"line_start":292,"line_end":292,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10419,"byte_end":10425,"line_start":293,"line_end":293,"column_start":1,"column_end":7}},{"value":"/ // the span will have the fields `user.name = \"ferris\"` and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10426,"byte_end":10489,"line_start":294,"line_end":294,"column_start":1,"column_end":64}},{"value":"/ // `user.email = \"ferris@rust-lang.org\"`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10490,"byte_end":10535,"line_start":295,"line_end":295,"column_start":1,"column_end":46}},{"value":"/ span!(Level::TRACE, \"login\", user.name, user.email);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10536,"byte_end":10592,"line_start":296,"line_end":296,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10593,"byte_end":10600,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10601,"byte_end":10607,"line_start":298,"line_end":298,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10608,"byte_end":10611,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Fields with names that are not Rust identifiers, or with names that are Rust reserved words,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10612,"byte_end":10708,"line_start":300,"line_end":300,"column_start":1,"column_end":97}},{"value":"/ may be created using quoted string literals. However, this may not be used with the local","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10709,"byte_end":10802,"line_start":301,"line_end":301,"column_start":1,"column_end":94}},{"value":"/ variable shorthand.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10803,"byte_end":10826,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10827,"byte_end":10834,"line_start":303,"line_end":303,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10835,"byte_end":10868,"line_start":304,"line_end":304,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10869,"byte_end":10886,"line_start":305,"line_end":305,"column_start":1,"column_end":18}},{"value":"/ // records an event with fields whose names are not Rust identifiers","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10887,"byte_end":10959,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ //  - \"guid:x-request-id\", containing a `:`, with the value \"abcdef\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":10960,"byte_end":11032,"line_start":307,"line_end":307,"column_start":1,"column_end":73}},{"value":"/ //  - \"type\", which is a reserved word, with the value \"request\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11033,"byte_end":11101,"line_start":308,"line_end":308,"column_start":1,"column_end":69}},{"value":"/ span!(Level::TRACE, \"api\", \"guid:x-request-id\" = \"abcdef\", \"type\" = \"request\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11102,"byte_end":11185,"line_start":309,"line_end":309,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11186,"byte_end":11193,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11194,"byte_end":11200,"line_start":311,"line_end":311,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11201,"byte_end":11204,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ The `?` sigil is shorthand that specifies a field should be recorded using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11205,"byte_end":11283,"line_start":313,"line_end":313,"column_start":1,"column_end":79}},{"value":"/ its [`fmt::Debug`] implementation:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11284,"byte_end":11322,"line_start":314,"line_end":314,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11323,"byte_end":11330,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11331,"byte_end":11365,"line_start":316,"line_end":316,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11366,"byte_end":11383,"line_start":317,"line_end":317,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11384,"byte_end":11404,"line_start":318,"line_end":318,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11405,"byte_end":11426,"line_start":319,"line_end":319,"column_start":1,"column_end":22}},{"value":"/     field: &'static str,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11427,"byte_end":11455,"line_start":320,"line_end":320,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11456,"byte_end":11461,"line_start":321,"line_end":321,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11462,"byte_end":11465,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11466,"byte_end":11496,"line_start":323,"line_end":323,"column_start":1,"column_end":31}},{"value":"/     field: \"Hello world!\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11497,"byte_end":11526,"line_start":324,"line_end":324,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11527,"byte_end":11533,"line_start":325,"line_end":325,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11534,"byte_end":11537,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ // `my_struct` will be recorded using its `fmt::Debug` implementation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11538,"byte_end":11612,"line_start":327,"line_end":327,"column_start":1,"column_end":75}},{"value":"/ event!(Level::TRACE, greeting = ?my_struct);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11613,"byte_end":11661,"line_start":328,"line_end":328,"column_start":1,"column_end":49}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11662,"byte_end":11686,"line_start":329,"line_end":329,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::debug(&my_struct));","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11687,"byte_end":11758,"line_start":330,"line_end":330,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11759,"byte_end":11766,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11767,"byte_end":11774,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11775,"byte_end":11778,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ The `%` sigil operates similarly, but indicates that the value should be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11779,"byte_end":11855,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ recorded using its [`fmt::Display`] implementation:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11856,"byte_end":11911,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11912,"byte_end":11919,"line_start":336,"line_end":336,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11920,"byte_end":11954,"line_start":337,"line_end":337,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11955,"byte_end":11972,"line_start":338,"line_end":338,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11973,"byte_end":11995,"line_start":339,"line_end":339,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":11996,"byte_end":12019,"line_start":340,"line_end":340,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12020,"byte_end":12050,"line_start":341,"line_end":341,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12051,"byte_end":12058,"line_start":342,"line_end":342,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12059,"byte_end":12064,"line_start":343,"line_end":343,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12065,"byte_end":12097,"line_start":344,"line_end":344,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12098,"byte_end":12129,"line_start":345,"line_end":345,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12130,"byte_end":12138,"line_start":346,"line_end":346,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12139,"byte_end":12221,"line_start":347,"line_end":347,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, greeting = %my_struct.field);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12222,"byte_end":12276,"line_start":348,"line_end":348,"column_start":1,"column_end":55}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12277,"byte_end":12301,"line_start":349,"line_end":349,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::display(&my_struct.field));","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12302,"byte_end":12381,"line_start":350,"line_end":350,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12382,"byte_end":12389,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12390,"byte_end":12397,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12398,"byte_end":12401,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ The `%` and `?` sigils may also be used with local variable shorthand:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12402,"byte_end":12476,"line_start":354,"line_end":354,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12477,"byte_end":12480,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12481,"byte_end":12488,"line_start":356,"line_end":356,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12489,"byte_end":12523,"line_start":357,"line_end":357,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12524,"byte_end":12541,"line_start":358,"line_end":358,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12542,"byte_end":12564,"line_start":359,"line_end":359,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12565,"byte_end":12588,"line_start":360,"line_end":360,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12589,"byte_end":12619,"line_start":361,"line_end":361,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12620,"byte_end":12627,"line_start":362,"line_end":362,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12628,"byte_end":12633,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12634,"byte_end":12666,"line_start":364,"line_end":364,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12667,"byte_end":12698,"line_start":365,"line_end":365,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12699,"byte_end":12707,"line_start":366,"line_end":366,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12708,"byte_end":12790,"line_start":367,"line_end":367,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, %my_struct.field);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12791,"byte_end":12834,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12835,"byte_end":12842,"line_start":369,"line_end":369,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12843,"byte_end":12850,"line_start":370,"line_end":370,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12851,"byte_end":12854,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ Additionally, a span may declare fields with the special value [`Empty`],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12855,"byte_end":12932,"line_start":372,"line_end":372,"column_start":1,"column_end":78}},{"value":"/ which indicates that that the value for that field does not currently exist","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":12933,"byte_end":13012,"line_start":373,"line_end":373,"column_start":1,"column_end":80}},{"value":"/ but may be recorded later. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13013,"byte_end":13056,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13057,"byte_end":13060,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13061,"byte_end":13068,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13069,"byte_end":13106,"line_start":377,"line_end":377,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13107,"byte_end":13110,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13111,"byte_end":13194,"line_start":379,"line_end":379,"column_start":1,"column_end":84}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13195,"byte_end":13229,"line_start":380,"line_end":380,"column_start":1,"column_end":35}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13230,"byte_end":13318,"line_start":381,"line_end":381,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13319,"byte_end":13322,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13323,"byte_end":13333,"line_start":383,"line_end":383,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13334,"byte_end":13337,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13338,"byte_end":13385,"line_start":385,"line_end":385,"column_start":1,"column_end":48}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13386,"byte_end":13432,"line_start":386,"line_end":386,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13433,"byte_end":13440,"line_start":387,"line_end":387,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13441,"byte_end":13444,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ Note that a span may have up to 32 fields. The following will not compile:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13445,"byte_end":13523,"line_start":389,"line_end":389,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13524,"byte_end":13527,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13528,"byte_end":13552,"line_start":391,"line_end":391,"column_start":1,"column_end":25}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13553,"byte_end":13578,"line_start":392,"line_end":392,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13579,"byte_end":13596,"line_start":393,"line_end":393,"column_start":1,"column_end":18}},{"value":"/ let bad_span = span!(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13597,"byte_end":13622,"line_start":394,"line_end":394,"column_start":1,"column_end":26}},{"value":"/     Level::TRACE,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13623,"byte_end":13644,"line_start":395,"line_end":395,"column_start":1,"column_end":22}},{"value":"/     \"too many fields!\",","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13645,"byte_end":13672,"line_start":396,"line_end":396,"column_start":1,"column_end":28}},{"value":"/     a = 1, b = 2, c = 3, d = 4, e = 5, f = 6, g = 7, h = 8, i = 9,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13673,"byte_end":13743,"line_start":397,"line_end":397,"column_start":1,"column_end":71}},{"value":"/     j = 10, k = 11, l = 12, m = 13, n = 14, o = 15, p = 16, q = 17,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13744,"byte_end":13815,"line_start":398,"line_end":398,"column_start":1,"column_end":72}},{"value":"/     r = 18, s = 19, t = 20, u = 21, v = 22, w = 23, x = 24, y = 25,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13816,"byte_end":13887,"line_start":399,"line_end":399,"column_start":1,"column_end":72}},{"value":"/     z = 26, aa = 27, bb = 28, cc = 29, dd = 30, ee = 31, ff = 32, gg = 33","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13888,"byte_end":13965,"line_start":400,"line_end":400,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13966,"byte_end":13972,"line_start":401,"line_end":401,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13973,"byte_end":13980,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13981,"byte_end":13988,"line_start":403,"line_end":403,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13989,"byte_end":13992,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ Finally, events may also include human-readable messages, in the form of a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":13993,"byte_end":14071,"line_start":405,"line_end":405,"column_start":1,"column_end":79}},{"value":"/ [format string][fmt] and (optional) arguments, **after** the event's","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14072,"byte_end":14144,"line_start":406,"line_end":406,"column_start":1,"column_end":73}},{"value":"/ key-value fields. If a format string and arguments are provided,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14145,"byte_end":14213,"line_start":407,"line_end":407,"column_start":1,"column_end":69}},{"value":"/ they will implicitly create a new field named `message` whose value is the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14214,"byte_end":14292,"line_start":408,"line_end":408,"column_start":1,"column_end":79}},{"value":"/ provided set of format arguments.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14293,"byte_end":14330,"line_start":409,"line_end":409,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14331,"byte_end":14334,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14335,"byte_end":14351,"line_start":411,"line_end":411,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14352,"byte_end":14355,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14356,"byte_end":14363,"line_start":413,"line_end":413,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14364,"byte_end":14398,"line_start":414,"line_end":414,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14399,"byte_end":14416,"line_start":415,"line_end":415,"column_start":1,"column_end":18}},{"value":"/ let question = \"the answer to the ultimate question of life, the universe, and everything\";","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14417,"byte_end":14512,"line_start":416,"line_end":416,"column_start":1,"column_end":96}},{"value":"/ let answer = 42;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14513,"byte_end":14533,"line_start":417,"line_end":417,"column_start":1,"column_end":21}},{"value":"/ // records an event with the following fields:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14534,"byte_end":14584,"line_start":418,"line_end":418,"column_start":1,"column_end":51}},{"value":"/ // - `question.answer` with the value 42,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14585,"byte_end":14630,"line_start":419,"line_end":419,"column_start":1,"column_end":46}},{"value":"/ // - `question.tricky` with the value `true`,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14631,"byte_end":14680,"line_start":420,"line_end":420,"column_start":1,"column_end":50}},{"value":"/ // - \"message\", with the value \"the answer to the ultimate question of life, the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14681,"byte_end":14765,"line_start":421,"line_end":421,"column_start":1,"column_end":85}},{"value":"/ //    universe, and everything is 42.\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14766,"byte_end":14808,"line_start":422,"line_end":422,"column_start":1,"column_end":43}},{"value":"/ event!(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14809,"byte_end":14820,"line_start":423,"line_end":423,"column_start":1,"column_end":12}},{"value":"/     Level::DEBUG,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14821,"byte_end":14842,"line_start":424,"line_end":424,"column_start":1,"column_end":22}},{"value":"/     question.answer = answer,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14843,"byte_end":14876,"line_start":425,"line_end":425,"column_start":1,"column_end":34}},{"value":"/     question.tricky = true,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14877,"byte_end":14908,"line_start":426,"line_end":426,"column_start":1,"column_end":32}},{"value":"/     \"the answer to {} is {}.\", question, answer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14909,"byte_end":14960,"line_start":427,"line_end":427,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14961,"byte_end":14967,"line_start":428,"line_end":428,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14968,"byte_end":14975,"line_start":429,"line_end":429,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14976,"byte_end":14983,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14984,"byte_end":14987,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Specifying a formatted message in this manner does not allocate by default.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":14988,"byte_end":15067,"line_start":432,"line_end":432,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15068,"byte_end":15071,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ [struct initializers]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-the-field-init-shorthand-when-variables-and-fields-have-the-same-name","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15072,"byte_end":15235,"line_start":434,"line_end":434,"column_start":1,"column_end":164}},{"value":"/ [target]: struct.Metadata.html#method.target","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15236,"byte_end":15284,"line_start":435,"line_end":435,"column_start":1,"column_end":49}},{"value":"/ [parent span]: span/struct.Attributes.html#method.parent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15285,"byte_end":15345,"line_start":436,"line_end":436,"column_start":1,"column_end":61}},{"value":"/ [determined contextually]: span/struct.Attributes.html#method.is_contextual","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15346,"byte_end":15425,"line_start":437,"line_end":437,"column_start":1,"column_end":80}},{"value":"/ [`fmt::Debug`]: https://doc.rust-lang.org/std/fmt/trait.Debug.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15426,"byte_end":15496,"line_start":438,"line_end":438,"column_start":1,"column_end":71}},{"value":"/ [`fmt::Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15497,"byte_end":15571,"line_start":439,"line_end":439,"column_start":1,"column_end":75}},{"value":"/ [fmt]: https://doc.rust-lang.org/std/fmt/#usage","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15572,"byte_end":15623,"line_start":440,"line_end":440,"column_start":1,"column_end":52}},{"value":"/ [`Empty`]: field/struct.Empty.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15624,"byte_end":15662,"line_start":441,"line_end":441,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15663,"byte_end":15666,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand Macros","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15667,"byte_end":15691,"line_start":443,"line_end":443,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15692,"byte_end":15695,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ `tracing` also offers a number of macros with preset verbosity levels.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15696,"byte_end":15770,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/ The [`trace!`], [`debug!`], [`info!`], [`warn!`], and [`error!`] behave","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15771,"byte_end":15846,"line_start":446,"line_end":446,"column_start":1,"column_end":76}},{"value":"/ similarly to the [`event!`] macro, but with the [`Level`] argument already","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15847,"byte_end":15925,"line_start":447,"line_end":447,"column_start":1,"column_end":79}},{"value":"/ specified, while the corresponding [`trace_span!`], [`debug_span!`],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15926,"byte_end":15998,"line_start":448,"line_end":448,"column_start":1,"column_end":73}},{"value":"/ [`info_span!`], [`warn_span!`], and [`error_span!`] macros are the same,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":15999,"byte_end":16075,"line_start":449,"line_end":449,"column_start":1,"column_end":77}},{"value":"/ but for the [`span!`] macro.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16076,"byte_end":16108,"line_start":450,"line_end":450,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16109,"byte_end":16112,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ These are intended both as a shorthand, and for compatibility with the [`log`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16113,"byte_end":16195,"line_start":452,"line_end":452,"column_start":1,"column_end":83}},{"value":"/ crate (see the next section).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16196,"byte_end":16229,"line_start":453,"line_end":453,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16230,"byte_end":16233,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ [`span!`]: macro.span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16234,"byte_end":16264,"line_start":455,"line_end":455,"column_start":1,"column_end":31}},{"value":"/ [`event!`]: macro.event.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16265,"byte_end":16297,"line_start":456,"line_end":456,"column_start":1,"column_end":33}},{"value":"/ [`trace!`]: macro.trace.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16298,"byte_end":16330,"line_start":457,"line_end":457,"column_start":1,"column_end":33}},{"value":"/ [`debug!`]: macro.debug.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16331,"byte_end":16363,"line_start":458,"line_end":458,"column_start":1,"column_end":33}},{"value":"/ [`info!`]: macro.info.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16364,"byte_end":16394,"line_start":459,"line_end":459,"column_start":1,"column_end":31}},{"value":"/ [`warn!`]: macro.warn.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16395,"byte_end":16425,"line_start":460,"line_end":460,"column_start":1,"column_end":31}},{"value":"/ [`error!`]: macro.error.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16426,"byte_end":16458,"line_start":461,"line_end":461,"column_start":1,"column_end":33}},{"value":"/ [`trace_span!`]: macro.trace_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16459,"byte_end":16501,"line_start":462,"line_end":462,"column_start":1,"column_end":43}},{"value":"/ [`debug_span!`]: macro.debug_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16502,"byte_end":16544,"line_start":463,"line_end":463,"column_start":1,"column_end":43}},{"value":"/ [`info_span!`]: macro.info_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16545,"byte_end":16585,"line_start":464,"line_end":464,"column_start":1,"column_end":41}},{"value":"/ [`warn_span!`]: macro.warn_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16586,"byte_end":16626,"line_start":465,"line_end":465,"column_start":1,"column_end":41}},{"value":"/ [`error_span!`]: macro.error_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16627,"byte_end":16669,"line_start":466,"line_end":466,"column_start":1,"column_end":43}},{"value":"/ [`Level`]: struct.Level.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16670,"byte_end":16702,"line_start":467,"line_end":467,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16703,"byte_end":16706,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ### For `log` Users","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16707,"byte_end":16730,"line_start":469,"line_end":469,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16731,"byte_end":16734,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ Users of the [`log`] crate should note that `tracing` exposes a set of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16735,"byte_end":16809,"line_start":471,"line_end":471,"column_start":1,"column_end":75}},{"value":"/ macros for creating `Event`s (`trace!`, `debug!`, `info!`, `warn!`, and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16810,"byte_end":16885,"line_start":472,"line_end":472,"column_start":1,"column_end":76}},{"value":"/ `error!`) which may be invoked with the same syntax as the similarly-named","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16886,"byte_end":16964,"line_start":473,"line_end":473,"column_start":1,"column_end":79}},{"value":"/ macros from the `log` crate. Often, the process of converting a project to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":16965,"byte_end":17043,"line_start":474,"line_end":474,"column_start":1,"column_end":79}},{"value":"/ use `tracing` can begin with a simple drop-in replacement.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17044,"byte_end":17106,"line_start":475,"line_end":475,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17107,"byte_end":17110,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ Let's consider the `log` crate's yak-shaving example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17111,"byte_end":17168,"line_start":477,"line_end":477,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17169,"byte_end":17172,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17173,"byte_end":17191,"line_start":479,"line_end":479,"column_start":1,"column_end":19}},{"value":"/ use std::{error::Error, io};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17192,"byte_end":17224,"line_start":480,"line_end":480,"column_start":1,"column_end":33}},{"value":"/ use tracing::{debug, error, info, span, warn, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17225,"byte_end":17282,"line_start":481,"line_end":481,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17283,"byte_end":17286,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ // the `#[tracing::instrument]` attribute creates and enters a span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17287,"byte_end":17358,"line_start":483,"line_end":483,"column_start":1,"column_end":72}},{"value":"/ // every time the instrumented function is called. The span is named after the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17359,"byte_end":17441,"line_start":484,"line_end":484,"column_start":1,"column_end":83}},{"value":"/ // the function or method. Parameters passed to the function are recorded as fields.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17442,"byte_end":17530,"line_start":485,"line_end":485,"column_start":1,"column_end":89}},{"value":"/ #[tracing::instrument]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17531,"byte_end":17557,"line_start":486,"line_end":486,"column_start":1,"column_end":27}},{"value":"/ pub fn shave(yak: usize) -> Result<(), Box<dyn Error + 'static>> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17558,"byte_end":17628,"line_start":487,"line_end":487,"column_start":1,"column_end":71}},{"value":"/     // this creates an event at the DEBUG level with two fields:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17629,"byte_end":17697,"line_start":488,"line_end":488,"column_start":1,"column_end":69}},{"value":"/     // - `excitement`, with the key \"excitement\" and the value \"yay!\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17698,"byte_end":17771,"line_start":489,"line_end":489,"column_start":1,"column_end":74}},{"value":"/     // - `message`, with the key \"message\" and the value \"hello! I'm gonna shave a yak.\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17772,"byte_end":17864,"line_start":490,"line_end":490,"column_start":1,"column_end":93}},{"value":"/     //","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17865,"byte_end":17875,"line_start":491,"line_end":491,"column_start":1,"column_end":11}},{"value":"/     // unlike other fields, `message`'s shorthand initialization is just the string itself.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17876,"byte_end":17971,"line_start":492,"line_end":492,"column_start":1,"column_end":96}},{"value":"/     debug!(excitement = \"yay!\", \"hello! I'm gonna shave a yak.\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":17972,"byte_end":18041,"line_start":493,"line_end":493,"column_start":1,"column_end":70}},{"value":"/     if yak == 3 {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18042,"byte_end":18063,"line_start":494,"line_end":494,"column_start":1,"column_end":22}},{"value":"/         warn!(\"could not locate yak!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18064,"byte_end":18107,"line_start":495,"line_end":495,"column_start":1,"column_end":44}},{"value":"/         // note that this is intended to demonstrate `tracing`'s features, not idiomatic","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18108,"byte_end":18200,"line_start":496,"line_end":496,"column_start":1,"column_end":93}},{"value":"/         // error handling! in a library or application, you should consider returning","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18201,"byte_end":18290,"line_start":497,"line_end":497,"column_start":1,"column_end":90}},{"value":"/         // a dedicated `YakError`. libraries like snafu or thiserror make this easy.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18291,"byte_end":18379,"line_start":498,"line_end":498,"column_start":1,"column_end":89}},{"value":"/         return Err(io::Error::new(io::ErrorKind::Other, \"shaving yak failed!\").into());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18380,"byte_end":18471,"line_start":499,"line_end":499,"column_start":1,"column_end":92}},{"value":"/     } else {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18472,"byte_end":18488,"line_start":500,"line_end":500,"column_start":1,"column_end":17}},{"value":"/         debug!(\"yak shaved successfully\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18489,"byte_end":18535,"line_start":501,"line_end":501,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18536,"byte_end":18545,"line_start":502,"line_end":502,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18546,"byte_end":18560,"line_start":503,"line_end":503,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18561,"byte_end":18566,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18567,"byte_end":18570,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ pub fn shave_all(yaks: usize) -> usize {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18571,"byte_end":18615,"line_start":506,"line_end":506,"column_start":1,"column_end":45}},{"value":"/     // Constructs a new span named \"shaving_yaks\" at the TRACE level,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18616,"byte_end":18689,"line_start":507,"line_end":507,"column_start":1,"column_end":74}},{"value":"/     // and a field whose key is \"yaks\". This is equivalent to writing:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18690,"byte_end":18764,"line_start":508,"line_end":508,"column_start":1,"column_end":75}},{"value":"/     //","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18765,"byte_end":18775,"line_start":509,"line_end":509,"column_start":1,"column_end":11}},{"value":"/     // let span = span!(Level::TRACE, \"shaving_yaks\", yaks = yaks);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18776,"byte_end":18847,"line_start":510,"line_end":510,"column_start":1,"column_end":72}},{"value":"/     //","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18848,"byte_end":18858,"line_start":511,"line_end":511,"column_start":1,"column_end":11}},{"value":"/     // local variables (`yaks`) can be used as field values","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18859,"byte_end":18922,"line_start":512,"line_end":512,"column_start":1,"column_end":64}},{"value":"/     // without an assignment, similar to struct initializers.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18923,"byte_end":18988,"line_start":513,"line_end":513,"column_start":1,"column_end":66}},{"value":"/     let _span = span!(Level::TRACE, \"shaving_yaks\", yaks).entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":18989,"byte_end":19061,"line_start":514,"line_end":514,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19062,"byte_end":19065,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/     info!(\"shaving yaks\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19066,"byte_end":19096,"line_start":516,"line_end":516,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19097,"byte_end":19100,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/     let mut yaks_shaved = 0;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19101,"byte_end":19133,"line_start":518,"line_end":518,"column_start":1,"column_end":33}},{"value":"/     for yak in 1..=yaks {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19134,"byte_end":19163,"line_start":519,"line_end":519,"column_start":1,"column_end":30}},{"value":"/         let res = shave(yak);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19164,"byte_end":19197,"line_start":520,"line_end":520,"column_start":1,"column_end":34}},{"value":"/         debug!(yak, shaved = res.is_ok());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19198,"byte_end":19244,"line_start":521,"line_end":521,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19245,"byte_end":19248,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/         if let Err(ref error) = res {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19249,"byte_end":19290,"line_start":523,"line_end":523,"column_start":1,"column_end":42}},{"value":"/             // Like spans, events can also use the field initialization shorthand.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19291,"byte_end":19377,"line_start":524,"line_end":524,"column_start":1,"column_end":87}},{"value":"/             // In this instance, `yak` is the field being initalized.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19378,"byte_end":19451,"line_start":525,"line_end":525,"column_start":1,"column_end":74}},{"value":"/             error!(yak, error = error.as_ref(), \"failed to shave yak!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19452,"byte_end":19528,"line_start":526,"line_end":526,"column_start":1,"column_end":77}},{"value":"/         } else {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19529,"byte_end":19549,"line_start":527,"line_end":527,"column_start":1,"column_end":21}},{"value":"/             yaks_shaved += 1;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19550,"byte_end":19583,"line_start":528,"line_end":528,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19584,"byte_end":19597,"line_start":529,"line_end":529,"column_start":1,"column_end":14}},{"value":"/         debug!(yaks_shaved);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19598,"byte_end":19630,"line_start":530,"line_end":530,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19631,"byte_end":19640,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19641,"byte_end":19644,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/     yaks_shaved","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19645,"byte_end":19664,"line_start":533,"line_end":533,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19665,"byte_end":19670,"line_start":534,"line_end":534,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19671,"byte_end":19678,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19679,"byte_end":19682,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19683,"byte_end":19702,"line_start":537,"line_end":537,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19703,"byte_end":19706,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `tracing` crate, and use the provided","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19707,"byte_end":19782,"line_start":539,"line_end":539,"column_start":1,"column_end":76}},{"value":"/ macros to record whatever information will be useful to downstream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19783,"byte_end":19853,"line_start":540,"line_end":540,"column_start":1,"column_end":71}},{"value":"/ consumers.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19854,"byte_end":19868,"line_start":541,"line_end":541,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19869,"byte_end":19872,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19873,"byte_end":19894,"line_start":543,"line_end":543,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19895,"byte_end":19898,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ In order to record trace events, executables have to use a `Subscriber`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19899,"byte_end":19974,"line_start":545,"line_end":545,"column_start":1,"column_end":76}},{"value":"/ implementation compatible with `tracing`. A `Subscriber` implements a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":19975,"byte_end":20048,"line_start":546,"line_end":546,"column_start":1,"column_end":74}},{"value":"/ way of collecting trace data, such as by logging it to standard output.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20049,"byte_end":20124,"line_start":547,"line_end":547,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20125,"byte_end":20128,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ This library does not contain any `Subscriber` implementations; these are","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20129,"byte_end":20206,"line_start":549,"line_end":549,"column_start":1,"column_end":78}},{"value":"/ provided by [other crates](#related-crates).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20207,"byte_end":20255,"line_start":550,"line_end":550,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20256,"byte_end":20259,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ The simplest way to use a subscriber is to call the [`set_global_default`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20260,"byte_end":20338,"line_start":552,"line_end":552,"column_start":1,"column_end":79}},{"value":"/ function:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20339,"byte_end":20352,"line_start":553,"line_end":553,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20353,"byte_end":20356,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20357,"byte_end":20364,"line_start":555,"line_end":555,"column_start":1,"column_end":8}},{"value":"/ extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20365,"byte_end":20390,"line_start":556,"line_end":556,"column_start":1,"column_end":26}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20391,"byte_end":20422,"line_start":557,"line_end":557,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20423,"byte_end":20485,"line_start":558,"line_end":558,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20486,"byte_end":20536,"line_start":559,"line_end":559,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20537,"byte_end":20605,"line_start":560,"line_end":560,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20606,"byte_end":20653,"line_start":561,"line_end":561,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20654,"byte_end":20700,"line_start":562,"line_end":562,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20701,"byte_end":20757,"line_start":563,"line_end":563,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20758,"byte_end":20815,"line_start":564,"line_end":564,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20816,"byte_end":20850,"line_start":565,"line_end":565,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20851,"byte_end":20884,"line_start":566,"line_end":566,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20885,"byte_end":20892,"line_start":567,"line_end":567,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20893,"byte_end":20919,"line_start":568,"line_end":568,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20920,"byte_end":20962,"line_start":569,"line_end":569,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20963,"byte_end":20970,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20971,"byte_end":20988,"line_start":571,"line_end":571,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20989,"byte_end":20992,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":20993,"byte_end":21038,"line_start":573,"line_end":573,"column_start":1,"column_end":46}},{"value":"/ tracing::subscriber::set_global_default(my_subscriber)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21039,"byte_end":21097,"line_start":574,"line_end":574,"column_start":1,"column_end":59}},{"value":"/     .expect(\"setting tracing default failed\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21098,"byte_end":21148,"line_start":575,"line_end":575,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21149,"byte_end":21156,"line_start":576,"line_end":576,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21157,"byte_end":21164,"line_start":577,"line_end":577,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21165,"byte_end":21168,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21169,"byte_end":21198,"line_start":579,"line_end":579,"column_start":1,"column_end":30}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21199,"byte_end":21331,"line_start":580,"line_end":580,"column_start":1,"column_end":133}},{"value":"/ <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21332,"byte_end":21408,"line_start":581,"line_end":581,"column_start":1,"column_end":77}},{"value":"/ <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21409,"byte_end":21482,"line_start":582,"line_end":582,"column_start":1,"column_end":74}},{"value":"/ executables that depend on the library try to set the default later.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21483,"byte_end":21555,"line_start":583,"line_end":583,"column_start":1,"column_end":73}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21556,"byte_end":21572,"line_start":584,"line_end":584,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21573,"byte_end":21576,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ This subscriber will be used as the default in all threads for the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21577,"byte_end":21647,"line_start":586,"line_end":586,"column_start":1,"column_end":71}},{"value":"/ remainder of the duration of the program, similar to setting the logger","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21648,"byte_end":21723,"line_start":587,"line_end":587,"column_start":1,"column_end":76}},{"value":"/ in the `log` crate.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21724,"byte_end":21747,"line_start":588,"line_end":588,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21748,"byte_end":21751,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ In addition, the default subscriber can be set through using the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21752,"byte_end":21820,"line_start":590,"line_end":590,"column_start":1,"column_end":69}},{"value":"/ [`with_default`] function. This follows the `tokio` pattern of using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21821,"byte_end":21893,"line_start":591,"line_end":591,"column_start":1,"column_end":73}},{"value":"/ closures to represent executing code in a context that is exited at the end","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21894,"byte_end":21973,"line_start":592,"line_end":592,"column_start":1,"column_end":80}},{"value":"/ of the closure. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":21974,"byte_end":22006,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22007,"byte_end":22010,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22011,"byte_end":22022,"line_start":595,"line_end":595,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22023,"byte_end":22054,"line_start":596,"line_end":596,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22055,"byte_end":22117,"line_start":597,"line_end":597,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22118,"byte_end":22168,"line_start":598,"line_end":598,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22169,"byte_end":22237,"line_start":599,"line_end":599,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22238,"byte_end":22285,"line_start":600,"line_end":600,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22286,"byte_end":22332,"line_start":601,"line_end":601,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22333,"byte_end":22389,"line_start":602,"line_end":602,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22390,"byte_end":22447,"line_start":603,"line_end":603,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22448,"byte_end":22482,"line_start":604,"line_end":604,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22483,"byte_end":22516,"line_start":605,"line_end":605,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22517,"byte_end":22524,"line_start":606,"line_end":606,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22525,"byte_end":22551,"line_start":607,"line_end":607,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22552,"byte_end":22594,"line_start":608,"line_end":608,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22595,"byte_end":22602,"line_start":609,"line_end":609,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22603,"byte_end":22620,"line_start":610,"line_end":610,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22621,"byte_end":22624,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22625,"byte_end":22670,"line_start":612,"line_end":612,"column_start":1,"column_end":46}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22671,"byte_end":22700,"line_start":613,"line_end":613,"column_start":1,"column_end":30}},{"value":"/ tracing::subscriber::with_default(my_subscriber, || {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22701,"byte_end":22758,"line_start":614,"line_end":614,"column_start":1,"column_end":58}},{"value":"/     // Any trace events generated in this closure or by functions it calls","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22759,"byte_end":22837,"line_start":615,"line_end":615,"column_start":1,"column_end":79}},{"value":"/     // will be collected by `my_subscriber`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22838,"byte_end":22886,"line_start":616,"line_end":616,"column_start":1,"column_end":49}},{"value":"/ })","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22887,"byte_end":22893,"line_start":617,"line_end":617,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22894,"byte_end":22901,"line_start":618,"line_end":618,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22902,"byte_end":22909,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22910,"byte_end":22913,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This approach allows trace data to be collected by multiple subscribers","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22914,"byte_end":22989,"line_start":621,"line_end":621,"column_start":1,"column_end":76}},{"value":"/ within different contexts in the program. Note that the override only applies to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":22990,"byte_end":23078,"line_start":622,"line_end":622,"column_start":1,"column_end":89}},{"value":"/ currently executing thread; other threads will not see the change from with_default.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23079,"byte_end":23167,"line_start":623,"line_end":623,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23168,"byte_end":23171,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ Any trace events generated outside the context of a subscriber will not be collected.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23172,"byte_end":23261,"line_start":625,"line_end":625,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23262,"byte_end":23265,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ Once a subscriber has been set, instrumentation points may be added to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23266,"byte_end":23344,"line_start":627,"line_end":627,"column_start":1,"column_end":79}},{"value":"/ executable using the `tracing` crate's macros.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23345,"byte_end":23395,"line_start":628,"line_end":628,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23396,"byte_end":23399,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ ## `log` Compatibility","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23400,"byte_end":23426,"line_start":630,"line_end":630,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23427,"byte_end":23430,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ The [`log`] crate provides a simple, lightweight logging facade for Rust.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23431,"byte_end":23508,"line_start":632,"line_end":632,"column_start":1,"column_end":78}},{"value":"/ While `tracing` builds upon `log`'s foundation with richer structured","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23509,"byte_end":23582,"line_start":633,"line_end":633,"column_start":1,"column_end":74}},{"value":"/ diagnostic data, `log`'s simplicity and ubiquity make it the \"lowest common","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23583,"byte_end":23662,"line_start":634,"line_end":634,"column_start":1,"column_end":80}},{"value":"/ denominator\" for text-based logging in Rust — a vast majority of Rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23663,"byte_end":23738,"line_start":635,"line_end":635,"column_start":1,"column_end":74}},{"value":"/ libraries and applications either emit or consume `log` records. Therefore,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23739,"byte_end":23818,"line_start":636,"line_end":636,"column_start":1,"column_end":80}},{"value":"/ `tracing` provides multiple forms of interoperability with `log`: `tracing`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23819,"byte_end":23898,"line_start":637,"line_end":637,"column_start":1,"column_end":80}},{"value":"/ instrumentation can emit `log` records, and a compatibility layer enables","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23899,"byte_end":23976,"line_start":638,"line_end":638,"column_start":1,"column_end":78}},{"value":"/ `tracing` [`Subscriber`]s to consume `log` records as `tracing` [`Event`]s.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":23977,"byte_end":24056,"line_start":639,"line_end":639,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24057,"byte_end":24060,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ ### Emitting `log` Records","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24061,"byte_end":24091,"line_start":641,"line_end":641,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24092,"byte_end":24095,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ This crate provides two feature flags, \"log\" and \"log-always\", which will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24096,"byte_end":24173,"line_start":643,"line_end":643,"column_start":1,"column_end":78}},{"value":"/ cause [spans] and [events] to emit `log` records. When the \"log\" feature is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24174,"byte_end":24253,"line_start":644,"line_end":644,"column_start":1,"column_end":80}},{"value":"/ enabled, if no `tracing` `Subscriber` is active, invoking an event macro or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24254,"byte_end":24333,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ creating a span with fields will emit a `log` record. This is intended","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24334,"byte_end":24408,"line_start":646,"line_end":646,"column_start":1,"column_end":75}},{"value":"/ primarily for use in libraries which wish to emit diagnostics that can be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24409,"byte_end":24486,"line_start":647,"line_end":647,"column_start":1,"column_end":78}},{"value":"/ consumed by applications using `tracing` *or* `log`, without paying the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24487,"byte_end":24562,"line_start":648,"line_end":648,"column_start":1,"column_end":76}},{"value":"/ additional overhead of emitting both forms of diagnostics when `tracing` is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24563,"byte_end":24642,"line_start":649,"line_end":649,"column_start":1,"column_end":80}},{"value":"/ in use.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24643,"byte_end":24654,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24655,"byte_end":24658,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ Enabling the \"log-always\" feature will cause `log` records to be emitted","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24659,"byte_end":24735,"line_start":652,"line_end":652,"column_start":1,"column_end":77}},{"value":"/ even if a `tracing` `Subscriber` _is_ set. This is intended to be used in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24736,"byte_end":24813,"line_start":653,"line_end":653,"column_start":1,"column_end":78}},{"value":"/ applications where a `log` `Logger` is being used to record a textual log,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24814,"byte_end":24892,"line_start":654,"line_end":654,"column_start":1,"column_end":79}},{"value":"/ and `tracing` is used only to record other forms of diagnostics (such as","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24893,"byte_end":24969,"line_start":655,"line_end":655,"column_start":1,"column_end":77}},{"value":"/ metrics, profiling, or distributed tracing data). Unlike the \"log\" feature,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":24970,"byte_end":25049,"line_start":656,"line_end":656,"column_start":1,"column_end":80}},{"value":"/ libraries generally should **not** enable the \"log-always\" feature, as doing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25050,"byte_end":25130,"line_start":657,"line_end":657,"column_start":1,"column_end":81}},{"value":"/ so will prevent applications from being able to opt out of the `log` records.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25131,"byte_end":25212,"line_start":658,"line_end":658,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25213,"byte_end":25216,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ See [here][flags] for more details on this crate's feature flags.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25217,"byte_end":25286,"line_start":660,"line_end":660,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25287,"byte_end":25290,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ The generated `log` records' messages will be a string representation of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25291,"byte_end":25371,"line_start":662,"line_end":662,"column_start":1,"column_end":81}},{"value":"/ span or event's fields, and all additional information recorded by `log`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25372,"byte_end":25448,"line_start":663,"line_end":663,"column_start":1,"column_end":77}},{"value":"/ (target, verbosity level, module path, file, and line number) will also be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25449,"byte_end":25527,"line_start":664,"line_end":664,"column_start":1,"column_end":79}},{"value":"/ populated. Additionally, `log` records are also generated when spans are","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25528,"byte_end":25604,"line_start":665,"line_end":665,"column_start":1,"column_end":77}},{"value":"/ entered, exited, and closed. Since these additional span lifecycle logs have","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25605,"byte_end":25685,"line_start":666,"line_end":666,"column_start":1,"column_end":81}},{"value":"/ the potential to be very verbose, and don't include additional fields, they","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25686,"byte_end":25765,"line_start":667,"line_end":667,"column_start":1,"column_end":80}},{"value":"/ will always be emitted at the `Trace` level, rather than inheriting the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25766,"byte_end":25841,"line_start":668,"line_end":668,"column_start":1,"column_end":76}},{"value":"/ level of the span that generated them. Furthermore, they are are categorized","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25842,"byte_end":25922,"line_start":669,"line_end":669,"column_start":1,"column_end":81}},{"value":"/ under a separate `log` target, \"tracing::span\" (and its sub-target,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25923,"byte_end":25994,"line_start":670,"line_end":670,"column_start":1,"column_end":72}},{"value":"/ \"tracing::span::active\", for the logs on entering and exiting a span), which","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":25995,"byte_end":26075,"line_start":671,"line_end":671,"column_start":1,"column_end":81}},{"value":"/ may be enabled or disabled separately from other `log` records emitted by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26076,"byte_end":26153,"line_start":672,"line_end":672,"column_start":1,"column_end":78}},{"value":"/ `tracing`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26154,"byte_end":26168,"line_start":673,"line_end":673,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26169,"byte_end":26172,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ ### Consuming `log` Records","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26173,"byte_end":26204,"line_start":675,"line_end":675,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26205,"byte_end":26208,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ The [`tracing-log`] crate provides a compatibility layer which","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26209,"byte_end":26275,"line_start":677,"line_end":677,"column_start":1,"column_end":67}},{"value":"/ allows a `tracing` [`Subscriber`] to consume `log` records as though they","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26276,"byte_end":26353,"line_start":678,"line_end":678,"column_start":1,"column_end":78}},{"value":"/ were `tracing` [events]. This allows applications using `tracing` to record","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26354,"byte_end":26433,"line_start":679,"line_end":679,"column_start":1,"column_end":80}},{"value":"/ the logs emitted by dependencies using `log` as events within the context of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26434,"byte_end":26514,"line_start":680,"line_end":680,"column_start":1,"column_end":81}},{"value":"/ the application's trace tree. See [that crate's documentation][log-tracer]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26515,"byte_end":26593,"line_start":681,"line_end":681,"column_start":1,"column_end":79}},{"value":"/ for details.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26594,"byte_end":26610,"line_start":682,"line_end":682,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26611,"byte_end":26614,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ [log-tracer]: https://docs.rs/tracing-log/latest/tracing_log/#convert-log-records-to-tracing-events","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26615,"byte_end":26718,"line_start":684,"line_end":684,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26719,"byte_end":26722,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26723,"byte_end":26744,"line_start":686,"line_end":686,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26745,"byte_end":26748,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ In addition to `tracing` and `tracing-core`, the [`tokio-rs/tracing`] repository","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26749,"byte_end":26833,"line_start":688,"line_end":688,"column_start":1,"column_end":85}},{"value":"/ contains several additional crates designed to be used with the `tracing` ecosystem.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26834,"byte_end":26922,"line_start":689,"line_end":689,"column_start":1,"column_end":89}},{"value":"/ This includes a collection of `Subscriber` implementations, as well as utility","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":26923,"byte_end":27005,"line_start":690,"line_end":690,"column_start":1,"column_end":83}},{"value":"/ and adapter crates to assist in writing `Subscriber`s and instrumenting","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27006,"byte_end":27081,"line_start":691,"line_end":691,"column_start":1,"column_end":76}},{"value":"/ applications.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27082,"byte_end":27099,"line_start":692,"line_end":692,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27100,"byte_end":27103,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27104,"byte_end":27173,"line_start":694,"line_end":694,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27174,"byte_end":27177,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-futures`] provides a compatibility layer with the `futures`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27178,"byte_end":27254,"line_start":696,"line_end":696,"column_start":1,"column_end":77}},{"value":"/    crate, allowing spans to be attached to `Future`s, `Stream`s, and `Executor`s.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27255,"byte_end":27340,"line_start":697,"line_end":697,"column_start":1,"column_end":86}},{"value":"/  - [`tracing-subscriber`] provides `Subscriber` implementations and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27341,"byte_end":27412,"line_start":698,"line_end":698,"column_start":1,"column_end":72}},{"value":"/    utilities for working with `Subscriber`s. This includes a [`FmtSubscriber`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27413,"byte_end":27495,"line_start":699,"line_end":699,"column_start":1,"column_end":83}},{"value":"/    `FmtSubscriber` for logging formatted trace data to stdout, with similar","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27496,"byte_end":27575,"line_start":700,"line_end":700,"column_start":1,"column_end":80}},{"value":"/    filtering and formatting to the [`env_logger`] crate.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27576,"byte_end":27636,"line_start":701,"line_end":701,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-log`] provides a compatibility layer with the [`log`] crate,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27637,"byte_end":27714,"line_start":702,"line_end":702,"column_start":1,"column_end":78}},{"value":"/    allowing log messages to be recorded as `tracing` `Event`s within the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27715,"byte_end":27791,"line_start":703,"line_end":703,"column_start":1,"column_end":77}},{"value":"/    trace tree. This is useful when a project using `tracing` have","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27792,"byte_end":27861,"line_start":704,"line_end":704,"column_start":1,"column_end":70}},{"value":"/    dependencies which use `log`. Note that if you're using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27862,"byte_end":27924,"line_start":705,"line_end":705,"column_start":1,"column_end":63}},{"value":"/    `tracing-subscriber`'s `FmtSubscriber`, you don't need to depend on","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":27925,"byte_end":27999,"line_start":706,"line_end":706,"column_start":1,"column_end":75}},{"value":"/    `tracing-log` directly.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28000,"byte_end":28030,"line_start":707,"line_end":707,"column_start":1,"column_end":31}},{"value":"/  - [`tracing-appender`] provides utilities for outputting tracing data,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28031,"byte_end":28106,"line_start":708,"line_end":708,"column_start":1,"column_end":76}},{"value":"/     including a file appender and non blocking writer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28107,"byte_end":28165,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28166,"byte_end":28169,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28170,"byte_end":28243,"line_start":711,"line_end":711,"column_start":1,"column_end":74}},{"value":"/ maintained by the `tokio` project. These include:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28244,"byte_end":28297,"line_start":712,"line_end":712,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28298,"byte_end":28301,"line_start":713,"line_end":713,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-timing`] implements inter-event timing metrics on top of `tracing`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28302,"byte_end":28386,"line_start":714,"line_end":714,"column_start":1,"column_end":85}},{"value":"/    It provides a subscriber that records the time elapsed between pairs of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28387,"byte_end":28465,"line_start":715,"line_end":715,"column_start":1,"column_end":79}},{"value":"/    `tracing` events and generates histograms.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28466,"byte_end":28515,"line_start":716,"line_end":716,"column_start":1,"column_end":50}},{"value":"/  - [`tracing-opentelemetry`] provides a subscriber for emitting traces to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28516,"byte_end":28593,"line_start":717,"line_end":717,"column_start":1,"column_end":78}},{"value":"/    [OpenTelemetry]-compatible distributed tracing systems.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28594,"byte_end":28656,"line_start":718,"line_end":718,"column_start":1,"column_end":63}},{"value":"/  - [`tracing-honeycomb`] Provides a layer that reports traces spanning multiple machines to [honeycomb.io]. Backed by [`tracing-distributed`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28657,"byte_end":28803,"line_start":719,"line_end":719,"column_start":1,"column_end":147}},{"value":"/  - [`tracing-distributed`] Provides a generic implementation of a layer that reports traces spanning multiple machines to some backend.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28804,"byte_end":28943,"line_start":720,"line_end":720,"column_start":1,"column_end":140}},{"value":"/  - [`tracing-actix-web`] provides `tracing` integration for the `actix-web` web framework.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":28944,"byte_end":29038,"line_start":721,"line_end":721,"column_start":1,"column_end":95}},{"value":"/  - [`tracing-actix`] provides `tracing` integration for the `actix` actor","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29039,"byte_end":29116,"line_start":722,"line_end":722,"column_start":1,"column_end":78}},{"value":"/    framework.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29117,"byte_end":29134,"line_start":723,"line_end":723,"column_start":1,"column_end":18}},{"value":"/  - [`tracing-gelf`] implements a subscriber for exporting traces in Greylog","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29135,"byte_end":29214,"line_start":724,"line_end":724,"column_start":1,"column_end":80}},{"value":"/    GELF format.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29215,"byte_end":29234,"line_start":725,"line_end":725,"column_start":1,"column_end":20}},{"value":"/  - [`tracing-coz`] provides integration with the [coz] causal profiler","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29235,"byte_end":29309,"line_start":726,"line_end":726,"column_start":1,"column_end":75}},{"value":"/    (Linux-only).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29310,"byte_end":29330,"line_start":727,"line_end":727,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-bunyan-formatter`] provides a layer implementation that reports events and spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29331,"byte_end":29428,"line_start":728,"line_end":728,"column_start":1,"column_end":98}},{"value":"/    in [bunyan] format, enriched with timing information.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29429,"byte_end":29489,"line_start":729,"line_end":729,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-wasm`] provides a `Subscriber`/`Layer` implementation that reports","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29490,"byte_end":29573,"line_start":730,"line_end":730,"column_start":1,"column_end":84}},{"value":"/    events and spans via browser `console.log` and [User Timing API (`window.performance`)].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29574,"byte_end":29669,"line_start":731,"line_end":731,"column_start":1,"column_end":96}},{"value":"/  - [`tide-tracing`] provides a [tide] middleware to trace all incoming requests and responses.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29670,"byte_end":29768,"line_start":732,"line_end":732,"column_start":1,"column_end":99}},{"value":"/  - [`test-env-log`] takes care of initializing `tracing` for tests, based on","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29769,"byte_end":29849,"line_start":733,"line_end":733,"column_start":1,"column_end":81}},{"value":"/    environment variables with an `env_logger` compatible syntax.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29850,"byte_end":29918,"line_start":734,"line_end":734,"column_start":1,"column_end":69}},{"value":"/  - [`tracing-unwrap`] provides convenience methods to report failed unwraps","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29919,"byte_end":29998,"line_start":735,"line_end":735,"column_start":1,"column_end":80}},{"value":"/    on `Result` or `Option` types to a `Subscriber`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":29999,"byte_end":30054,"line_start":736,"line_end":736,"column_start":1,"column_end":56}},{"value":"/  - [`diesel-tracing`] provides integration with [`diesel`] database connections.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30055,"byte_end":30139,"line_start":737,"line_end":737,"column_start":1,"column_end":85}},{"value":"/  - [`tracing-tracy`] provides a way to collect [Tracy] profiles in instrumented","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30140,"byte_end":30223,"line_start":738,"line_end":738,"column_start":1,"column_end":84}},{"value":"/    applications.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30224,"byte_end":30244,"line_start":739,"line_end":739,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-elastic-apm`] provides a layer for reporting traces to [Elastic APM].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30245,"byte_end":30331,"line_start":740,"line_end":740,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30332,"byte_end":30335,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a `tracing` ecosystem crate not listed above,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30336,"byte_end":30413,"line_start":742,"line_end":742,"column_start":1,"column_end":78}},{"value":"/ please let us know! We'd love to add your project to the list!","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30414,"byte_end":30480,"line_start":743,"line_end":743,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30481,"byte_end":30484,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30485,"byte_end":30562,"line_start":745,"line_end":745,"column_start":1,"column_end":78}},{"value":"/ [OpenTelemetry]: https://opentelemetry.io/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30563,"byte_end":30609,"line_start":746,"line_end":746,"column_start":1,"column_end":47}},{"value":"/ [`tracing-honeycomb`]: https://crates.io/crates/tracing-honeycomb","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30610,"byte_end":30679,"line_start":747,"line_end":747,"column_start":1,"column_end":70}},{"value":"/ [`tracing-distributed`]: https://crates.io/crates/tracing-distributed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30680,"byte_end":30753,"line_start":748,"line_end":748,"column_start":1,"column_end":74}},{"value":"/ [honeycomb.io]: https://www.honeycomb.io/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30754,"byte_end":30799,"line_start":749,"line_end":749,"column_start":1,"column_end":46}},{"value":"/ [`tracing-actix-web`]: https://crates.io/crates/tracing-actix-web","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30800,"byte_end":30869,"line_start":750,"line_end":750,"column_start":1,"column_end":70}},{"value":"/ [`tracing-actix`]: https://crates.io/crates/tracing-actix","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30870,"byte_end":30931,"line_start":751,"line_end":751,"column_start":1,"column_end":62}},{"value":"/ [`tracing-gelf`]: https://crates.io/crates/tracing-gelf","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30932,"byte_end":30991,"line_start":752,"line_end":752,"column_start":1,"column_end":60}},{"value":"/ [`tracing-coz`]: https://crates.io/crates/tracing-coz","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":30992,"byte_end":31049,"line_start":753,"line_end":753,"column_start":1,"column_end":58}},{"value":"/ [coz]: https://github.com/plasma-umass/coz","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31050,"byte_end":31096,"line_start":754,"line_end":754,"column_start":1,"column_end":47}},{"value":"/ [`tracing-bunyan-formatter`]: https://crates.io/crates/tracing-bunyan-formatter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31097,"byte_end":31180,"line_start":755,"line_end":755,"column_start":1,"column_end":84}},{"value":"/ [bunyan]: https://github.com/trentm/node-bunyan","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31181,"byte_end":31232,"line_start":756,"line_end":756,"column_start":1,"column_end":52}},{"value":"/ [`tracing-wasm`]: https://docs.rs/tracing-wasm","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31233,"byte_end":31283,"line_start":757,"line_end":757,"column_start":1,"column_end":51}},{"value":"/ [User Timing API (`window.performance`)]: https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31284,"byte_end":31394,"line_start":758,"line_end":758,"column_start":1,"column_end":111}},{"value":"/ [`tide-tracing`]: https://crates.io/crates/tide-tracing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31395,"byte_end":31454,"line_start":759,"line_end":759,"column_start":1,"column_end":60}},{"value":"/ [tide]: https://crates.io/crates/tide","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31455,"byte_end":31496,"line_start":760,"line_end":760,"column_start":1,"column_end":42}},{"value":"/ [`test-env-log`]: https://crates.io/crates/test-env-log","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31497,"byte_end":31556,"line_start":761,"line_end":761,"column_start":1,"column_end":60}},{"value":"/ [`tracing-unwrap`]: https://docs.rs/tracing-unwrap","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31557,"byte_end":31611,"line_start":762,"line_end":762,"column_start":1,"column_end":55}},{"value":"/ [`diesel`]: https://crates.io/crates/diesel","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31612,"byte_end":31659,"line_start":763,"line_end":763,"column_start":1,"column_end":48}},{"value":"/ [`diesel-tracing`]: https://crates.io/crates/diesel-tracing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31660,"byte_end":31723,"line_start":764,"line_end":764,"column_start":1,"column_end":64}},{"value":"/ [`tracing-tracy`]: https://crates.io/crates/tracing-tracy","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31724,"byte_end":31785,"line_start":765,"line_end":765,"column_start":1,"column_end":62}},{"value":"/ [Tracy]: https://github.com/wolfpld/tracy","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31786,"byte_end":31831,"line_start":766,"line_end":766,"column_start":1,"column_end":46}},{"value":"/ [`tracing-elastic-apm`]: https://crates.io/crates/tracing-elastic-apm","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31832,"byte_end":31905,"line_start":767,"line_end":767,"column_start":1,"column_end":74}},{"value":"/ [Elastic APM]: https://www.elastic.co/apm","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31906,"byte_end":31951,"line_start":768,"line_end":768,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31952,"byte_end":31955,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":31956,"byte_end":32015,"line_start":770,"line_end":770,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32016,"byte_end":32081,"line_start":771,"line_end":771,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Some of these ecosystem crates are currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32082,"byte_end":32153,"line_start":772,"line_end":772,"column_start":1,"column_end":72}},{"value":"/ unreleased and/or in earlier stages of development. They may be less stable","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32154,"byte_end":32233,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ than <code>tracing</code> and <code>tracing-core</code>.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32234,"byte_end":32294,"line_start":774,"line_end":774,"column_start":1,"column_end":61}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32295,"byte_end":32311,"line_start":775,"line_end":775,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32312,"byte_end":32315,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32316,"byte_end":32342,"line_start":777,"line_end":777,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32343,"byte_end":32346,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32347,"byte_end":32399,"line_start":779,"line_end":779,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32400,"byte_end":32403,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ * A set of features controlling the [static verbosity level].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32404,"byte_end":32469,"line_start":781,"line_end":781,"column_start":1,"column_end":66}},{"value":"/ * `log`: causes trace instrumentation points to emit [`log`] records as well","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32470,"byte_end":32550,"line_start":782,"line_end":782,"column_start":1,"column_end":81}},{"value":"/   as trace events, if a default `tracing` subscriber has not been set. This","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32551,"byte_end":32630,"line_start":783,"line_end":783,"column_start":1,"column_end":80}},{"value":"/   is intended for use in libraries whose users may be using either `tracing`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32631,"byte_end":32711,"line_start":784,"line_end":784,"column_start":1,"column_end":81}},{"value":"/   or `log`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32712,"byte_end":32727,"line_start":785,"line_end":785,"column_start":1,"column_end":16}},{"value":"/ * `log-always`: Emit `log` records from all `tracing` spans and events, even","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32728,"byte_end":32808,"line_start":786,"line_end":786,"column_start":1,"column_end":81}},{"value":"/   if a `tracing` subscriber has been set. This should be set only by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32809,"byte_end":32881,"line_start":787,"line_end":787,"column_start":1,"column_end":73}},{"value":"/   applications which intend to collect traces and logs separately; if an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32882,"byte_end":32958,"line_start":788,"line_end":788,"column_start":1,"column_end":77}},{"value":"/   adapter is used to convert `log` records into `tracing` events, this will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":32959,"byte_end":33038,"line_start":789,"line_end":789,"column_start":1,"column_end":80}},{"value":"/   cause duplicate events to occur.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33039,"byte_end":33077,"line_start":790,"line_end":790,"column_start":1,"column_end":39}},{"value":"/ * `attributes`: Includes support for the `#[instrument]` attribute.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33078,"byte_end":33149,"line_start":791,"line_end":791,"column_start":1,"column_end":72}},{"value":"/   This is on by default, but does bring in the `syn` crate as a dependency,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33150,"byte_end":33229,"line_start":792,"line_end":792,"column_start":1,"column_end":80}},{"value":"/   which may add to the compile time of crates that do not already use it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33230,"byte_end":33307,"line_start":793,"line_end":793,"column_start":1,"column_end":78}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33308,"byte_end":33378,"line_start":794,"line_end":794,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33379,"byte_end":33382,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33383,"byte_end":33461,"line_start":796,"line_end":796,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33462,"byte_end":33465,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33466,"byte_end":33479,"line_start":798,"line_end":798,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33480,"byte_end":33500,"line_start":799,"line_end":799,"column_start":1,"column_end":21}},{"value":"/   tracing = { version = \"0.1.27\", default-features = false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33501,"byte_end":33565,"line_start":800,"line_end":800,"column_start":1,"column_end":65}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33566,"byte_end":33575,"line_start":801,"line_end":801,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33576,"byte_end":33579,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33580,"byte_end":33609,"line_start":803,"line_end":803,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33610,"byte_end":33701,"line_start":804,"line_end":804,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33702,"byte_end":33712,"line_start":805,"line_end":805,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33713,"byte_end":33772,"line_start":806,"line_end":806,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33773,"byte_end":33838,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: <code>tracing</code>'s <code>no_std</code> support","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33839,"byte_end":33916,"line_start":808,"line_end":808,"column_start":1,"column_end":78}},{"value":"/ requires <code>liballoc</code>.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33917,"byte_end":33952,"line_start":809,"line_end":809,"column_start":1,"column_end":36}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33953,"byte_end":33969,"line_start":810,"line_end":810,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33970,"byte_end":33973,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":33974,"byte_end":34004,"line_start":812,"line_end":812,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34005,"byte_end":34008,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34009,"byte_end":34086,"line_start":814,"line_end":814,"column_start":1,"column_end":78}},{"value":"/ version is 1.42. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34087,"byte_end":34165,"line_start":815,"line_end":815,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34166,"byte_end":34227,"line_start":816,"line_end":816,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34228,"byte_end":34231,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34232,"byte_end":34311,"line_start":818,"line_end":818,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34312,"byte_end":34389,"line_start":819,"line_end":819,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34390,"byte_end":34466,"line_start":820,"line_end":820,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34467,"byte_end":34545,"line_start":821,"line_end":821,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34546,"byte_end":34621,"line_start":822,"line_end":822,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34622,"byte_end":34698,"line_start":823,"line_end":823,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34699,"byte_end":34746,"line_start":824,"line_end":824,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34747,"byte_end":34750,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/0.4.6/log/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34751,"byte_end":34794,"line_start":826,"line_end":826,"column_start":1,"column_end":44}},{"value":"/ [span]: mod@span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34795,"byte_end":34815,"line_start":827,"line_end":827,"column_start":1,"column_end":21}},{"value":"/ [spans]: mod@span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34816,"byte_end":34837,"line_start":828,"line_end":828,"column_start":1,"column_end":22}},{"value":"/ [`Span`]: span::Span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34838,"byte_end":34862,"line_start":829,"line_end":829,"column_start":1,"column_end":25}},{"value":"/ [`in_scope`]: span::Span::in_scope","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34863,"byte_end":34901,"line_start":830,"line_end":830,"column_start":1,"column_end":39}},{"value":"/ [event]: Event","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34902,"byte_end":34920,"line_start":831,"line_end":831,"column_start":1,"column_end":19}},{"value":"/ [events]: Event","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34921,"byte_end":34940,"line_start":832,"line_end":832,"column_start":1,"column_end":20}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34941,"byte_end":34983,"line_start":833,"line_end":833,"column_start":1,"column_end":43}},{"value":"/ [Subscriber::event]: subscriber::Subscriber::event","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":34984,"byte_end":35038,"line_start":834,"line_end":834,"column_start":1,"column_end":55}},{"value":"/ [`enter`]: subscriber::Subscriber::enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35039,"byte_end":35083,"line_start":835,"line_end":835,"column_start":1,"column_end":45}},{"value":"/ [`exit`]: subscriber::Subscriber::exit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35084,"byte_end":35126,"line_start":836,"line_end":836,"column_start":1,"column_end":43}},{"value":"/ [`enabled`]: subscriber::Subscriber::enabled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35127,"byte_end":35175,"line_start":837,"line_end":837,"column_start":1,"column_end":49}},{"value":"/ [metadata]: Metadata","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35176,"byte_end":35200,"line_start":838,"line_end":838,"column_start":1,"column_end":25}},{"value":"/ [`field::display`]: field::display","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35201,"byte_end":35239,"line_start":839,"line_end":839,"column_start":1,"column_end":39}},{"value":"/ [`field::debug`]: field::debug","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35240,"byte_end":35274,"line_start":840,"line_end":840,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: subscriber::set_global_default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35275,"byte_end":35333,"line_start":841,"line_end":841,"column_start":1,"column_end":59}},{"value":"/ [`with_default`]: subscriber::with_default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35334,"byte_end":35380,"line_start":842,"line_end":842,"column_start":1,"column_end":47}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35381,"byte_end":35442,"line_start":843,"line_end":843,"column_start":1,"column_end":62}},{"value":"/ [`tracing-futures`]: https://crates.io/crates/tracing-futures","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35443,"byte_end":35508,"line_start":844,"line_end":844,"column_start":1,"column_end":66}},{"value":"/ [`tracing-subscriber`]: https://crates.io/crates/tracing-subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35509,"byte_end":35580,"line_start":845,"line_end":845,"column_start":1,"column_end":72}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35581,"byte_end":35638,"line_start":846,"line_end":846,"column_start":1,"column_end":58}},{"value":"/ [`tracing-timing`]: https://crates.io/crates/tracing-timing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35639,"byte_end":35702,"line_start":847,"line_end":847,"column_start":1,"column_end":64}},{"value":"/ [`tracing-appender`]: https://crates.io/crates/tracing-appender","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35703,"byte_end":35770,"line_start":848,"line_end":848,"column_start":1,"column_end":68}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35771,"byte_end":35826,"line_start":849,"line_end":849,"column_start":1,"column_end":56}},{"value":"/ [`FmtSubscriber`]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/struct.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35827,"byte_end":35937,"line_start":850,"line_end":850,"column_start":1,"column_end":111}},{"value":"/ [static verbosity level]: level_filters/index.html#compile-time-filters","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":35938,"byte_end":36013,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ [instrument]: https://docs.rs/tracing-attributes/latest/tracing_attributes/attr.instrument.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":36014,"byte_end":36113,"line_start":852,"line_end":852,"column_start":1,"column_end":100}},{"value":"/ [flags]: #crate-feature-flags","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":36114,"byte_end":36147,"line_start":853,"line_end":853,"column_start":1,"column_end":34}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":36515,"byte_end":36977,"line_start":861,"line_end":882,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116235,"byte_end":116282,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116283,"byte_end":116286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116287,"byte_end":116367,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116368,"byte_end":116446,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116447,"byte_end":116486,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116487,"byte_end":116490,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116491,"byte_end":116523,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116524,"byte_end":116527,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116528,"byte_end":116606,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116607,"byte_end":116682,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116683,"byte_end":116706,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116707,"byte_end":116710,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116711,"byte_end":116748,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116749,"byte_end":116752,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116753,"byte_end":116828,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116829,"byte_end":116908,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116909,"byte_end":116969,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":116970,"byte_end":117048,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117049,"byte_end":117126,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117127,"byte_end":117154,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117155,"byte_end":117158,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117159,"byte_end":117235,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117236,"byte_end":117309,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117310,"byte_end":117322,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117323,"byte_end":117334,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117335,"byte_end":117366,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117367,"byte_end":117392,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117393,"byte_end":117429,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117430,"byte_end":117468,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117469,"byte_end":117477,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117478,"byte_end":117533,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117534,"byte_end":117602,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117603,"byte_end":117650,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117651,"byte_end":117688,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117689,"byte_end":117745,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117746,"byte_end":117803,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117804,"byte_end":117838,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117839,"byte_end":117872,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117873,"byte_end":117880,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117881,"byte_end":117944,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117945,"byte_end":117974,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117975,"byte_end":117978,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":117979,"byte_end":118024,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118025,"byte_end":118076,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118077,"byte_end":118084,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118085,"byte_end":118163,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118164,"byte_end":118192,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118193,"byte_end":118204,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118205,"byte_end":118236,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118237,"byte_end":118262,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118263,"byte_end":118299,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118300,"byte_end":118338,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118339,"byte_end":118347,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118348,"byte_end":118403,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118404,"byte_end":118472,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118473,"byte_end":118520,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118521,"byte_end":118558,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118559,"byte_end":118615,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118616,"byte_end":118673,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118674,"byte_end":118708,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118709,"byte_end":118742,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118743,"byte_end":118750,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118751,"byte_end":118814,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118815,"byte_end":118862,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118863,"byte_end":118928,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118929,"byte_end":118957,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118958,"byte_end":118961,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118962,"byte_end":118991,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":118992,"byte_end":119039,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119040,"byte_end":119079,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119080,"byte_end":119087,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119088,"byte_end":119091,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119092,"byte_end":119126,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119127,"byte_end":119134,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119135,"byte_end":119212,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119213,"byte_end":119293,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119294,"byte_end":119367,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119368,"byte_end":119436,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119437,"byte_end":119440,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119441,"byte_end":119518,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119519,"byte_end":119595,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119596,"byte_end":119621,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119622,"byte_end":119633,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119634,"byte_end":119665,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119666,"byte_end":119691,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119692,"byte_end":119728,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119729,"byte_end":119767,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119768,"byte_end":119776,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119777,"byte_end":119832,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119833,"byte_end":119901,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119902,"byte_end":119949,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119950,"byte_end":119987,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":119988,"byte_end":120044,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120045,"byte_end":120102,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120103,"byte_end":120137,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120138,"byte_end":120171,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120172,"byte_end":120179,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120180,"byte_end":120243,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120244,"byte_end":120291,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120292,"byte_end":120357,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120358,"byte_end":120386,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120387,"byte_end":120390,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120391,"byte_end":120438,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120439,"byte_end":120513,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120514,"byte_end":120557,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120558,"byte_end":120609,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120610,"byte_end":120613,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120614,"byte_end":120655,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120656,"byte_end":120663,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120664,"byte_end":120723,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120724,"byte_end":120789,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The thread-local scoped dispatcher (<code>with_default</code>)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120790,"byte_end":120879,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ requires the Rust standard library. <code>no_std</code> users should","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120880,"byte_end":120952,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ use <a href=\"fn.set_global_default.html\"><code>set_global_default</code></a>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":120953,"byte_end":121033,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ instead.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121034,"byte_end":121046,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121047,"byte_end":121063,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121064,"byte_end":121067,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121068,"byte_end":121107,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121108,"byte_end":121111,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121112,"byte_end":121179,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121180,"byte_end":121258,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121259,"byte_end":121328,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121329,"byte_end":121349,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121350,"byte_end":121353,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121354,"byte_end":121395,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121396,"byte_end":121438,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121439,"byte_end":121493,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121494,"byte_end":121534,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/dispatcher.rs","byte_start":121535,"byte_end":121573,"line_start":129,"line_end":129,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"decl_id":null,"docs":" Structured data associated with `Span`s and `Event`s.\n","sig":null,"attributes":[{"value":"/ Structured data associated with `Span`s and `Event`s.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122357,"byte_end":122414,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123145,"byte_end":123152,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"AsField","qualname":"::field::AsField","value":"AsField: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" Trait implemented to allow a type to be used as a field key.","sig":null,"attributes":[{"value":"/ Trait implemented to allow a type to be used as a field key.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122470,"byte_end":122534,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122535,"byte_end":122538,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122539,"byte_end":122598,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122599,"byte_end":122664,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although this is implemented for both the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122665,"byte_end":122733,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ <a href=\"./struct.Field.html\"><code>Field</code></a> type <em>and</em> any","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122734,"byte_end":122812,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ type that can be borrowed as an <code>&str</code>, only <code>Field</code>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122813,"byte_end":122891,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ allows <em>O</em>(1) access.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122892,"byte_end":122924,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/ Indexing a field with a string results in an iterative search that performs","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":122925,"byte_end":123004,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ string comparisons. Thus, if possible, once the key for a field is known, it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123005,"byte_end":123085,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ should be used whenever possible.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123086,"byte_end":123123,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ </pre>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123124,"byte_end":123134,"line_start":17,"line_end":17,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123385,"byte_end":123393,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"as_field","qualname":"::field::AsField::as_field","value":"pub fn as_field(&Self, &Metadata) -> Option<Field>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Attempts to convert `&self` into a `Field` with the specified `metadata`.","sig":null,"attributes":[{"value":"/ Attempts to convert `&self` into a `Field` with the specified `metadata`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123182,"byte_end":123259,"line_start":19,"line_end":19,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123264,"byte_end":123267,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ If `metadata` defines this field, then the field is returned. Otherwise,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123272,"byte_end":123348,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ this returns `None`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123353,"byte_end":123377,"line_start":22,"line_end":22,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrument","qualname":"::instrument","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":384},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":427},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" Attach a span to a `std::future::Future`.\n","sig":null,"attributes":[{"value":"/ Attach a span to a `std::future::Future`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37895,"byte_end":37940,"line_start":926,"line_end":926,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124639,"byte_end":124649,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::instrument::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" Attaches spans to a `std::future::Future`.","sig":null,"attributes":[{"value":"/ Attaches spans to a `std::future::Future`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124456,"byte_end":124502,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124503,"byte_end":124506,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Extension trait allowing futures to be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124507,"byte_end":124549,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124550,"byte_end":124591,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124592,"byte_end":124595,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [span]:  ../struct.Span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124596,"byte_end":124628,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126825,"byte_end":126835,"line_start":77,"line_end":77,"column_start":8,"column_end":18},"name":"instrument","qualname":"::instrument::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Instruments this type with the provided `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided `Span`, returning an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124663,"byte_end":124727,"line_start":14,"line_end":14,"column_start":5,"column_end":69}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124732,"byte_end":124759,"line_start":15,"line_end":15,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124764,"byte_end":124767,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ The attached `Span` will be [entered] every time the instrumented `Future` is polled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124772,"byte_end":124861,"line_start":17,"line_end":17,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124866,"byte_end":124869,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124874,"byte_end":124888,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124893,"byte_end":124896,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124901,"byte_end":124928,"line_start":21,"line_end":21,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124933,"byte_end":124936,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124941,"byte_end":124952,"line_start":23,"line_end":23,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124957,"byte_end":124985,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124990,"byte_end":124993,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124998,"byte_end":125020,"line_start":26,"line_end":26,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125025,"byte_end":125052,"line_start":27,"line_end":27,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125057,"byte_end":125071,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125076,"byte_end":125082,"line_start":29,"line_end":29,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125087,"byte_end":125090,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125095,"byte_end":125108,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125113,"byte_end":125166,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125171,"byte_end":125185,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125190,"byte_end":125197,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125202,"byte_end":125209,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125214,"byte_end":125217,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The [`Span::or_current`] combinator can be used in combination with","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125222,"byte_end":125293,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ `instrument` to ensure that the [current span] is attached to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125298,"byte_end":125367,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ future if the span passed to `instrument` is [disabled]:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125372,"byte_end":125432,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125437,"byte_end":125440,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```W","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125445,"byte_end":125453,"line_start":41,"line_end":41,"column_start":5,"column_end":13}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125458,"byte_end":125486,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/ # mod tokio {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125491,"byte_end":125508,"line_start":43,"line_end":43,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125513,"byte_end":125574,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125579,"byte_end":125586,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125591,"byte_end":125594,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ let my_future = async {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125599,"byte_end":125626,"line_start":47,"line_end":47,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125631,"byte_end":125645,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125650,"byte_end":125656,"line_start":49,"line_end":49,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125661,"byte_end":125664,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let outer_span = tracing::info_span!(\"outer\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125669,"byte_end":125729,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125734,"byte_end":125737,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ // If the \"my_future\" span is enabled, then the spawned task will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125742,"byte_end":125811,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ // be within both \"my_future\" *and* \"outer\", since \"outer\" is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125816,"byte_end":125881,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ // \"my_future\"'s parent. However, if \"my_future\" is disabled,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125886,"byte_end":125951,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ // the spawned task will *not* be in any span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":125956,"byte_end":126006,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126011,"byte_end":126028,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/     my_future","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126033,"byte_end":126050,"line_start":58,"line_end":58,"column_start":5,"column_end":22}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\"))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126055,"byte_end":126113,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126118,"byte_end":126124,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126129,"byte_end":126132,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ // Using `Span::or_current` ensures the spawned task is instrumented","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126137,"byte_end":126209,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ // with the current span, if the new span passed to `instrument` is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126214,"byte_end":126285,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ // not enabled. This means that if the \"my_future\"  span is disabled,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126290,"byte_end":126363,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ // the spawned task will still be instrumented with the \"outer\" span:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126368,"byte_end":126441,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ # let my_future = async {};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126446,"byte_end":126477,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126482,"byte_end":126499,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/    my_future","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126504,"byte_end":126520,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\").or_current())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126525,"byte_end":126596,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126601,"byte_end":126607,"line_start":70,"line_end":70,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126612,"byte_end":126619,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126624,"byte_end":126627,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126632,"byte_end":126667,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/ [`Span::or_current`]: super::Span::or_current()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126672,"byte_end":126723,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ [current span]: super::Span::current()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126728,"byte_end":126770,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/ [disabled]: super::Span::is_disabled()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126775,"byte_end":126817,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127982,"byte_end":127997,"line_start":113,"line_end":113,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::instrument::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] `Span`, returning an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":126932,"byte_end":126997,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127002,"byte_end":127029,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127034,"byte_end":127037,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If the instrumented type is a future, stream, or sink, the attached `Span`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127042,"byte_end":127120,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ will be [entered] every time it is polled. If the instrumented type","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127125,"byte_end":127196,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ is a future executor, every future spawned on that executor will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127201,"byte_end":127272,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ instrumented by the attached `Span`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127277,"byte_end":127317,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127322,"byte_end":127325,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127330,"byte_end":127408,"line_start":89,"line_end":89,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127413,"byte_end":127416,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127421,"byte_end":127435,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127440,"byte_end":127443,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127448,"byte_end":127459,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127464,"byte_end":127492,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127497,"byte_end":127500,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127505,"byte_end":127527,"line_start":96,"line_end":96,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127532,"byte_end":127578,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127583,"byte_end":127613,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127618,"byte_end":127621,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127626,"byte_end":127636,"line_start":100,"line_end":100,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127641,"byte_end":127644,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127649,"byte_end":127673,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127678,"byte_end":127744,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127749,"byte_end":127763,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127768,"byte_end":127774,"line_start":105,"line_end":105,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127779,"byte_end":127822,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127827,"byte_end":127834,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127839,"byte_end":127846,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127851,"byte_end":127854,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [current]: ../struct.Span.html#method.current","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127859,"byte_end":127908,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/ [entered]: ../struct.Span.html#method.enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127913,"byte_end":127960,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":127965,"byte_end":127974,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128230,"byte_end":128244,"line_start":122,"line_end":122,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::instrument::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150}],"decl_id":null,"docs":" Extension trait allowing futures to be instrumented with\n a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"/ Extension trait allowing futures to be instrumented with","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128078,"byte_end":128138,"line_start":118,"line_end":118,"column_start":1,"column_end":61}},{"value":"/ a `tracing` [`Subscriber`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128139,"byte_end":128170,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128171,"byte_end":128174,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128175,"byte_end":128219,"line_start":121,"line_end":121,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128639,"byte_end":128654,"line_start":130,"line_end":130,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::instrument::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128258,"byte_end":128324,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128329,"byte_end":128356,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128361,"byte_end":128364,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The attached subscriber will be set as the [default] when the returned `Future` is polled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128369,"byte_end":128463,"line_start":126,"line_end":126,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128468,"byte_end":128471,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128476,"byte_end":128520,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128525,"byte_end":128631,"line_start":129,"line_end":129,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129557,"byte_end":129580,"line_start":154,"line_end":154,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::instrument::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128854,"byte_end":128929,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128934,"byte_end":128961,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128966,"byte_end":128969,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128974,"byte_end":129042,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/ subscriber will be set as the [default] while it is being polled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129047,"byte_end":129116,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"/ When the wrapped type is an executor, the subscriber will be set as the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129121,"byte_end":129196,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ default for any futures spawned on that executor.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129201,"byte_end":129254,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129259,"byte_end":129262,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129267,"byte_end":129336,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ spawning a new future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129341,"byte_end":129367,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129372,"byte_end":129375,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129380,"byte_end":129424,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129429,"byte_end":129535,"line_start":152,"line_end":152,"column_start":5,"column_end":111}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129540,"byte_end":129549,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129995,"byte_end":130007,"line_start":168,"line_end":168,"column_start":16,"column_end":28},"name":"WithDispatch","qualname":"::instrument::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" A future that has been instrumented with a `tracing` subscriber.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12460208,"byte_end":12460217,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130280,"byte_end":130292,"line_start":179,"line_end":179,"column_start":16,"column_end":28},"name":"Instrumented","qualname":"::instrument::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" A future that has been instrumented with a `tracing` span.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12460208,"byte_end":12460217,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130762,"byte_end":130766,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130693,"byte_end":130750,"line_start":199,"line_end":199,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130892,"byte_end":130900,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130815,"byte_end":130880,"line_start":204,"line_end":204,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131002,"byte_end":131007,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130961,"byte_end":130990,"line_start":209,"line_end":209,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131103,"byte_end":131112,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131054,"byte_end":131091,"line_start":214,"line_end":214,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131230,"byte_end":131243,"line_start":220,"line_end":220,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131171,"byte_end":131218,"line_start":219,"line_end":219,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131386,"byte_end":131399,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131319,"byte_end":131374,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131598,"byte_end":131608,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131479,"byte_end":131539,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131544,"byte_end":131547,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":131552,"byte_end":131586,"line_start":231,"line_end":231,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":169},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"level_filters","qualname":"::level_filters","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":470}],"decl_id":null,"docs":" Trace verbosity level filtering.","sig":null,"attributes":[{"value":"/ Trace verbosity level filtering.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131650,"byte_end":131686,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131687,"byte_end":131690,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Compile time filters","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131691,"byte_end":131717,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131718,"byte_end":131721,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Trace verbosity levels can be statically disabled at compile time via Cargo","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131722,"byte_end":131801,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ features, similar to the [`log` crate]. Trace instrumentation at disabled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131802,"byte_end":131879,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ levels will be skipped and will not even be present in the resulting binary","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131880,"byte_end":131959,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ unless the verbosity level is specified dynamically. This level is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":131960,"byte_end":132030,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ configured separately for release and debug builds. The features are:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132031,"byte_end":132104,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132105,"byte_end":132108,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `max_level_off`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132109,"byte_end":132130,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ * `max_level_error`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132131,"byte_end":132154,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ * `max_level_warn`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132155,"byte_end":132177,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ * `max_level_info`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132178,"byte_end":132200,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ * `max_level_debug`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132201,"byte_end":132224,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ * `max_level_trace`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132225,"byte_end":132248,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ * `release_max_level_off`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132249,"byte_end":132278,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ * `release_max_level_error`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132279,"byte_end":132310,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_warn`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132311,"byte_end":132341,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_info`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132342,"byte_end":132372,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_debug`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132373,"byte_end":132404,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_trace`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132405,"byte_end":132436,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132437,"byte_end":132440,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These features control the value of the `STATIC_MAX_LEVEL` constant. The","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132441,"byte_end":132517,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ instrumentation macros macros check this value before recording an event or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132518,"byte_end":132597,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ constructing a span. By default, no levels are disabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132598,"byte_end":132658,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132659,"byte_end":132662,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, a crate can disable trace level instrumentation in debug builds","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132663,"byte_end":132743,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ and trace, debug, and info level instrumentation in release builds with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132744,"byte_end":132823,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ following configuration:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132824,"byte_end":132852,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132853,"byte_end":132856,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132857,"byte_end":132868,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132869,"byte_end":132887,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ tracing = { version = \"0.1\", features = [\"max_level_debug\", \"release_max_level_warn\"] }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132888,"byte_end":132979,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132980,"byte_end":132987,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Notes","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":132988,"byte_end":133000,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133001,"byte_end":133004,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Please note that `tracing`'s static max level features do *not* control the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133005,"byte_end":133084,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ [`log`] records that may be emitted when [`tracing`'s \"log\" feature flag][f] is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133085,"byte_end":133168,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ enabled. This is to allow `tracing` to be disabled entirely at compile time","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133169,"byte_end":133248,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ while still emitting `log` records --- such as when a library using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133249,"byte_end":133320,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ `tracing` is used by an application using `log` that doesn't want to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133321,"byte_end":133393,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ generate any `tracing`-related code, but does want to collect `log` records.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133394,"byte_end":133474,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133475,"byte_end":133478,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This means that if the \"log\" feature is in use, some code may be generated","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133479,"byte_end":133557,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ for `log` records emitted by disabled `tracing` events. If this is not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133558,"byte_end":133632,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ desirable, `log` records may be disabled separately using [`log`'s static","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133633,"byte_end":133710,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ max level features][`log` crate].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133711,"byte_end":133748,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133749,"byte_end":133752,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133753,"byte_end":133786,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`log` crate]: https://docs.rs/log/latest/log/#compile-time-filters","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133787,"byte_end":133858,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ [f]: https://docs.rs/tracing/latest/tracing/#emitting-log-records","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":133859,"byte_end":133928,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":177},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134500,"byte_end":134516,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"STATIC_MAX_LEVEL","qualname":"::level_filters::STATIC_MAX_LEVEL","value":"LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" The statically configured maximum trace level.","sig":null,"attributes":[{"value":"/ The statically configured maximum trace level.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134000,"byte_end":134050,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134051,"byte_end":134054,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for information on how to configure","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134055,"byte_end":134131,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ this.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134132,"byte_end":134141,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134142,"byte_end":134145,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This value is checked by the `event!` and `span!` macros. Code that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134146,"byte_end":134217,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ manually constructs events or spans via the `Event::record` function or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134218,"byte_end":134293,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ `Span` constructors should compare the level against this value to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134294,"byte_end":134364,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ determine if those spans or events are enabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134365,"byte_end":134416,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134417,"byte_end":134420,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: ../index.html#compile-time-filters","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/level_filters.rs","byte_start":134421,"byte_end":134489,"line_start":65,"line_end":65,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":178},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":228},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Spans represent periods of time in which a program was executing in a\n particular context.","sig":null,"attributes":[{"value":"/ Spans represent periods of time in which a program was executing in a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136049,"byte_end":136122,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ particular context.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136123,"byte_end":136146,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136147,"byte_end":136150,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A span consists of [fields], user-defined key-value pairs of arbitrary data","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136151,"byte_end":136230,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ that describe the context the span represents, and a set of fixed attributes","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136231,"byte_end":136311,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ that describe all `tracing` spans and events. Attributes describing spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136312,"byte_end":136389,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ include:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136390,"byte_end":136402,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136403,"byte_end":136406,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - An [`Id`] assigned by the subscriber that uniquely identifies it in relation","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136407,"byte_end":136489,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/   to other spans.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136490,"byte_end":136511,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ - The span's [parent] in the trace tree.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136512,"byte_end":136556,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ - [Metadata] that describes static characteristics of all spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136557,"byte_end":136624,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/   originating from that callsite, such as its name, source code location,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136625,"byte_end":136702,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   [verbosity level], and the names of its fields.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136703,"byte_end":136756,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136757,"byte_end":136760,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Creating Spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136761,"byte_end":136781,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136782,"byte_end":136785,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spans are created using the [`span!`] macro. This macro is invoked with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136786,"byte_end":136865,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ following arguments, in order:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136866,"byte_end":136900,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136901,"byte_end":136904,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - The [`target`] and/or [`parent`][parent] attributes, if the user wishes to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136905,"byte_end":136985,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   override their default values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":136986,"byte_end":137022,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - The span's [verbosity level]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137023,"byte_end":137057,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ - A string literal providing the span's name.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137058,"byte_end":137107,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ - Finally, between zero and 32 arbitrary key/value fields.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137108,"byte_end":137170,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137171,"byte_end":137174,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`target`]: ../struct.Metadata.html#method.target","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137175,"byte_end":137228,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137229,"byte_end":137232,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137233,"byte_end":137249,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137250,"byte_end":137261,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137262,"byte_end":137293,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137294,"byte_end":137297,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ /// Construct a new span at the `INFO` level named \"my_span\", with a single","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137298,"byte_end":137377,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ /// field named answer , with the value `42`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137378,"byte_end":137427,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ let my_span = span!(Level::INFO, \"my_span\", answer = 42);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137428,"byte_end":137489,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137490,"byte_end":137497,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137498,"byte_end":137501,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The documentation for the [`span!`] macro provides additional examples of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137502,"byte_end":137579,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the various options that exist when creating spans.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137580,"byte_end":137635,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137636,"byte_end":137639,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`trace_span!`], [`debug_span!`], [`info_span!`], [`warn_span!`], and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137640,"byte_end":137717,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`error_span!`] exist as shorthand for constructing spans at various","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137718,"byte_end":137790,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ verbosity levels.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137791,"byte_end":137812,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137813,"byte_end":137816,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Recording Span Creation","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137817,"byte_end":137847,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137848,"byte_end":137851,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`Attributes`] type contains data associated with a span, and is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137852,"byte_end":137924,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ provided to the [`Subscriber`] when a new span is created. It contains","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":137925,"byte_end":137999,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ the span's metadata, the ID of [the span's parent][parent] if one was","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138000,"byte_end":138073,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ explicitly set, and any fields whose values were recorded when the span was","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138074,"byte_end":138153,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ constructed. The subscriber, which is responsible for recording `tracing`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138154,"byte_end":138231,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ data, can then store or record these values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138232,"byte_end":138280,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138281,"byte_end":138284,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # The Span Lifecycle","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138285,"byte_end":138309,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138310,"byte_end":138313,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Entering a Span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138314,"byte_end":138336,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138337,"byte_end":138340,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A thread of execution is said to _enter_ a span when it begins executing,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138341,"byte_end":138418,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ and _exit_ the span when it switches to another context. Spans may be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138419,"byte_end":138492,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ entered through the [`enter`], [`entered`], and [`in_scope`] methods.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138493,"byte_end":138566,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138567,"byte_end":138570,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The [`enter`] method enters a span, returning a [guard] that exits the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138571,"byte_end":138650,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ when dropped","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138651,"byte_end":138667,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138668,"byte_end":138675,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138676,"byte_end":138709,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138710,"byte_end":138734,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138735,"byte_end":138792,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138793,"byte_end":138796,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // `my_span` exists but has not been entered.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138797,"byte_end":138846,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138847,"byte_end":138850,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Enter `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138851,"byte_end":138876,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let _enter = my_span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138877,"byte_end":138910,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138911,"byte_end":138914,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Perform some work inside of the context of `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138915,"byte_end":138977,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/ // Dropping the `_enter` guard will exit the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":138978,"byte_end":139032,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139033,"byte_end":139039,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139040,"byte_end":139043,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139044,"byte_end":139176,"line_start":78,"line_end":78,"column_start":1,"column_end":133}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139177,"byte_end":139261,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139262,"byte_end":139344,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139345,"byte_end":139393,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/     <a href=\"struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139394,"byte_end":139478,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/     for details.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139479,"byte_end":139499,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139500,"byte_end":139516,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139517,"byte_end":139520,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`entered`] method is analogous to [`enter`], but moves the span into","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139521,"byte_end":139598,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the returned guard, rather than borrowing it. This allows creating and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139599,"byte_end":139673,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ entering a span in a single expression:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139674,"byte_end":139717,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139718,"byte_end":139721,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139722,"byte_end":139729,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139730,"byte_end":139763,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ // Create a span and enter it, returning a guard:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139764,"byte_end":139817,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/ let span = span!(Level::INFO, \"my_span\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139818,"byte_end":139873,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139874,"byte_end":139877,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We are now inside the span! Like `enter()`, the guard returned by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139878,"byte_end":139950,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ // `entered()` will exit the span when it is dropped...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":139951,"byte_end":140010,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140011,"byte_end":140014,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // ...but, it can also be exited explicitly, returning the `Span`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140015,"byte_end":140084,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ // struct:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140085,"byte_end":140099,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140100,"byte_end":140127,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140128,"byte_end":140135,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140136,"byte_end":140139,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Finally, [`in_scope`] takes a closure or function pointer and executes it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140140,"byte_end":140217,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ inside the span:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140218,"byte_end":140238,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140239,"byte_end":140242,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140243,"byte_end":140250,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140251,"byte_end":140284,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140285,"byte_end":140309,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var = &my_var);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140310,"byte_end":140377,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140378,"byte_end":140381,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140382,"byte_end":140407,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/     // perform some work in the context of `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140408,"byte_end":140467,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140468,"byte_end":140475,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140476,"byte_end":140479,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Perform some work outside of the context of `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140480,"byte_end":140543,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140544,"byte_end":140547,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140548,"byte_end":140573,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/     // Perform some more work in the context of `my_span`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140574,"byte_end":140636,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140637,"byte_end":140644,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140645,"byte_end":140652,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140653,"byte_end":140656,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140657,"byte_end":140716,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140717,"byte_end":140782,"line_start":123,"line_end":123,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Since entering a span takes <code>&self</code>, and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140783,"byte_end":140861,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ <code>Span</code>s are <code>Clone</code>, <code>Send</code>, and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140862,"byte_end":140931,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/ <code>Sync</code>, it is entirely valid for multiple threads to enter the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":140932,"byte_end":141009,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ same span concurrently.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141010,"byte_end":141037,"line_start":127,"line_end":127,"column_start":1,"column_end":28}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141038,"byte_end":141054,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141055,"byte_end":141058,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ## Span Relationships","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141059,"byte_end":141084,"line_start":130,"line_end":130,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141085,"byte_end":141088,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Spans form a tree structure — unless it is a root span, all spans have a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141089,"byte_end":141167,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ _parent_, and may have one or more _children_. When a new span is created,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141168,"byte_end":141246,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ the current span becomes the new span's parent. The total execution time of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141247,"byte_end":141326,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ a span consists of the time spent in that span and in the entire subtree","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141327,"byte_end":141403,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ represented by its children. Thus, a parent span always lasts for at least","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141404,"byte_end":141482,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ as long as the longest-executing span in its subtree.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141483,"byte_end":141540,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141541,"byte_end":141544,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141545,"byte_end":141552,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141553,"byte_end":141593,"line_start":140,"line_end":140,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141594,"byte_end":141619,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/ // this span is considered the \"root\" of a new trace tree:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141620,"byte_end":141682,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"/ span!(Level::INFO, \"root\").in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141683,"byte_end":141727,"line_start":143,"line_end":143,"column_start":1,"column_end":45}},{"value":"/     // since we are now inside \"root\", this span is considered a child","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141728,"byte_end":141802,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"/     // of \"root\":","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141803,"byte_end":141824,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/     span!(Level::DEBUG, \"outer_child\").in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141825,"byte_end":141881,"line_start":146,"line_end":146,"column_start":1,"column_end":57}},{"value":"/         // this span is a child of \"outer_child\", which is in turn a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141882,"byte_end":141954,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/         // child of \"root\":","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141955,"byte_end":141986,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/         span!(Level::TRACE, \"inner_child\").in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":141987,"byte_end":142047,"line_start":149,"line_end":149,"column_start":1,"column_end":61}},{"value":"/             // and so on...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142048,"byte_end":142079,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"/         });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142080,"byte_end":142095,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142096,"byte_end":142107,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/     // another span created here would also be a child of \"root\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142108,"byte_end":142177,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142178,"byte_end":142185,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142186,"byte_end":142192,"line_start":155,"line_end":155,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142193,"byte_end":142196,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ In addition, the parent of a span may be explicitly specified in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142197,"byte_end":142265,"line_start":157,"line_end":157,"column_start":1,"column_end":69}},{"value":"/ the `span!` macro. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142266,"byte_end":142301,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142302,"byte_end":142305,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142306,"byte_end":142317,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142318,"byte_end":142358,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142359,"byte_end":142384,"line_start":162,"line_end":162,"column_start":1,"column_end":26}},{"value":"/ // Create, but do not enter, a span called \"foo\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142385,"byte_end":142438,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/ let foo = span!(Level::INFO, \"foo\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142439,"byte_end":142479,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142480,"byte_end":142483,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Create and enter a span called \"bar\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142484,"byte_end":142528,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ let bar = span!(Level::INFO, \"bar\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142529,"byte_end":142569,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/ let _enter = bar.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142570,"byte_end":142599,"line_start":168,"line_end":168,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142600,"byte_end":142603,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ // Although we have currently entered \"bar\", \"baz\"'s parent span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142604,"byte_end":142672,"line_start":170,"line_end":170,"column_start":1,"column_end":69}},{"value":"/ // will be \"foo\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142673,"byte_end":142694,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ let baz = span!(parent: &foo, Level::INFO, \"baz\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142695,"byte_end":142749,"line_start":172,"line_end":172,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142750,"byte_end":142757,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142758,"byte_end":142761,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ A child span should typically be considered _part_ of its parent. For","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142762,"byte_end":142835,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ example, if a subscriber is recording the length of time spent in various","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142836,"byte_end":142913,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ spans, it should generally include the time spent in a span's children as","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142914,"byte_end":142991,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ part of that span's duration.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":142992,"byte_end":143025,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143026,"byte_end":143029,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ In addition to having zero or one parent, a span may also _follow from_ any","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143030,"byte_end":143109,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ number of other spans. This indicates a causal relationship between the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143110,"byte_end":143190,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ and the spans that it follows from, but a follower is *not* typically","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143191,"byte_end":143264,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/ considered part of the duration of the span it follows. Unlike the parent, a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143265,"byte_end":143345,"line_start":183,"line_end":183,"column_start":1,"column_end":81}},{"value":"/ span may record that it follows from another span after it is created, using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143346,"byte_end":143426,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ the [`follows_from`] method.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143427,"byte_end":143459,"line_start":185,"line_end":185,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143460,"byte_end":143463,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a listener task in a server. As the listener accepts","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143464,"byte_end":143544,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ incoming connections, it spawns new tasks that handle those connections. We","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143545,"byte_end":143624,"line_start":188,"line_end":188,"column_start":1,"column_end":80}},{"value":"/ might want to have a span representing the listener, and instrument each","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143625,"byte_end":143701,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ spawned handler task with its own span. We would want our instrumentation to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143702,"byte_end":143782,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ record that the handler tasks were spawned as a result of the listener task.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143783,"byte_end":143863,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ However, we might not consider the handler tasks to be _part_ of the time","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143864,"byte_end":143941,"line_start":192,"line_end":192,"column_start":1,"column_end":78}},{"value":"/ spent in the listener task, so we would not consider those spans children of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":143942,"byte_end":144022,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"/ the listener span. Instead, we would record that the handler tasks follow","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144023,"byte_end":144100,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/ from the listener, recording the causal relationship but treating the spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144101,"byte_end":144180,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ as separate durations.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144181,"byte_end":144207,"line_start":196,"line_end":196,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144208,"byte_end":144211,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ## Closing Spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144212,"byte_end":144232,"line_start":198,"line_end":198,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144233,"byte_end":144236,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Execution may enter and exit a span multiple times before that span is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144237,"byte_end":144311,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ _closed_. Consider, for example, a future which has an associated","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144312,"byte_end":144381,"line_start":201,"line_end":201,"column_start":1,"column_end":70}},{"value":"/ span and enters that span every time it is polled:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144382,"byte_end":144436,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144437,"byte_end":144448,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/ # extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144449,"byte_end":144476,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144477,"byte_end":144504,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Poll, Async};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144505,"byte_end":144546,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144547,"byte_end":144568,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/    // data","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144569,"byte_end":144583,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/    span: tracing::Span,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144584,"byte_end":144611,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144612,"byte_end":144617,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144618,"byte_end":144621,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144622,"byte_end":144652,"line_start":212,"line_end":212,"column_start":1,"column_end":31}},{"value":"/     type Item = ();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144653,"byte_end":144676,"line_start":213,"line_end":213,"column_start":1,"column_end":24}},{"value":"/     type Error = ();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144677,"byte_end":144701,"line_start":214,"line_end":214,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144702,"byte_end":144705,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/     fn poll(&mut self) -> Poll<Self::Item, Self::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144706,"byte_end":144767,"line_start":216,"line_end":216,"column_start":1,"column_end":62}},{"value":"/         let _enter = self.span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144768,"byte_end":144811,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/         // Do actual future work...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144812,"byte_end":144851,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"/ # Ok(Async::Ready(()))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144852,"byte_end":144878,"line_start":219,"line_end":219,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144879,"byte_end":144888,"line_start":220,"line_end":220,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144889,"byte_end":144894,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144895,"byte_end":144902,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144903,"byte_end":144906,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ If this future was spawned on an executor, it might yield one or more times","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144907,"byte_end":144986,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ before `poll` returns `Ok(Async::Ready)`. If the future were to yield, then","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":144987,"byte_end":145066,"line_start":225,"line_end":225,"column_start":1,"column_end":80}},{"value":"/ the executor would move on to poll the next future, which may _also_ enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145067,"byte_end":145145,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ an associated span or series of spans. Therefore, it is valid for a span to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145146,"byte_end":145225,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ be entered repeatedly before it completes. Only the time when that span or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145226,"byte_end":145304,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ one of its children was the current span is considered to be time spent in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145305,"byte_end":145383,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ that span. A span which is not executing and has not yet been closed is said","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145384,"byte_end":145464,"line_start":230,"line_end":230,"column_start":1,"column_end":81}},{"value":"/ to be _idle_.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145465,"byte_end":145482,"line_start":231,"line_end":231,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145483,"byte_end":145486,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Because spans may be entered and exited multiple times before they close,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145487,"byte_end":145564,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber`]s have separate trait methods which are called to notify them","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145565,"byte_end":145644,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/ of span exits and when span handles are dropped. When execution exits a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145645,"byte_end":145720,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ span, [`exit`] will always be called with that span's ID to notify the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145721,"byte_end":145795,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"/ subscriber that the span has been exited. When span handles are dropped, the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145796,"byte_end":145876,"line_start":237,"line_end":237,"column_start":1,"column_end":81}},{"value":"/ [`drop_span`] method is called with that span's ID. The subscriber may use","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145877,"byte_end":145955,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ this to determine whether or not the span will be entered again.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":145956,"byte_end":146024,"line_start":239,"line_end":239,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146025,"byte_end":146028,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ If there is only a single handle with the capacity to exit a span, dropping","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146029,"byte_end":146108,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/ that handle \"closes\" the span, since the capacity to enter it no longer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146109,"byte_end":146184,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/ exists. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146185,"byte_end":146209,"line_start":243,"line_end":243,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146210,"byte_end":146217,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146218,"byte_end":146258,"line_start":245,"line_end":245,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146259,"byte_end":146284,"line_start":246,"line_end":246,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146285,"byte_end":146290,"line_start":247,"line_end":247,"column_start":1,"column_end":6}},{"value":"/     span!(Level::TRACE, \"my_span\").in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146291,"byte_end":146343,"line_start":248,"line_end":248,"column_start":1,"column_end":53}},{"value":"/         // perform some work in the context of `my_span`...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146344,"byte_end":146407,"line_start":249,"line_end":249,"column_start":1,"column_end":64}},{"value":"/     }); // --> Subscriber::exit(my_span)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146408,"byte_end":146452,"line_start":250,"line_end":250,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146453,"byte_end":146456,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/     // The handle to `my_span` only lives inside of this block; when it is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146457,"byte_end":146535,"line_start":252,"line_end":252,"column_start":1,"column_end":79}},{"value":"/     // dropped, the subscriber will be informed via `drop_span`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146536,"byte_end":146604,"line_start":253,"line_end":253,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146605,"byte_end":146608,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ } // --> Subscriber::drop_span(my_span)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146609,"byte_end":146652,"line_start":255,"line_end":255,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146653,"byte_end":146660,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146661,"byte_end":146664,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ However, if multiple handles exist, the span can still be re-entered even if","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146665,"byte_end":146745,"line_start":258,"line_end":258,"column_start":1,"column_end":81}},{"value":"/ one or more is dropped. For determining when _all_ handles to a span have","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146746,"byte_end":146823,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ been dropped, `Subscriber`s have a [`clone_span`] method, which is called","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146824,"byte_end":146901,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/ every time a span handle is cloned. Combined with `drop_span`, this may be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146902,"byte_end":146980,"line_start":261,"line_end":261,"column_start":1,"column_end":79}},{"value":"/ used to track the number of handles to a given span — if `drop_span` has","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":146981,"byte_end":147059,"line_start":262,"line_end":262,"column_start":1,"column_end":77}},{"value":"/ been called one more time than the number of calls to `clone_span` for a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147060,"byte_end":147136,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ given ID, then no more handles to the span with that ID exist. The","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147137,"byte_end":147207,"line_start":264,"line_end":264,"column_start":1,"column_end":71}},{"value":"/ subscriber may then treat it as closed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147208,"byte_end":147251,"line_start":265,"line_end":265,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147252,"byte_end":147255,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ # When to use spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147256,"byte_end":147279,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147280,"byte_end":147283,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ As a rule of thumb, spans should be used to represent discrete units of work","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147284,"byte_end":147364,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ (e.g., a given request's lifetime in a server) or periods of time spent in a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147365,"byte_end":147445,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ given context (e.g., time spent interacting with an instance of an external","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147446,"byte_end":147525,"line_start":271,"line_end":271,"column_start":1,"column_end":80}},{"value":"/ system, such as a database).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147526,"byte_end":147558,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147559,"byte_end":147562,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Which scopes in a program correspond to new spans depend somewhat on user","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147563,"byte_end":147640,"line_start":274,"line_end":274,"column_start":1,"column_end":78}},{"value":"/ intent. For example, consider the case of a loop in a program. Should we","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147641,"byte_end":147717,"line_start":275,"line_end":275,"column_start":1,"column_end":77}},{"value":"/ construct one span and perform the entire loop inside of that span, like:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147718,"byte_end":147795,"line_start":276,"line_end":276,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147796,"byte_end":147799,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147800,"byte_end":147811,"line_start":278,"line_end":278,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147812,"byte_end":147852,"line_start":279,"line_end":279,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147853,"byte_end":147878,"line_start":280,"line_end":280,"column_start":1,"column_end":26}},{"value":"/ # let n = 1;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147879,"byte_end":147895,"line_start":281,"line_end":281,"column_start":1,"column_end":17}},{"value":"/ let span = span!(Level::TRACE, \"my_loop\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147896,"byte_end":147942,"line_start":282,"line_end":282,"column_start":1,"column_end":47}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147943,"byte_end":147973,"line_start":283,"line_end":283,"column_start":1,"column_end":31}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147974,"byte_end":147993,"line_start":284,"line_end":284,"column_start":1,"column_end":20}},{"value":"/     # let _ = i;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":147994,"byte_end":148014,"line_start":285,"line_end":285,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148015,"byte_end":148029,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148030,"byte_end":148035,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148036,"byte_end":148043,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ Or, should we create a new span for each iteration of the loop, as in:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148044,"byte_end":148118,"line_start":289,"line_end":289,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148119,"byte_end":148130,"line_start":290,"line_end":290,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148131,"byte_end":148171,"line_start":291,"line_end":291,"column_start":1,"column_end":41}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148172,"byte_end":148197,"line_start":292,"line_end":292,"column_start":1,"column_end":26}},{"value":"/ # let n = 1u64;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148198,"byte_end":148217,"line_start":293,"line_end":293,"column_start":1,"column_end":20}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148218,"byte_end":148237,"line_start":294,"line_end":294,"column_start":1,"column_end":20}},{"value":"/     let span = span!(Level::TRACE, \"my_loop\", iteration = i);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148238,"byte_end":148303,"line_start":295,"line_end":295,"column_start":1,"column_end":66}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148304,"byte_end":148338,"line_start":296,"line_end":296,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148339,"byte_end":148353,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148354,"byte_end":148359,"line_start":298,"line_end":298,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148360,"byte_end":148367,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148368,"byte_end":148371,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ Depending on the circumstances, we might want to do either, or both. For","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148372,"byte_end":148448,"line_start":301,"line_end":301,"column_start":1,"column_end":77}},{"value":"/ example, if we want to know how long was spent in the loop overall, we would","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148449,"byte_end":148529,"line_start":302,"line_end":302,"column_start":1,"column_end":81}},{"value":"/ create a single span around the entire loop; whereas if we wanted to know how","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148530,"byte_end":148611,"line_start":303,"line_end":303,"column_start":1,"column_end":82}},{"value":"/ much time was spent in each individual iteration, we would enter a new span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148612,"byte_end":148691,"line_start":304,"line_end":304,"column_start":1,"column_end":80}},{"value":"/ on every iteration.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148692,"byte_end":148715,"line_start":305,"line_end":305,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148716,"byte_end":148719,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [fields]: ../field/index.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148720,"byte_end":148753,"line_start":307,"line_end":307,"column_start":1,"column_end":34}},{"value":"/ [Metadata]: ../struct.Metadata.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148754,"byte_end":148793,"line_start":308,"line_end":308,"column_start":1,"column_end":40}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148794,"byte_end":148820,"line_start":309,"line_end":309,"column_start":1,"column_end":27}},{"value":"/ [verbosity level]: ../struct.Level.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148821,"byte_end":148864,"line_start":310,"line_end":310,"column_start":1,"column_end":44}},{"value":"/ [`span!`]: ../macro.span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148865,"byte_end":148898,"line_start":311,"line_end":311,"column_start":1,"column_end":34}},{"value":"/ [`trace_span!`]: ../macro.trace_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148899,"byte_end":148944,"line_start":312,"line_end":312,"column_start":1,"column_end":46}},{"value":"/ [`debug_span!`]: ../macro.debug_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148945,"byte_end":148990,"line_start":313,"line_end":313,"column_start":1,"column_end":46}},{"value":"/ [`info_span!`]: ../macro.info_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":148991,"byte_end":149034,"line_start":314,"line_end":314,"column_start":1,"column_end":44}},{"value":"/ [`warn_span!`]: ../macro.warn_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149035,"byte_end":149078,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/ [`error_span!`]: ../macro.error_span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149079,"byte_end":149124,"line_start":316,"line_end":316,"column_start":1,"column_end":46}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149125,"byte_end":149198,"line_start":317,"line_end":317,"column_start":1,"column_end":74}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149199,"byte_end":149270,"line_start":318,"line_end":318,"column_start":1,"column_end":72}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#tymethod.exit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149271,"byte_end":149334,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149335,"byte_end":149390,"line_start":320,"line_end":320,"column_start":1,"column_end":56}},{"value":"/ [`Attributes`]: struct.Attributes.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149391,"byte_end":149433,"line_start":321,"line_end":321,"column_start":1,"column_end":43}},{"value":"/ [`enter`]: struct.Span.html#method.enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149434,"byte_end":149478,"line_start":322,"line_end":322,"column_start":1,"column_end":45}},{"value":"/ [`entered`]: struct.Span.html#method.entered","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149479,"byte_end":149527,"line_start":323,"line_end":323,"column_start":1,"column_end":49}},{"value":"/ [`in_scope`]: struct.Span.html#method.in_scope","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149528,"byte_end":149578,"line_start":324,"line_end":324,"column_start":1,"column_end":51}},{"value":"/ [`follows_from`]: struct.Span.html#method.follows_from","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149579,"byte_end":149637,"line_start":325,"line_end":325,"column_start":1,"column_end":59}},{"value":"/ [guard]: struct.Entered.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149638,"byte_end":149670,"line_start":326,"line_end":326,"column_start":1,"column_end":33}},{"value":"/ [parent]: #span-relationships","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149671,"byte_end":149704,"line_start":327,"line_end":327,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":226},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150011,"byte_end":150015,"line_start":343,"line_end":343,"column_start":11,"column_end":15},"name":"AsId","qualname":"::span::AsId","value":"AsId: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":227}],"decl_id":null,"docs":" Trait implemented by types which have a span `Id`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types which have a span `Id`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":149946,"byte_end":150000,"line_start":342,"line_end":342,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150171,"byte_end":150176,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"as_id","qualname":"::span::AsId::as_id","value":"pub fn as_id(&Self) -> Option<&Id>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the `Id` of the span that `self` corresponds to, or `None` if\n this corresponds to a disabled span.\n","sig":null,"attributes":[{"value":"/ Returns the `Id` of the span that `self` corresponds to, or `None` if","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150045,"byte_end":150118,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ this corresponds to a disabled span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150123,"byte_end":150163,"line_start":345,"line_end":345,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150561,"byte_end":150565,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"decl_id":null,"docs":" A handle representing a span, with the capability to enter the span if it\n exists.","sig":null,"attributes":[{"value":"/ A handle representing a span, with the capability to enter the span if it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150203,"byte_end":150280,"line_start":349,"line_end":349,"column_start":1,"column_end":78}},{"value":"/ exists.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150281,"byte_end":150292,"line_start":350,"line_end":350,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150293,"byte_end":150296,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ If the span was rejected by the current `Subscriber`'s filter, entering the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150297,"byte_end":150376,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/ span will silently do nothing. Thus, the handle can be used in the same","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150377,"byte_end":150452,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/ manner regardless of whether or not the trace is currently being collected.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150453,"byte_end":150532,"line_start":354,"line_end":354,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151976,"byte_end":151983,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"Entered","qualname":"::span::Entered","value":"Entered {  }","parent":null,"children":[{"krate":0,"index":483}],"decl_id":null,"docs":" A guard representing a span which has been entered and is currently\n executing.","sig":null,"attributes":[{"value":"/ A guard representing a span which has been entered and is currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151619,"byte_end":151690,"line_start":385,"line_end":385,"column_start":1,"column_end":72}},{"value":"/ executing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151691,"byte_end":151705,"line_start":386,"line_end":386,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151706,"byte_end":151709,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151710,"byte_end":151765,"line_start":388,"line_end":388,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151766,"byte_end":151769,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::enter`] function.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151770,"byte_end":151823,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151824,"byte_end":151827,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Span::enter`]: ../struct.Span.html#method.enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151828,"byte_end":151881,"line_start":392,"line_end":392,"column_start":1,"column_end":54}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":151899,"byte_end":151964,"line_start":394,"line_end":394,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152397,"byte_end":152408,"line_start":409,"line_end":409,"column_start":12,"column_end":23},"name":"EnteredSpan","qualname":"::span::EnteredSpan","value":"EnteredSpan {  }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"decl_id":null,"docs":" An owned version of [`Entered`], a guard representing a span which has been\n entered and is currently executing.","sig":null,"attributes":[{"value":"/ An owned version of [`Entered`], a guard representing a span which has been","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152013,"byte_end":152092,"line_start":399,"line_end":399,"column_start":1,"column_end":80}},{"value":"/ entered and is currently executing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152093,"byte_end":152132,"line_start":400,"line_end":400,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152133,"byte_end":152136,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152137,"byte_end":152192,"line_start":402,"line_end":402,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152193,"byte_end":152196,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::entered`] function.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152197,"byte_end":152252,"line_start":404,"line_end":404,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152253,"byte_end":152256,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ [`Span::entered`]: super::Span::entered()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152257,"byte_end":152302,"line_start":406,"line_end":406,"column_start":1,"column_end":46}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152320,"byte_end":152385,"line_start":408,"line_end":408,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153545,"byte_end":153548,"line_start":444,"line_end":444,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` with the given [metadata] and set of\n [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` with the given [metadata] and set of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152949,"byte_end":153013,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/ [field values].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153018,"byte_end":153037,"line_start":432,"line_end":432,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153042,"byte_end":153045,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The new span will be constructed by the currently-active [`Subscriber`],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153050,"byte_end":153126,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ with the current span as its parent (if one exists).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153131,"byte_end":153187,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153192,"byte_end":153195,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153200,"byte_end":153273,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153278,"byte_end":153313,"line_start":438,"line_end":438,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153318,"byte_end":153321,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153326,"byte_end":153353,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153358,"byte_end":153413,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153418,"byte_end":153467,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153472,"byte_end":153533,"line_start":443,"line_end":443,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153757,"byte_end":153765,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Span>::new_with","value":"pub fn new_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":153717,"byte_end":153726,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154428,"byte_end":154436,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Span>::new_root","value":"pub fn new_root(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as the root of its own trace tree, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as the root of its own trace tree, with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154007,"byte_end":154078,"line_start":459,"line_end":459,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154083,"byte_end":154130,"line_start":460,"line_end":460,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154135,"byte_end":154138,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154143,"byte_end":154216,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154221,"byte_end":154256,"line_start":463,"line_end":463,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154261,"byte_end":154264,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154269,"byte_end":154296,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154301,"byte_end":154350,"line_start":466,"line_end":466,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154355,"byte_end":154416,"line_start":467,"line_end":467,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154650,"byte_end":154663,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"new_root_with","qualname":"<Span>::new_root_with","value":"pub fn new_root_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154610,"byte_end":154619,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155331,"byte_end":155339,"line_start":492,"line_end":492,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Span>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &field::ValueSet)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as child of the given parent span, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as child of the given parent span, with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154910,"byte_end":154981,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":154986,"byte_end":155033,"line_start":484,"line_end":484,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155038,"byte_end":155041,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155046,"byte_end":155119,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155124,"byte_end":155159,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155164,"byte_end":155167,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155172,"byte_end":155199,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155204,"byte_end":155253,"line_start":490,"line_end":490,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155258,"byte_end":155319,"line_start":491,"line_end":491,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155711,"byte_end":155724,"line_start":505,"line_end":505,"column_start":12,"column_end":25},"name":"child_of_with","qualname":"<Span>::child_of_with","value":"pub fn child_of_with<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                              &'static Metadata,\n                                                              &field::ValueSet,\n                                                              &Dispatch)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":155671,"byte_end":155680,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156560,"byte_end":156572,"line_start":527,"line_end":527,"column_start":12,"column_end":24},"name":"new_disabled","qualname":"<Span>::new_disabled","value":"pub fn new_disabled(&'static Metadata) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new disabled span with the given `Metadata`.","sig":null,"attributes":[{"value":"/ Constructs a new disabled span with the given `Metadata`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156135,"byte_end":156196,"line_start":518,"line_end":518,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156201,"byte_end":156204,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This should be used when a span is constructed from a known callsite,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156209,"byte_end":156282,"line_start":520,"line_end":520,"column_start":5,"column_end":78}},{"value":"/ but the subscriber indicates that it is disabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156287,"byte_end":156340,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156345,"byte_end":156348,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will not notify the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156353,"byte_end":156429,"line_start":523,"line_end":523,"column_start":5,"column_end":81}},{"value":"/ `Subscriber` but _may_ record log messages if the `log` feature flag is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156434,"byte_end":156509,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156514,"byte_end":156526,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156531,"byte_end":156548,"line_start":526,"line_end":526,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157006,"byte_end":157010,"line_start":541,"line_end":541,"column_start":18,"column_end":22},"name":"none","qualname":"<Span>::none","value":"pub const fn none() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span that is *completely disabled*.","sig":null,"attributes":[{"value":"/ Constructs a new span that is *completely disabled*.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156708,"byte_end":156764,"line_start":534,"line_end":534,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156769,"byte_end":156772,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This can be used rather than `Option<Span>` to represent cases where a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156777,"byte_end":156851,"line_start":536,"line_end":536,"column_start":5,"column_end":79}},{"value":"/ span is not present.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156856,"byte_end":156880,"line_start":537,"line_end":537,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156885,"byte_end":156888,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will do nothing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156893,"byte_end":156966,"line_start":539,"line_end":539,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":156971,"byte_end":156988,"line_start":540,"line_end":540,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157541,"byte_end":157548,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"current","qualname":"<Span>::current","value":"pub fn current() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the span [considered by the `Subscriber`] to be the\n current span.","sig":null,"attributes":[{"value":"/ Returns a handle to the span [considered by the `Subscriber`] to be the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157108,"byte_end":157183,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ current span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157188,"byte_end":157205,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157210,"byte_end":157213,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ If the subscriber indicates that it does not track the current span, or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157218,"byte_end":157293,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/ that the thread from which this function is called is not currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157298,"byte_end":157369,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ inside a span, the returned span will be disabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157374,"byte_end":157428,"line_start":553,"line_end":553,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157433,"byte_end":157436,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [considered by the `Subscriber`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":157441,"byte_end":157529,"line_start":555,"line_end":555,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165520,"byte_end":165525,"line_start":784,"line_end":784,"column_start":12,"column_end":17},"name":"enter","qualname":"<Span>::enter","value":"pub fn enter(&Self) -> Entered","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, returning a guard that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, returning a guard that will exit the span when dropped.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158651,"byte_end":158728,"line_start":596,"line_end":596,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158733,"byte_end":158736,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158741,"byte_end":158819,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158824,"byte_end":158901,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158906,"byte_end":158976,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158981,"byte_end":158993,"line_start":601,"line_end":601,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":158998,"byte_end":159001,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # In Asynchronous Code","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159006,"byte_end":159032,"line_start":603,"line_end":603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159037,"byte_end":159040,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159045,"byte_end":159122,"line_start":605,"line_end":605,"column_start":5,"column_end":82}},{"value":"/ `Span::enter` should be used very carefully or avoided entirely. Holding","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159127,"byte_end":159203,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ the drop guard returned by `Span::enter` across `.await` points will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159208,"byte_end":159280,"line_start":607,"line_end":607,"column_start":5,"column_end":77}},{"value":"/ result in incorrect traces. For example,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159285,"byte_end":159329,"line_start":608,"line_end":608,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159334,"byte_end":159337,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159342,"byte_end":159349,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159354,"byte_end":159383,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"/ # async fn some_other_async_function() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159388,"byte_end":159433,"line_start":612,"line_end":612,"column_start":5,"column_end":50}},{"value":"/ async fn my_async_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159438,"byte_end":159472,"line_start":613,"line_end":613,"column_start":5,"column_end":39}},{"value":"/     let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159477,"byte_end":159528,"line_start":614,"line_end":614,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159533,"byte_end":159536,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/     // THIS WILL RESULT IN INCORRECT TRACES","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159541,"byte_end":159588,"line_start":616,"line_end":616,"column_start":5,"column_end":52}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159593,"byte_end":159627,"line_start":617,"line_end":617,"column_start":5,"column_end":39}},{"value":"/     some_other_async_function().await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159632,"byte_end":159674,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159679,"byte_end":159682,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159687,"byte_end":159701,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159706,"byte_end":159711,"line_start":621,"line_end":621,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159716,"byte_end":159723,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159728,"byte_end":159731,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The drop guard returned by `Span::enter` exits the span when it is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159736,"byte_end":159806,"line_start":624,"line_end":624,"column_start":5,"column_end":75}},{"value":"/ dropped. When an async function or async block yields at an `.await`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159811,"byte_end":159883,"line_start":625,"line_end":625,"column_start":5,"column_end":77}},{"value":"/ point, the current scope is _exited_, but values in that scope are","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159888,"byte_end":159958,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ **not** dropped (because the async block will eventually resume","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":159963,"byte_end":160030,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ execution from that await point). This means that _another_ task will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160035,"byte_end":160108,"line_start":628,"line_end":628,"column_start":5,"column_end":78}},{"value":"/ begin executing while _remaining_ in the entered span. This results in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160113,"byte_end":160187,"line_start":629,"line_end":629,"column_start":5,"column_end":79}},{"value":"/ an incorrect trace.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160192,"byte_end":160215,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160220,"byte_end":160223,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Instead of using `Span::enter` in asynchronous code, prefer the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160228,"byte_end":160295,"line_start":632,"line_end":632,"column_start":5,"column_end":72}},{"value":"/ following:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160300,"byte_end":160314,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160319,"byte_end":160322,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ * To enter a span for a synchronous section of code within an async","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160327,"byte_end":160398,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/   block or function, prefer [`Span::in_scope`]. Since `in_scope` takes a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160403,"byte_end":160479,"line_start":636,"line_end":636,"column_start":5,"column_end":81}},{"value":"/   synchronous closure and exits the span when the closure returns, the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160484,"byte_end":160558,"line_start":637,"line_end":637,"column_start":5,"column_end":79}},{"value":"/   span will always be exited before the next await point. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160563,"byte_end":160637,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160642,"byte_end":160651,"line_start":639,"line_end":639,"column_start":5,"column_end":14}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160656,"byte_end":160687,"line_start":640,"line_end":640,"column_start":5,"column_end":36}},{"value":"/   # async fn some_other_async_function(_: ()) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160692,"byte_end":160744,"line_start":641,"line_end":641,"column_start":5,"column_end":57}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160749,"byte_end":160785,"line_start":642,"line_end":642,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160790,"byte_end":160843,"line_start":643,"line_end":643,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160848,"byte_end":160851,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/       let some_value = span.in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160856,"byte_end":160901,"line_start":645,"line_end":645,"column_start":5,"column_end":50}},{"value":"/           // run some synchronous code inside the span...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160906,"byte_end":160967,"line_start":646,"line_end":646,"column_start":5,"column_end":66}},{"value":"/       });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160972,"byte_end":160985,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160990,"byte_end":160993,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/       // This is okay! The span has already been exited before we reach","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":160998,"byte_end":161073,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/       // the await point.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161078,"byte_end":161107,"line_start":650,"line_end":650,"column_start":5,"column_end":34}},{"value":"/       some_other_async_function(some_value).await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161112,"byte_end":161166,"line_start":651,"line_end":651,"column_start":5,"column_end":59}},{"value":"/  ","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161171,"byte_end":161176,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/       // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161181,"byte_end":161197,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161202,"byte_end":161209,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161214,"byte_end":161223,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ * For instrumenting asynchronous code, `tracing` provides the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161228,"byte_end":161293,"line_start":656,"line_end":656,"column_start":5,"column_end":70}},{"value":"/   [`Future::instrument` combinator][instrument] for","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161298,"byte_end":161353,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/   attaching a span to a future (async function or block). This will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161358,"byte_end":161429,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/   enter the span _every_ time the future is polled, and exit it whenever","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161434,"byte_end":161510,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/   the future yields.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161515,"byte_end":161539,"line_start":660,"line_end":660,"column_start":5,"column_end":29}},{"value":"/   ","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161544,"byte_end":161550,"line_start":661,"line_end":661,"column_start":5,"column_end":11}},{"value":"/   `Instrument` can be used with an async block inside an async function:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161555,"byte_end":161631,"line_start":662,"line_end":662,"column_start":5,"column_end":81}},{"value":"/   ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161636,"byte_end":161651,"line_start":663,"line_end":663,"column_start":5,"column_end":20}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161656,"byte_end":161687,"line_start":664,"line_end":664,"column_start":5,"column_end":36}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161692,"byte_end":161722,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161727,"byte_end":161730,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161735,"byte_end":161782,"line_start":667,"line_end":667,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161787,"byte_end":161823,"line_start":668,"line_end":668,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161828,"byte_end":161881,"line_start":669,"line_end":669,"column_start":5,"column_end":58}},{"value":"/       async move {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161886,"byte_end":161908,"line_start":670,"line_end":670,"column_start":5,"column_end":27}},{"value":"/          // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161913,"byte_end":161988,"line_start":671,"line_end":671,"column_start":5,"column_end":80}},{"value":"/          // and re-entered when we resume.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":161993,"byte_end":162039,"line_start":672,"line_end":672,"column_start":5,"column_end":51}},{"value":"/          some_other_async_function().await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162044,"byte_end":162091,"line_start":673,"line_end":673,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162096,"byte_end":162099,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/          //more asynchronous code inside the span...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162104,"byte_end":162160,"line_start":675,"line_end":675,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162165,"byte_end":162168,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/       }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162173,"byte_end":162184,"line_start":677,"line_end":677,"column_start":5,"column_end":16}},{"value":"/         // instrument the async block with the span...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162189,"byte_end":162247,"line_start":678,"line_end":678,"column_start":5,"column_end":63}},{"value":"/         .instrument(span)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162252,"byte_end":162281,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/         // ...and await it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162286,"byte_end":162317,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/         .await","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162322,"byte_end":162340,"line_start":681,"line_end":681,"column_start":5,"column_end":23}},{"value":"/   }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162345,"byte_end":162352,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162357,"byte_end":162366,"line_start":683,"line_end":683,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162371,"byte_end":162374,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/   It can also be used to instrument calls to async functions at the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162379,"byte_end":162450,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/   callsite:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162455,"byte_end":162470,"line_start":686,"line_end":686,"column_start":5,"column_end":20}},{"value":"/   ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162475,"byte_end":162490,"line_start":687,"line_end":687,"column_start":5,"column_end":20}},{"value":"/   # use tracing::debug_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162495,"byte_end":162527,"line_start":688,"line_end":688,"column_start":5,"column_end":37}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162532,"byte_end":162562,"line_start":689,"line_end":689,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162567,"byte_end":162570,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162575,"byte_end":162622,"line_start":691,"line_end":691,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162627,"byte_end":162663,"line_start":692,"line_end":692,"column_start":5,"column_end":41}},{"value":"/       let some_value = some_other_async_function()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162668,"byte_end":162722,"line_start":693,"line_end":693,"column_start":5,"column_end":59}},{"value":"/          .instrument(debug_span!(\"some_other_async_function\"))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162727,"byte_end":162793,"line_start":694,"line_end":694,"column_start":5,"column_end":71}},{"value":"/          .await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162798,"byte_end":162818,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162823,"byte_end":162826,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162831,"byte_end":162847,"line_start":697,"line_end":697,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162852,"byte_end":162859,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162864,"byte_end":162873,"line_start":699,"line_end":699,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162878,"byte_end":162881,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ * The [`#[instrument]` attribute macro][attr] can automatically generate","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162886,"byte_end":162962,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/   correct code when used on an async function:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":162967,"byte_end":163017,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163022,"byte_end":163025,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/   ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163030,"byte_end":163045,"line_start":704,"line_end":704,"column_start":5,"column_end":20}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163050,"byte_end":163097,"line_start":705,"line_end":705,"column_start":5,"column_end":52}},{"value":"/   #[tracing::instrument(level = \"info\")]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163102,"byte_end":163146,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163151,"byte_end":163187,"line_start":707,"line_end":707,"column_start":5,"column_end":41}},{"value":"/   ","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163192,"byte_end":163198,"line_start":708,"line_end":708,"column_start":5,"column_end":11}},{"value":"/       // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163203,"byte_end":163275,"line_start":709,"line_end":709,"column_start":5,"column_end":77}},{"value":"/       // and re-entered when we resume.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163280,"byte_end":163323,"line_start":710,"line_end":710,"column_start":5,"column_end":48}},{"value":"/       some_other_async_function().await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163328,"byte_end":163372,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163377,"byte_end":163380,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163385,"byte_end":163401,"line_start":713,"line_end":713,"column_start":5,"column_end":21}},{"value":"/    ","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163406,"byte_end":163413,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/   }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163418,"byte_end":163425,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163430,"byte_end":163439,"line_start":716,"line_end":716,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163444,"byte_end":163447,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163452,"byte_end":163550,"line_start":718,"line_end":718,"column_start":5,"column_end":103}},{"value":"/ [`Span::in_scope`]: #method.in_scope","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163555,"byte_end":163595,"line_start":719,"line_end":719,"column_start":5,"column_end":45}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/trait.Instrument.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163600,"byte_end":163678,"line_start":720,"line_end":720,"column_start":5,"column_end":83}},{"value":"/ [attr]: ../../attr.instrument.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163683,"byte_end":163721,"line_start":721,"line_end":721,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163726,"byte_end":163729,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163734,"byte_end":163748,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163753,"byte_end":163756,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163761,"byte_end":163768,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163773,"byte_end":163811,"line_start":726,"line_end":726,"column_start":5,"column_end":43}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163816,"byte_end":163841,"line_start":727,"line_end":727,"column_start":5,"column_end":30}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163846,"byte_end":163891,"line_start":728,"line_end":728,"column_start":5,"column_end":50}},{"value":"/ let guard = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163896,"byte_end":163925,"line_start":729,"line_end":729,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163930,"byte_end":163933,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163938,"byte_end":163973,"line_start":731,"line_end":731,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163978,"byte_end":163981,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ drop(guard);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":163986,"byte_end":164002,"line_start":733,"line_end":733,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164007,"byte_end":164010,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164015,"byte_end":164060,"line_start":735,"line_end":735,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164065,"byte_end":164068,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164073,"byte_end":164080,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164085,"byte_end":164088,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164093,"byte_end":164135,"line_start":739,"line_end":739,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164140,"byte_end":164143,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164148,"byte_end":164155,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164160,"byte_end":164198,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164203,"byte_end":164235,"line_start":743,"line_end":743,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164240,"byte_end":164298,"line_start":744,"line_end":744,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164303,"byte_end":164349,"line_start":745,"line_end":745,"column_start":5,"column_end":51}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164354,"byte_end":164388,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164393,"byte_end":164396,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164401,"byte_end":164479,"line_start":748,"line_end":748,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164484,"byte_end":164512,"line_start":749,"line_end":749,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164517,"byte_end":164520,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164525,"byte_end":164598,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164603,"byte_end":164643,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164648,"byte_end":164653,"line_start":753,"line_end":753,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164658,"byte_end":164661,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164666,"byte_end":164694,"line_start":755,"line_end":755,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164699,"byte_end":164713,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164718,"byte_end":164723,"line_start":757,"line_end":757,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164728,"byte_end":164735,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164740,"byte_end":164743,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164748,"byte_end":164821,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164826,"byte_end":164838,"line_start":761,"line_end":761,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164843,"byte_end":164846,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164851,"byte_end":164858,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164863,"byte_end":164901,"line_start":764,"line_end":764,"column_start":5,"column_end":43}},{"value":"/ let span = info_span!(\"my_great_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164906,"byte_end":164949,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164954,"byte_end":164957,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164962,"byte_end":164967,"line_start":767,"line_end":767,"column_start":5,"column_end":10}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":164972,"byte_end":165006,"line_start":768,"line_end":768,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165011,"byte_end":165014,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     // this event occurs inside the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165019,"byte_end":165064,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/     info!(\"i'm in the span!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165069,"byte_end":165103,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165108,"byte_end":165111,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, exiting the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165116,"byte_end":165179,"line_start":773,"line_end":773,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165184,"byte_end":165189,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165194,"byte_end":165197,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ // this event is not inside the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165202,"byte_end":165243,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ info!(\"i'm outside the span!\")","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165248,"byte_end":165282,"line_start":777,"line_end":777,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165287,"byte_end":165294,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165299,"byte_end":165302,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165307,"byte_end":165382,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ [`Subscriber::exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165387,"byte_end":165460,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ [`Id`]: ../struct.Id.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165465,"byte_end":165494,"line_start":782,"line_end":782,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165499,"byte_end":165508,"line_start":783,"line_end":783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169745,"byte_end":169752,"line_start":895,"line_end":895,"column_start":12,"column_end":19},"name":"entered","qualname":"<Span>::entered","value":"pub fn entered(Self) -> EnteredSpan","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, consuming it and returning a [guard][`EnteredSpan`]\n that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, consuming it and returning a [guard][`EnteredSpan`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165617,"byte_end":165690,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ that will exit the span when dropped.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165695,"byte_end":165736,"line_start":790,"line_end":790,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165741,"byte_end":165744,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165749,"byte_end":165827,"line_start":792,"line_end":792,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165832,"byte_end":165909,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165914,"byte_end":165984,"line_start":794,"line_end":794,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":165989,"byte_end":166001,"line_start":795,"line_end":795,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166006,"byte_end":166009,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`Span::enter`] method, except that it moves the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166014,"byte_end":166089,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ span by value into the returned guard, rather than borrowing it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166094,"byte_end":166162,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ Therefore, this method can be used to create and enter a span in a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166167,"byte_end":166237,"line_start":799,"line_end":799,"column_start":5,"column_end":75}},{"value":"/ single expression, without requiring a `let`-binding. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166242,"byte_end":166312,"line_start":800,"line_end":800,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166317,"byte_end":166320,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166325,"byte_end":166332,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166337,"byte_end":166366,"line_start":803,"line_end":803,"column_start":5,"column_end":34}},{"value":"/ let _span = info_span!(\"something_interesting\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166371,"byte_end":166433,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166438,"byte_end":166445,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ rather than:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166450,"byte_end":166466,"line_start":806,"line_end":806,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166471,"byte_end":166478,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166483,"byte_end":166512,"line_start":808,"line_end":808,"column_start":5,"column_end":34}},{"value":"/ let span = info_span!(\"something_interesting\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166517,"byte_end":166568,"line_start":809,"line_end":809,"column_start":5,"column_end":56}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166573,"byte_end":166599,"line_start":810,"line_end":810,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166604,"byte_end":166611,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166616,"byte_end":166619,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Furthermore, `entered` may be used when the span must be stored in some","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166624,"byte_end":166699,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ other struct or be passed to a function while remaining entered.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166704,"byte_end":166772,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166777,"byte_end":166780,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166785,"byte_end":166844,"line_start":816,"line_end":816,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166849,"byte_end":166914,"line_start":817,"line_end":817,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166919,"byte_end":166922,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ **Note**: The returned [`EnteredSpan`] guard does not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166927,"byte_end":166984,"line_start":819,"line_end":819,"column_start":5,"column_end":62}},{"value":"/ implement `Send`. Dropping the guard will exit *this* span,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":166989,"byte_end":167052,"line_start":820,"line_end":820,"column_start":5,"column_end":68}},{"value":"/ and if the guard is sent to another thread and dropped there, that thread may","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167057,"byte_end":167138,"line_start":821,"line_end":821,"column_start":5,"column_end":86}},{"value":"/ never have entered this span. Thus, `EnteredSpan`s should not be sent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167143,"byte_end":167216,"line_start":822,"line_end":822,"column_start":5,"column_end":78}},{"value":"/ between threads.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167221,"byte_end":167241,"line_start":823,"line_end":823,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167246,"byte_end":167249,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ </pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167254,"byte_end":167270,"line_start":825,"line_end":825,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167275,"byte_end":167278,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167283,"byte_end":167360,"line_start":827,"line_end":827,"column_start":5,"column_end":82}},{"value":"/ [`Span::entered`] should be used very carefully or avoided entirely. Holding","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167365,"byte_end":167445,"line_start":828,"line_end":828,"column_start":5,"column_end":85}},{"value":"/ the drop guard returned by `Span::entered` across `.await` points will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167450,"byte_end":167524,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ result in incorrect traces. See the documentation for the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167529,"byte_end":167590,"line_start":830,"line_end":830,"column_start":5,"column_end":66}},{"value":"/ [`Span::enter`] method for details.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167595,"byte_end":167634,"line_start":831,"line_end":831,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167639,"byte_end":167642,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167647,"byte_end":167745,"line_start":833,"line_end":833,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167750,"byte_end":167753,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167758,"byte_end":167772,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167777,"byte_end":167780,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ The returned guard can be [explicitly exited][EnteredSpan::exit],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167785,"byte_end":167854,"line_start":837,"line_end":837,"column_start":5,"column_end":74}},{"value":"/ returning the un-entered span:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167859,"byte_end":167893,"line_start":838,"line_end":838,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167898,"byte_end":167901,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167906,"byte_end":167913,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167918,"byte_end":167951,"line_start":841,"line_end":841,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"doing_something\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":167956,"byte_end":168019,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168024,"byte_end":168027,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168032,"byte_end":168067,"line_start":844,"line_end":844,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168072,"byte_end":168075,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ // explicitly exit the span, returning it","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168080,"byte_end":168125,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168130,"byte_end":168157,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168162,"byte_end":168165,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168170,"byte_end":168215,"line_start":849,"line_end":849,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168220,"byte_end":168223,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ // enter the span again","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168228,"byte_end":168255,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/ let span = span.entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168260,"byte_end":168290,"line_start":852,"line_end":852,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168295,"byte_end":168298,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ // now we are inside the span once again","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168303,"byte_end":168347,"line_start":854,"line_end":854,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168352,"byte_end":168359,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168364,"byte_end":168367,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168372,"byte_end":168414,"line_start":857,"line_end":857,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168419,"byte_end":168422,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168427,"byte_end":168434,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168439,"byte_end":168469,"line_start":860,"line_end":860,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168474,"byte_end":168506,"line_start":861,"line_end":861,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168511,"byte_end":168569,"line_start":862,"line_end":862,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168574,"byte_end":168630,"line_start":863,"line_end":863,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168635,"byte_end":168638,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168643,"byte_end":168721,"line_start":865,"line_end":865,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168726,"byte_end":168754,"line_start":866,"line_end":866,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168759,"byte_end":168762,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168767,"byte_end":168840,"line_start":868,"line_end":868,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168845,"byte_end":168885,"line_start":869,"line_end":869,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168890,"byte_end":168895,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168900,"byte_end":168903,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168908,"byte_end":168936,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168941,"byte_end":168955,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168960,"byte_end":168965,"line_start":874,"line_end":874,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168970,"byte_end":168977,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168982,"byte_end":168985,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Since the [`EnteredSpan`] guard can dereference to the [`Span`] itself,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":168990,"byte_end":169065,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ the span may still be accessed while entered. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169070,"byte_end":169132,"line_start":878,"line_end":878,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169137,"byte_end":169140,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169145,"byte_end":169156,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169161,"byte_end":169190,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ use tracing::field;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169195,"byte_end":169218,"line_start":882,"line_end":882,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169223,"byte_end":169226,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // create the span with an empty field, and enter it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169231,"byte_end":169288,"line_start":884,"line_end":884,"column_start":5,"column_end":62}},{"value":"/ let span = info_span!(\"my_span\", some_field = field::Empty).entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169293,"byte_end":169367,"line_start":885,"line_end":885,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169372,"byte_end":169375,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ // we can still record a value for the field while the span is entered.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169380,"byte_end":169455,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ span.record(\"some_field\", &\"hello world!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169460,"byte_end":169507,"line_start":888,"line_end":888,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169512,"byte_end":169519,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169524,"byte_end":169527,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169532,"byte_end":169607,"line_start":891,"line_end":891,"column_start":5,"column_end":80}},{"value":"/ [`Subscriber::exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169612,"byte_end":169685,"line_start":892,"line_end":892,"column_start":5,"column_end":78}},{"value":"/ [`Id`]: ../struct.Id.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169690,"byte_end":169719,"line_start":893,"line_end":893,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169724,"byte_end":169733,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":174194,"byte_end":174204,"line_start":1026,"line_end":1026,"column_start":12,"column_end":22},"name":"or_current","qualname":"<Span>::or_current","value":"pub fn or_current(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this span, if it was [enabled] by the current [`Subscriber`], or\n the [current span] (whose lexical distance may be further than expected),\n  if this span [is disabled].","sig":null,"attributes":[{"value":"/ Returns this span, if it was [enabled] by the current [`Subscriber`], or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169907,"byte_end":169983,"line_start":903,"line_end":903,"column_start":5,"column_end":81}},{"value":"/ the [current span] (whose lexical distance may be further than expected),","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":169988,"byte_end":170065,"line_start":904,"line_end":904,"column_start":5,"column_end":82}},{"value":"/  if this span [is disabled].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170070,"byte_end":170102,"line_start":905,"line_end":905,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170107,"byte_end":170110,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This method can be useful when propagating spans to spawned threads or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170115,"byte_end":170189,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ [async tasks]. Consider the following:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170194,"byte_end":170236,"line_start":908,"line_end":908,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170241,"byte_end":170244,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170249,"byte_end":170256,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170261,"byte_end":170324,"line_start":911,"line_end":911,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170329,"byte_end":170332,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170337,"byte_end":170347,"line_start":913,"line_end":913,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170352,"byte_end":170355,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170360,"byte_end":170411,"line_start":915,"line_end":915,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170416,"byte_end":170419,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170424,"byte_end":170456,"line_start":917,"line_end":917,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170461,"byte_end":170505,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170510,"byte_end":170513,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170518,"byte_end":170562,"line_start":920,"line_end":920,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170567,"byte_end":170570,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170575,"byte_end":170589,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170594,"byte_end":170601,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170606,"byte_end":170613,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170618,"byte_end":170621,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ If the current [`Subscriber`] enables the [`DEBUG`] level, then both","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170626,"byte_end":170698,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/ the \"parent\" and \"child\" spans will be enabled. Thus, when the \"spawaned","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170703,"byte_end":170779,"line_start":927,"line_end":927,"column_start":5,"column_end":81}},{"value":"/ a thread!\" event occurs, it will be inside of the \"child\" span. Because","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170784,"byte_end":170859,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ \"parent\" is the parent of \"child\", the event will _also_ be inside of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170864,"byte_end":170937,"line_start":929,"line_end":929,"column_start":5,"column_end":78}},{"value":"/ \"parent\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170942,"byte_end":170955,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170960,"byte_end":170963,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ However, if the [`Subscriber`] only enables the [`INFO`] level, the \"child\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":170968,"byte_end":171047,"line_start":932,"line_end":932,"column_start":5,"column_end":84}},{"value":"/ span will be disabled. When the thread is spawned, the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171052,"byte_end":171110,"line_start":933,"line_end":933,"column_start":5,"column_end":63}},{"value":"/ `child_span.entered()` call will do nothing, since \"child\" is not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171115,"byte_end":171184,"line_start":934,"line_end":934,"column_start":5,"column_end":74}},{"value":"/ enabled. In this case, the \"spawned a thread!\" event occurs outside of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171189,"byte_end":171263,"line_start":935,"line_end":935,"column_start":5,"column_end":79}},{"value":"/ *any* span, since the \"child\" span was responsible for propagating its","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171268,"byte_end":171342,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/ parent to the spawned thread.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171347,"byte_end":171380,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171385,"byte_end":171388,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ If this is not the desired behavior, `Span::or_current` can be used to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171393,"byte_end":171467,"line_start":939,"line_end":939,"column_start":5,"column_end":79}},{"value":"/ ensure that the \"parent\" span is propagated in both cases, either as a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171472,"byte_end":171546,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ parent of \"child\" _or_ directly. For example:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171551,"byte_end":171600,"line_start":941,"line_end":941,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171605,"byte_end":171608,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171613,"byte_end":171620,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171625,"byte_end":171688,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171693,"byte_end":171696,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171701,"byte_end":171711,"line_start":946,"line_end":946,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171716,"byte_end":171719,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ // If DEBUG is enabled, then \"child\" will be enabled, and `or_current`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171724,"byte_end":171798,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ // returns \"child\". Otherwise, if DEBUG is not enabled, \"child\" will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171803,"byte_end":171878,"line_start":949,"line_end":949,"column_start":5,"column_end":80}},{"value":"/ // disabled, and `or_current` returns \"parent\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171883,"byte_end":171934,"line_start":950,"line_end":950,"column_start":5,"column_end":56}},{"value":"/ let child_span = tracing::debug_span!(\"child\").or_current();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":171939,"byte_end":172003,"line_start":951,"line_end":951,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172008,"byte_end":172011,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172016,"byte_end":172048,"line_start":953,"line_end":953,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172053,"byte_end":172097,"line_start":954,"line_end":954,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172102,"byte_end":172105,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172110,"byte_end":172154,"line_start":956,"line_end":956,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172159,"byte_end":172162,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172167,"byte_end":172181,"line_start":958,"line_end":958,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172186,"byte_end":172193,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172198,"byte_end":172205,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172210,"byte_end":172213,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ When spawning [asynchronous tasks][async tasks], `Span::or_current` can","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172218,"byte_end":172293,"line_start":962,"line_end":962,"column_start":5,"column_end":80}},{"value":"/ be used similarly, in combination with [`instrument`]:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172298,"byte_end":172356,"line_start":963,"line_end":963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172361,"byte_end":172364,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172369,"byte_end":172376,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172381,"byte_end":172409,"line_start":966,"line_end":966,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172414,"byte_end":172426,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172431,"byte_end":172448,"line_start":968,"line_end":968,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172453,"byte_end":172514,"line_start":969,"line_end":969,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172519,"byte_end":172526,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172531,"byte_end":172534,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172539,"byte_end":172602,"line_start":972,"line_end":972,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172607,"byte_end":172610,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172615,"byte_end":172625,"line_start":974,"line_end":974,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172630,"byte_end":172633,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172638,"byte_end":172689,"line_start":976,"line_end":976,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172694,"byte_end":172697,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172702,"byte_end":172719,"line_start":978,"line_end":978,"column_start":5,"column_end":22}},{"value":"/     async {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172724,"byte_end":172739,"line_start":979,"line_end":979,"column_start":5,"column_end":20}},{"value":"/         tracing::info!(\"spawned a task!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172744,"byte_end":172790,"line_start":980,"line_end":980,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172795,"byte_end":172798,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/         // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172803,"byte_end":172821,"line_start":982,"line_end":982,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172826,"byte_end":172829,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/     }.instrument(child_span.or_current())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172834,"byte_end":172879,"line_start":984,"line_end":984,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172884,"byte_end":172890,"line_start":985,"line_end":985,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172895,"byte_end":172902,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172907,"byte_end":172910,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ In general, `or_current` should be preferred over nesting an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172915,"byte_end":172979,"line_start":988,"line_end":988,"column_start":5,"column_end":69}},{"value":"/ [`instrument`]  call inside of an [`in_current_span`] call, as using","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":172984,"byte_end":173056,"line_start":989,"line_end":989,"column_start":5,"column_end":77}},{"value":"/ `or_current` will be more efficient.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173061,"byte_end":173101,"line_start":990,"line_end":990,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173106,"byte_end":173109,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173114,"byte_end":173121,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173126,"byte_end":173154,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173159,"byte_end":173171,"line_start":994,"line_end":994,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173176,"byte_end":173193,"line_start":995,"line_end":995,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173198,"byte_end":173259,"line_start":996,"line_end":996,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173264,"byte_end":173271,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ async fn my_async_fn() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173276,"byte_end":173304,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173309,"byte_end":173323,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173328,"byte_end":173333,"line_start":1000,"line_end":1000,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173338,"byte_end":173341,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173346,"byte_end":173409,"line_start":1002,"line_end":1002,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173414,"byte_end":173417,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ // Do this:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173422,"byte_end":173437,"line_start":1004,"line_end":1004,"column_start":5,"column_end":20}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173442,"byte_end":173459,"line_start":1005,"line_end":1005,"column_start":5,"column_end":22}},{"value":"/     my_async_fn().instrument(tracing::debug_span!(\"child\").or_current())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173464,"byte_end":173540,"line_start":1006,"line_end":1006,"column_start":5,"column_end":81}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173545,"byte_end":173551,"line_start":1007,"line_end":1007,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173556,"byte_end":173559,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ // ...rather than this:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173564,"byte_end":173591,"line_start":1009,"line_end":1009,"column_start":5,"column_end":32}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173596,"byte_end":173613,"line_start":1010,"line_end":1010,"column_start":5,"column_end":22}},{"value":"/     my_async_fn()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173618,"byte_end":173639,"line_start":1011,"line_end":1011,"column_start":5,"column_end":26}},{"value":"/         .instrument(tracing::debug_span!(\"child\"))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173644,"byte_end":173698,"line_start":1012,"line_end":1012,"column_start":5,"column_end":59}},{"value":"/         .in_current_span()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173703,"byte_end":173733,"line_start":1013,"line_end":1013,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173738,"byte_end":173744,"line_start":1014,"line_end":1014,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173749,"byte_end":173756,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173761,"byte_end":173764,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ [enabled]: crate::Subscriber::enabled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173769,"byte_end":173810,"line_start":1017,"line_end":1017,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173815,"byte_end":173852,"line_start":1018,"line_end":1018,"column_start":5,"column_end":42}},{"value":"/ [current span]: Span::current","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173857,"byte_end":173890,"line_start":1019,"line_end":1019,"column_start":5,"column_end":38}},{"value":"/ [is disabled]: Span::is_disabled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173895,"byte_end":173931,"line_start":1020,"line_end":1020,"column_start":5,"column_end":41}},{"value":"/ [`INFO`]: crate::Level::INFO","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173936,"byte_end":173968,"line_start":1021,"line_end":1021,"column_start":5,"column_end":37}},{"value":"/ [`DEBUG`]: crate::Level::DEBUG","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":173973,"byte_end":174007,"line_start":1022,"line_end":1022,"column_start":5,"column_end":39}},{"value":"/ [async tasks]: std::task","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":174012,"byte_end":174040,"line_start":1023,"line_end":1023,"column_start":5,"column_end":33}},{"value":"/ [`instrument`]: crate::instrument::Instrument::instrument","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":174045,"byte_end":174106,"line_start":1024,"line_end":1024,"column_start":5,"column_end":66}},{"value":"/ [`in_current_span`]: crate::instrument::Instrument::in_current_span","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":174111,"byte_end":174182,"line_start":1025,"line_end":1025,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176498,"byte_end":176506,"line_start":1100,"line_end":1100,"column_start":12,"column_end":20},"name":"in_scope","qualname":"<Span>::in_scope","value":"pub fn in_scope<F: FnOnce() -> T, T>(&Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes the given function in the context of this span.","sig":null,"attributes":[{"value":"/ Executes the given function in the context of this span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175281,"byte_end":175341,"line_start":1063,"line_end":1063,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175346,"byte_end":175349,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled, then this function enters the span, invokes `f`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175354,"byte_end":175430,"line_start":1065,"line_end":1065,"column_start":5,"column_end":81}},{"value":"/ and then exits the span. If the span is disabled, `f` will still be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175435,"byte_end":175506,"line_start":1066,"line_end":1066,"column_start":5,"column_end":76}},{"value":"/ invoked, but in the context of the currently-executing span (if there is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175511,"byte_end":175587,"line_start":1067,"line_end":1067,"column_start":5,"column_end":81}},{"value":"/ one).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175592,"byte_end":175601,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175606,"byte_end":175609,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ Returns the result of evaluating `f`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175614,"byte_end":175655,"line_start":1070,"line_end":1070,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175660,"byte_end":175663,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175668,"byte_end":175682,"line_start":1072,"line_end":1072,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175687,"byte_end":175690,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175695,"byte_end":175702,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate tracing;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175707,"byte_end":175747,"line_start":1075,"line_end":1075,"column_start":5,"column_end":45}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175752,"byte_end":175777,"line_start":1076,"line_end":1076,"column_start":5,"column_end":30}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175782,"byte_end":175831,"line_start":1077,"line_end":1077,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175836,"byte_end":175839,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175844,"byte_end":175869,"line_start":1079,"line_end":1079,"column_start":5,"column_end":30}},{"value":"/     // this event occurs within the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175874,"byte_end":175919,"line_start":1080,"line_end":1080,"column_start":5,"column_end":50}},{"value":"/     trace!(\"i'm in the span!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175924,"byte_end":175959,"line_start":1081,"line_end":1081,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175964,"byte_end":175971,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175976,"byte_end":175979,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ // this event occurs outside the span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":175984,"byte_end":176026,"line_start":1084,"line_end":1084,"column_start":5,"column_end":47}},{"value":"/ trace!(\"i'm not in the span!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176031,"byte_end":176066,"line_start":1085,"line_end":1085,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176071,"byte_end":176078,"line_start":1086,"line_end":1086,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176083,"byte_end":176086,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Calling a function and returning the result:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176091,"byte_end":176139,"line_start":1088,"line_end":1088,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176144,"byte_end":176151,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info_span, Level};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176156,"byte_end":176194,"line_start":1090,"line_end":1090,"column_start":5,"column_end":43}},{"value":"/ fn hello_world() -> String {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176199,"byte_end":176231,"line_start":1091,"line_end":1091,"column_start":5,"column_end":37}},{"value":"/     \"Hello world!\".to_owned()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176236,"byte_end":176269,"line_start":1092,"line_end":1092,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176274,"byte_end":176279,"line_start":1093,"line_end":1093,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176284,"byte_end":176287,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let span = info_span!(\"hello_world\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176292,"byte_end":176333,"line_start":1095,"line_end":1095,"column_start":5,"column_end":46}},{"value":"/ // the span will be entered for the duration of the call to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176338,"byte_end":176401,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/ // `hello_world`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176406,"byte_end":176427,"line_start":1097,"line_end":1097,"column_start":5,"column_end":26}},{"value":"/ let a_string = span.in_scope(hello_world);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176432,"byte_end":176478,"line_start":1098,"line_end":1098,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176483,"byte_end":176486,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176729,"byte_end":176734,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"name":"field","qualname":"<Span>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<field::Field> where\nQ: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Field`](../field/struct.Field.html) for the field with the\n given `name`, if one exists,\n","sig":null,"attributes":[{"value":"/ Returns a [`Field`](../field/struct.Field.html) for the field with the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176606,"byte_end":176680,"line_start":1105,"line_end":1105,"column_start":5,"column_end":79}},{"value":"/ given `name`, if one exists,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176685,"byte_end":176717,"line_start":1106,"line_end":1106,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177048,"byte_end":177057,"line_start":1117,"line_end":1117,"column_start":12,"column_end":21},"name":"has_field","qualname":"<Span>::has_field","value":"pub fn has_field<Q: ?Sized>(&Self, &Q) -> bool where Q: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` has a field for the given\n [`Field`](../field/struct.Field.html) or field name.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` has a field for the given","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176904,"byte_end":176961,"line_start":1114,"line_end":1114,"column_start":5,"column_end":62}},{"value":"/ [`Field`](../field/struct.Field.html) or field name.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":176966,"byte_end":177022,"line_start":1115,"line_end":1115,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177027,"byte_end":177036,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180301,"byte_end":180307,"line_start":1193,"line_end":1193,"column_start":12,"column_end":18},"name":"record","qualname":"<Span>::record","value":"pub fn record<Q: ?Sized, V>(&Self, &Q, &V) -> &Self where Q: field::AsField,\nV: field::Value","parent":null,"children":[],"decl_id":null,"docs":" Records that the field described by `field` has the value `value`.","sig":null,"attributes":[{"value":"/ Records that the field described by `field` has the value `value`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177185,"byte_end":177255,"line_start":1124,"line_end":1124,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177260,"byte_end":177263,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ This may be used with [`field::Empty`] to declare fields whose values","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177268,"byte_end":177341,"line_start":1126,"line_end":1126,"column_start":5,"column_end":78}},{"value":"/ are not known when the span is created, and record them later:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177346,"byte_end":177412,"line_start":1127,"line_end":1127,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177417,"byte_end":177424,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177429,"byte_end":177466,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177471,"byte_end":177474,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177479,"byte_end":177562,"line_start":1131,"line_end":1131,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177567,"byte_end":177601,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177606,"byte_end":177694,"line_start":1133,"line_end":1133,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177699,"byte_end":177702,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177707,"byte_end":177717,"line_start":1135,"line_end":1135,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177722,"byte_end":177725,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177730,"byte_end":177777,"line_start":1137,"line_end":1137,"column_start":5,"column_end":52}},{"value":"/ // (note that the field name is passed as a string slice)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177782,"byte_end":177843,"line_start":1138,"line_end":1138,"column_start":5,"column_end":66}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177848,"byte_end":177894,"line_start":1139,"line_end":1139,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177899,"byte_end":177906,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ However, it may also be used to record a _new_ value for a field whose","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177911,"byte_end":177985,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"/ value was already recorded:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":177990,"byte_end":178021,"line_start":1142,"line_end":1142,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178026,"byte_end":178033,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178038,"byte_end":178065,"line_start":1144,"line_end":1144,"column_start":5,"column_end":32}},{"value":"/ # fn do_something() -> Result<(), ()> { Err(()) }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178070,"byte_end":178123,"line_start":1145,"line_end":1145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178128,"byte_end":178131,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ // Initially, let's assume that our attempt to do something is going okay...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178136,"byte_end":178216,"line_start":1147,"line_end":1147,"column_start":5,"column_end":85}},{"value":"/ let span = info_span!(\"doing_something\", is_okay = true);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178221,"byte_end":178282,"line_start":1148,"line_end":1148,"column_start":5,"column_end":66}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178287,"byte_end":178313,"line_start":1149,"line_end":1149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178318,"byte_end":178321,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ match do_something() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178326,"byte_end":178352,"line_start":1151,"line_end":1151,"column_start":5,"column_end":31}},{"value":"/     Ok(something) => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178357,"byte_end":178383,"line_start":1152,"line_end":1152,"column_start":5,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178388,"byte_end":178406,"line_start":1153,"line_end":1153,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178411,"byte_end":178420,"line_start":1154,"line_end":1154,"column_start":5,"column_end":14}},{"value":"/     Err(_) => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178425,"byte_end":178444,"line_start":1155,"line_end":1155,"column_start":5,"column_end":24}},{"value":"/         // Things are no longer okay!","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178449,"byte_end":178490,"line_start":1156,"line_end":1156,"column_start":5,"column_end":46}},{"value":"/         span.record(\"is_okay\", &false);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178495,"byte_end":178538,"line_start":1157,"line_end":1157,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178543,"byte_end":178552,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178557,"byte_end":178562,"line_start":1159,"line_end":1159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178567,"byte_end":178574,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178579,"byte_end":178582,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178587,"byte_end":178646,"line_start":1162,"line_end":1162,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178651,"byte_end":178716,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: The fields associated with a span are part of its","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178721,"byte_end":178797,"line_start":1164,"line_end":1164,"column_start":5,"column_end":81}},{"value":"/ <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178802,"byte_end":178866,"line_start":1165,"line_end":1165,"column_start":5,"column_end":69}},{"value":"/ The <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>. describing a particular","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178871,"byte_end":178963,"line_start":1166,"line_end":1166,"column_start":5,"column_end":97}},{"value":"/ span is constructed statically when the span is created and cannot be extended later to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":178968,"byte_end":179059,"line_start":1167,"line_end":1167,"column_start":5,"column_end":96}},{"value":"/ add new fields. Therefore, you cannot record a value for a field that was not specified","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179064,"byte_end":179155,"line_start":1168,"line_end":1168,"column_start":5,"column_end":96}},{"value":"/ when the span was created:</pre></div>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179160,"byte_end":179202,"line_start":1169,"line_end":1169,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179207,"byte_end":179210,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179215,"byte_end":179222,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179227,"byte_end":179264,"line_start":1172,"line_end":1172,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179269,"byte_end":179272,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179277,"byte_end":179360,"line_start":1174,"line_end":1174,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179365,"byte_end":179399,"line_start":1175,"line_end":1175,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179404,"byte_end":179492,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179497,"byte_end":179500,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179505,"byte_end":179515,"line_start":1178,"line_end":1178,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179520,"byte_end":179523,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ // Now, you try to record a value for a new field, `new_field`, which was not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179528,"byte_end":179609,"line_start":1180,"line_end":1180,"column_start":5,"column_end":86}},{"value":"/ // declared as `Empty` or populated when you created `span`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179614,"byte_end":179678,"line_start":1181,"line_end":1181,"column_start":5,"column_end":69}},{"value":"/ // You won't get any error, but the assignment will have no effect!","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179683,"byte_end":179754,"line_start":1182,"line_end":1182,"column_start":5,"column_end":76}},{"value":"/ span.record(\"new_field\", &\"interesting_value_you_really_need\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179759,"byte_end":179826,"line_start":1183,"line_end":1183,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179831,"byte_end":179834,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ // Instead, all fields that may be recorded after span creation should be declared up front,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179839,"byte_end":179935,"line_start":1185,"line_end":1185,"column_start":5,"column_end":101}},{"value":"/ // using field::Empty when a value is not known, as we did for `parting`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":179940,"byte_end":180017,"line_start":1186,"line_end":1186,"column_start":5,"column_end":82}},{"value":"/ // This `record` call will indeed replace field::Empty with \"you will be remembered\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180022,"byte_end":180111,"line_start":1187,"line_end":1187,"column_start":5,"column_end":94}},{"value":"/ span.record(\"parting\", &\"you will be remembered\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180116,"byte_end":180170,"line_start":1188,"line_end":1188,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180175,"byte_end":180182,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180187,"byte_end":180190,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ [`field::Empty`]: ../field/struct.Empty.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180195,"byte_end":180243,"line_start":1191,"line_end":1191,"column_start":5,"column_end":53}},{"value":"/ [`Metadata`]: ../struct.Metadata.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180248,"byte_end":180289,"line_start":1192,"line_end":1192,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180834,"byte_end":180844,"line_start":1212,"line_end":1212,"column_start":12,"column_end":22},"name":"record_all","qualname":"<Span>::record_all","value":"pub fn record_all(&Self, &field::ValueSet) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in the provided `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Records all the fields in the provided `ValueSet`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":180768,"byte_end":180822,"line_start":1211,"line_end":1211,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181658,"byte_end":181669,"line_start":1239,"line_end":1239,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<Span>::is_disabled","value":"pub fn is_disabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was disabled by the subscriber and does not\n exist.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was disabled by the subscriber and does not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181459,"byte_end":181534,"line_start":1232,"line_end":1232,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181539,"byte_end":181549,"line_start":1233,"line_end":1233,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181554,"byte_end":181557,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ See also [`is_none`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181562,"byte_end":181587,"line_start":1235,"line_end":1235,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181592,"byte_end":181595,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ [`is_none`]: #method.is_none","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181600,"byte_end":181632,"line_start":1237,"line_end":1237,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181637,"byte_end":181646,"line_start":1238,"line_end":1238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182227,"byte_end":182234,"line_start":1254,"line_end":1254,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Span>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was constructed by [`Span::none`] and is\n empty.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was constructed by [`Span::none`] and is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181727,"byte_end":181799,"line_start":1243,"line_end":1243,"column_start":5,"column_end":77}},{"value":"/ empty.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181804,"byte_end":181814,"line_start":1244,"line_end":1244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181819,"byte_end":181822,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ If `is_none` returns `true` for a given span, then [`is_disabled`] will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181827,"byte_end":181902,"line_start":1246,"line_end":1246,"column_start":5,"column_end":80}},{"value":"/ also return `true`. However, when a span is disabled by the subscriber","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181907,"byte_end":181981,"line_start":1247,"line_end":1247,"column_start":5,"column_end":79}},{"value":"/ rather than constructed by `Span::none`, this method will return","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":181986,"byte_end":182054,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/ `false`, while `is_disabled` will return `true`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182059,"byte_end":182111,"line_start":1249,"line_end":1249,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182116,"byte_end":182119,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ [`Span::none`]: #method.none","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182124,"byte_end":182156,"line_start":1251,"line_end":1251,"column_start":5,"column_end":37}},{"value":"/ [`is_disabled`]: #method.is_disabled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182161,"byte_end":182201,"line_start":1252,"line_end":1252,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182206,"byte_end":182215,"line_start":1253,"line_end":1253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184260,"byte_end":184272,"line_start":1305,"line_end":1305,"column_start":12,"column_end":24},"name":"follows_from","qualname":"<Span>::follows_from","value":"pub fn follows_from<impl Into<Option<Id>>: Into<Option<Id>>>(&Self,\n                                                             impl Into<Option<Id>>)\n-> &Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the span with the given ID has an indirect causal\n relationship with this span.","sig":null,"attributes":[{"value":"/ Indicates that the span with the given ID has an indirect causal","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182313,"byte_end":182381,"line_start":1258,"line_end":1258,"column_start":5,"column_end":73}},{"value":"/ relationship with this span.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182386,"byte_end":182418,"line_start":1259,"line_end":1259,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182423,"byte_end":182426,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182431,"byte_end":182507,"line_start":1261,"line_end":1261,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182512,"byte_end":182586,"line_start":1262,"line_end":1262,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182591,"byte_end":182662,"line_start":1263,"line_end":1263,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182667,"byte_end":182741,"line_start":1264,"line_end":1264,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182746,"byte_end":182812,"line_start":1265,"line_end":1265,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182817,"byte_end":182891,"line_start":1266,"line_end":1266,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182896,"byte_end":182968,"line_start":1267,"line_end":1267,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":182973,"byte_end":183042,"line_start":1268,"line_end":1268,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183047,"byte_end":183050,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ If this span is disabled, or the resulting follows-from relationship","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183055,"byte_end":183127,"line_start":1270,"line_end":1270,"column_start":5,"column_end":77}},{"value":"/ would be invalid, this function will do nothing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183132,"byte_end":183184,"line_start":1271,"line_end":1271,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183189,"byte_end":183192,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183197,"byte_end":183211,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183216,"byte_end":183219,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span`:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183224,"byte_end":183280,"line_start":1275,"line_end":1275,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183285,"byte_end":183292,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183297,"byte_end":183340,"line_start":1277,"line_end":1277,"column_start":5,"column_end":48}},{"value":"/ let span1 = span!(Level::INFO, \"span_1\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183345,"byte_end":183390,"line_start":1278,"line_end":1278,"column_start":5,"column_end":50}},{"value":"/ let span2 = span!(Level::DEBUG, \"span_2\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183395,"byte_end":183441,"line_start":1279,"line_end":1279,"column_start":5,"column_end":51}},{"value":"/ span2.follows_from(span1);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183446,"byte_end":183476,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183481,"byte_end":183488,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183493,"byte_end":183496,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with the current span:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183501,"byte_end":183565,"line_start":1283,"line_end":1283,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183570,"byte_end":183577,"line_start":1284,"line_end":1284,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183582,"byte_end":183625,"line_start":1285,"line_end":1285,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183630,"byte_end":183674,"line_start":1286,"line_end":1286,"column_start":5,"column_end":49}},{"value":"/ span.follows_from(Span::current());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183679,"byte_end":183718,"line_start":1287,"line_end":1287,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183723,"byte_end":183730,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183735,"byte_end":183738,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span` reference:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183743,"byte_end":183809,"line_start":1290,"line_end":1290,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183814,"byte_end":183821,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183826,"byte_end":183869,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183874,"byte_end":183918,"line_start":1293,"line_end":1293,"column_start":5,"column_end":49}},{"value":"/ let curr = Span::current();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183923,"byte_end":183954,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/ span.follows_from(&curr);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183959,"byte_end":183988,"line_start":1295,"line_end":1295,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":183993,"byte_end":184000,"line_start":1296,"line_end":1296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184005,"byte_end":184008,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with an `Id`:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184013,"byte_end":184068,"line_start":1298,"line_end":1298,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184073,"byte_end":184080,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184085,"byte_end":184128,"line_start":1300,"line_end":1300,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184133,"byte_end":184177,"line_start":1301,"line_end":1301,"column_start":5,"column_end":49}},{"value":"/ let id = span.id();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184182,"byte_end":184205,"line_start":1302,"line_end":1302,"column_start":5,"column_end":28}},{"value":"/ span.follows_from(id);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184210,"byte_end":184236,"line_start":1303,"line_end":1303,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184241,"byte_end":184248,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184562,"byte_end":184564,"line_start":1315,"line_end":1315,"column_start":12,"column_end":14},"name":"id","qualname":"<Span>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184503,"byte_end":184550,"line_start":1314,"line_end":1314,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184707,"byte_end":184715,"line_start":1320,"line_end":1320,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Span>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Metadata`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Metadata`, if it is enabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":184642,"byte_end":184695,"line_start":1319,"line_end":1319,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186556,"byte_end":186571,"line_start":1363,"line_end":1363,"column_start":12,"column_end":27},"name":"with_subscriber","qualname":"<Span>::with_subscriber","value":"pub fn with_subscriber<T,\n                       impl FnOnce((&Id, &Dispatch)) -> T: FnOnce((&Id,\n                                                                   &Dispatch))\n                       -> T>(&Self, impl FnOnce((&Id, &Dispatch)) -> T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a function with a reference to this span's ID and subscriber.","sig":null,"attributes":[{"value":"/ Invokes a function with a reference to this span's ID and subscriber.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186260,"byte_end":186333,"line_start":1358,"line_end":1358,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186338,"byte_end":186341,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ if this span is enabled, the provided function is called, and the result is returned.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186346,"byte_end":186435,"line_start":1360,"line_end":1360,"column_start":5,"column_end":94}},{"value":"/ If the span is disabled, the function is not called, and this method returns `None`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186440,"byte_end":186527,"line_start":1361,"line_end":1361,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186532,"byte_end":186544,"line_start":1362,"line_end":1362,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191253,"byte_end":191255,"line_start":1536,"line_end":1536,"column_start":12,"column_end":14},"name":"id","qualname":"<EnteredSpan>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191194,"byte_end":191241,"line_start":1535,"line_end":1535,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191414,"byte_end":191418,"line_start":1542,"line_end":1542,"column_start":12,"column_end":16},"name":"exit","qualname":"<EnteredSpan>::exit","value":"pub fn exit(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Exits this span, returning the underlying [`Span`].\n","sig":null,"attributes":[{"value":"/ Exits this span, returning the underlying [`Span`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191333,"byte_end":191388,"line_start":1540,"line_end":1540,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191393,"byte_end":191402,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337}],"decl_id":null,"docs":" Collects and records trace data.\n","sig":null,"attributes":[{"value":"/ Collects and records trace data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":195946,"byte_end":195982,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196682,"byte_end":196694,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"with_default","qualname":"::subscriber::with_default","value":"pub fn with_default<T, S, impl FnOnce() -> T: FnOnce() ->\n                    T>(S, impl FnOnce() -> T) -> T where S: Subscriber +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this subscriber as the default for the duration of a closure.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196141,"byte_end":196211,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196212,"byte_end":196215,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196216,"byte_end":196282,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196283,"byte_end":196357,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196358,"byte_end":196430,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196431,"byte_end":196461,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196462,"byte_end":196465,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196466,"byte_end":196504,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196505,"byte_end":196560,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196561,"byte_end":196603,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196604,"byte_end":196627,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":333},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197487,"byte_end":197505,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::subscriber::set_global_default","value":"pub fn set_global_default<S>(S) -> Result<(), SetGlobalDefaultError> where\nS: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this subscriber as the global default for the duration of the entire program.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196872,"byte_end":196958,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":196959,"byte_end":197068,"line_start":28,"line_end":28,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197069,"byte_end":197072,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197073,"byte_end":197155,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Returns whether the initialization was successful.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197156,"byte_end":197210,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197211,"byte_end":197214,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: Libraries should *NOT* call `set_global_default()`! That will cause conflicts when","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197215,"byte_end":197307,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ executables try to set them later.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197308,"byte_end":197346,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197347,"byte_end":197350,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197351,"byte_end":197381,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197382,"byte_end":197437,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197438,"byte_end":197479,"line_start":38,"line_end":38,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198394,"byte_end":198405,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"set_default","qualname":"::subscriber::set_default","value":"pub fn set_default<S>(S) -> DefaultGuard where S: Subscriber + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber as the default for the duration of the lifetime of the\n returned [`DefaultGuard`]","sig":null,"attributes":[{"value":"/ Sets the subscriber as the default for the duration of the lifetime of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197691,"byte_end":197769,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ returned [`DefaultGuard`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197770,"byte_end":197799,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197800,"byte_end":197803,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197804,"byte_end":197870,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197871,"byte_end":197945,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":197946,"byte_end":198018,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198019,"byte_end":198049,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198050,"byte_end":198053,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198054,"byte_end":198092,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198093,"byte_end":198148,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198149,"byte_end":198191,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ [`DefaultGuard`]: ../dispatcher/struct.DefaultGuard.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198192,"byte_end":198252,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198253,"byte_end":198276,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the subscriber.\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/subscriber.rs","byte_start":198324,"byte_end":198386,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38065,"byte_end":38080,"line_start":934,"line_end":934,"column_start":9,"column_end":24},"name":"__macro_support","qualname":"::__macro_support","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":377},{"krate":0,"index":380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38771,"byte_end":38784,"line_start":951,"line_end":951,"column_start":16,"column_end":29},"name":"MacroCallsite","qualname":"::__macro_support::MacroCallsite","value":"MacroCallsite {  }","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" Callsite implementation used by macro-generated code.","sig":null,"attributes":[{"value":"/ Callsite implementation used by macro-generated code.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38296,"byte_end":38353,"line_start":943,"line_end":943,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38358,"byte_end":38361,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38366,"byte_end":38414,"line_start":945,"line_end":945,"column_start":5,"column_end":53}},{"value":"/ This type, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38419,"byte_end":38492,"line_start":946,"line_end":946,"column_start":5,"column_end":78}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38497,"byte_end":38572,"line_start":947,"line_end":947,"column_start":5,"column_end":80}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38577,"byte_end":38653,"line_start":948,"line_end":948,"column_start":5,"column_end":81}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38658,"byte_end":38730,"line_start":949,"line_end":949,"column_start":5,"column_end":77}},{"value":"/ without warning.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38735,"byte_end":38755,"line_start":950,"line_end":950,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39446,"byte_end":39449,"line_start":966,"line_end":966,"column_start":22,"column_end":25},"name":"new","qualname":"<MacroCallsite>::new","value":"pub const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MacroCallsite` with the specified `Metadata`.","sig":null,"attributes":[{"value":"/ Returns a new `MacroCallsite` with the specified `Metadata`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38928,"byte_end":38992,"line_start":958,"line_end":958,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39001,"byte_end":39004,"line_start":959,"line_end":959,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39013,"byte_end":39061,"line_start":960,"line_end":960,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39070,"byte_end":39145,"line_start":961,"line_end":961,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39154,"byte_end":39229,"line_start":962,"line_end":962,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39238,"byte_end":39314,"line_start":963,"line_end":963,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39323,"byte_end":39395,"line_start":964,"line_end":964,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39404,"byte_end":39424,"line_start":965,"line_end":965,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40384,"byte_end":40392,"line_start":987,"line_end":987,"column_start":16,"column_end":24},"name":"register","qualname":"<MacroCallsite>::register","value":"pub fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39668,"byte_end":39730,"line_start":974,"line_end":974,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39739,"byte_end":39742,"line_start":975,"line_end":975,"column_start":9,"column_end":12}},{"value":"/ If the callsite is already registered, this does nothing.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39751,"byte_end":39812,"line_start":976,"line_end":976,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39821,"byte_end":39824,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39833,"byte_end":39881,"line_start":978,"line_end":978,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39890,"byte_end":39965,"line_start":979,"line_end":979,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":39974,"byte_end":40049,"line_start":980,"line_end":980,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40058,"byte_end":40134,"line_start":981,"line_end":981,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40143,"byte_end":40215,"line_start":982,"line_end":982,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40224,"byte_end":40244,"line_start":983,"line_end":983,"column_start":9,"column_end":29}},{"value":"inline(never)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40253,"byte_end":40269,"line_start":984,"line_end":984,"column_start":9,"column_end":25}},{"value":"cold","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40361,"byte_end":40368,"line_start":986,"line_end":986,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41323,"byte_end":41331,"line_start":1007,"line_end":1007,"column_start":16,"column_end":24},"name":"interest","qualname":"<MacroCallsite>::interest","value":"pub fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached Interest, or registers it for the\n first time if it has not yet been registered.","sig":null,"attributes":[{"value":"/ Returns the callsite's cached Interest, or registers it for the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40732,"byte_end":40799,"line_start":997,"line_end":997,"column_start":9,"column_end":76}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40808,"byte_end":40857,"line_start":998,"line_end":998,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40866,"byte_end":40869,"line_start":999,"line_end":999,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40878,"byte_end":40926,"line_start":1000,"line_end":1000,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":40935,"byte_end":41010,"line_start":1001,"line_end":1001,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41019,"byte_end":41094,"line_start":1002,"line_end":1002,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41103,"byte_end":41179,"line_start":1003,"line_end":1003,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41188,"byte_end":41260,"line_start":1004,"line_end":1004,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41269,"byte_end":41289,"line_start":1005,"line_end":1005,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41298,"byte_end":41307,"line_start":1006,"line_end":1006,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41622,"byte_end":41632,"line_start":1016,"line_end":1016,"column_start":16,"column_end":26},"name":"is_enabled","qualname":"<MacroCallsite>::is_enabled","value":"pub fn is_enabled(&Self, Interest) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42035,"byte_end":42048,"line_start":1029,"line_end":1029,"column_start":16,"column_end":29},"name":"disabled_span","qualname":"<MacroCallsite>::disabled_span","value":"pub fn disabled_span(&Self) -> crate::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41973,"byte_end":41982,"line_start":1027,"line_end":1027,"column_start":9,"column_end":18}},{"value":"cfg(not(feature = \"log\"))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":41991,"byte_end":42019,"line_start":1028,"line_end":1028,"column_start":9,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42949,"byte_end":42955,"line_start":1062,"line_end":1062,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123493,"byte_end":123498,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":124154,"byte_end":124159,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129786,"byte_end":129787,"line_start":162,"line_end":162,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130387,"byte_end":130399,"line_start":186,"line_end":186,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130657,"byte_end":130658,"line_start":196,"line_end":196,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130671,"byte_end":130683,"line_start":198,"line_end":198,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152938,"byte_end":152942,"line_start":430,"line_end":430,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186770,"byte_end":186774,"line_start":1370,"line_end":1370,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":187053,"byte_end":187057,"line_start":1381,"line_end":1381,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":187170,"byte_end":187174,"line_start":1387,"line_end":1387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188113,"byte_end":188119,"line_start":1420,"line_end":1420,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188256,"byte_end":188262,"line_start":1426,"line_end":1426,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188379,"byte_end":188385,"line_start":1432,"line_end":1432,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188513,"byte_end":188519,"line_start":1438,"line_end":1438,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188670,"byte_end":188676,"line_start":1444,"line_end":1444,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188794,"byte_end":188798,"line_start":1450,"line_end":1450,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":189336,"byte_end":189341,"line_start":1474,"line_end":1474,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190758,"byte_end":190763,"line_start":1511,"line_end":1511,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190858,"byte_end":190863,"line_start":1517,"line_end":1517,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190966,"byte_end":190971,"line_start":1523,"line_end":1523,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191176,"byte_end":191187,"line_start":1534,"line_end":1534,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191628,"byte_end":191639,"line_start":1550,"line_end":1550,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191758,"byte_end":191765,"line_start":1559,"line_end":1559,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191862,"byte_end":191873,"line_start":1566,"line_end":1566,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":193040,"byte_end":193054,"line_start":1598,"line_end":1598,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38904,"byte_end":38917,"line_start":957,"line_end":957,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42144,"byte_end":42157,"line_start":1034,"line_end":1034,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42597,"byte_end":42610,"line_start":1050,"line_end":1050,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37868,"byte_end":37878,"line_start":924,"line_end":924,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":69}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37888,"byte_end":37893,"line_start":925,"line_end":925,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37949,"byte_end":37959,"line_start":927,"line_end":927,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37969,"byte_end":37982,"line_start":928,"line_end":928,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":169}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":37992,"byte_end":37996,"line_start":929,"line_end":929,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":178}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38029,"byte_end":38039,"line_start":931,"line_end":931,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":324}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123169,"byte_end":123175,"line_start":18,"line_end":18,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":383},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":123493,"byte_end":123498,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":20,"index":822},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/field.rs","byte_start":124154,"byte_end":124159,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":20,"index":822},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":124651,"byte_end":124656,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":128246,"byte_end":128251,"line_start":122,"line_end":122,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":129786,"byte_end":129787,"line_start":162,"line_end":162,"column_start":35,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130387,"byte_end":130399,"line_start":186,"line_end":186,"column_start":28,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130657,"byte_end":130658,"line_start":196,"line_end":196,"column_start":31,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":159},"to":{"krate":0,"index":144}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/instrument.rs","byte_start":130671,"byte_end":130683,"line_start":198,"line_end":198,"column_start":9,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":150032,"byte_end":150038,"line_start":343,"line_end":343,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":383},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":152938,"byte_end":152942,"line_start":430,"line_end":430,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":186770,"byte_end":186774,"line_start":1370,"line_end":1370,"column_start":25,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":187053,"byte_end":187057,"line_start":1381,"line_end":1381,"column_start":15,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":9168}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":187170,"byte_end":187174,"line_start":1387,"line_end":1387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188113,"byte_end":188119,"line_start":1420,"line_end":1420,"column_start":29,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":40259},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188256,"byte_end":188262,"line_start":1426,"line_end":1426,"column_start":29,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":40259},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188379,"byte_end":188385,"line_start":1432,"line_end":1432,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":40259},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188513,"byte_end":188519,"line_start":1438,"line_end":1438,"column_start":36,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":40259},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188670,"byte_end":188676,"line_start":1444,"line_end":1444,"column_start":36,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":40259},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":188794,"byte_end":188798,"line_start":1450,"line_end":1450,"column_start":15,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":189336,"byte_end":189341,"line_start":1474,"line_end":1474,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190758,"byte_end":190763,"line_start":1511,"line_end":1511,"column_start":25,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190858,"byte_end":190863,"line_start":1517,"line_end":1517,"column_start":15,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":9168}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":190966,"byte_end":190971,"line_start":1523,"line_end":1523,"column_start":16,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191176,"byte_end":191187,"line_start":1534,"line_end":1534,"column_start":6,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191628,"byte_end":191639,"line_start":1550,"line_end":1550,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191758,"byte_end":191765,"line_start":1559,"line_end":1559,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":191862,"byte_end":191873,"line_start":1566,"line_end":1566,"column_start":15,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/span.rs","byte_start":193040,"byte_end":193054,"line_start":1598,"line_end":1598,"column_start":22,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":38904,"byte_end":38917,"line_start":957,"line_end":957,"column_start":10,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42144,"byte_end":42157,"line_start":1034,"line_end":1034,"column_start":23,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":365},"to":{"krate":20,"index":54}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.27/src/lib.rs","byte_start":42597,"byte_end":42610,"line_start":1050,"line_end":1050,"column_start":25,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":8962}}]}