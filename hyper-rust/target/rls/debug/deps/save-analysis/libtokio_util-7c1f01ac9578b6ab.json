{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8","program":"/home/omar/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=7c1f01ac9578b6ab","-C","extra-filename=-7c1f01ac9578b6ab","--out-dir","/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps","-L","dependency=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps","--extern","bytes=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libbytes-b2938827ee914b28.rmeta","--extern","futures_core=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libfutures_core-37d17250a6b7deef.rmeta","--extern","futures_sink=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libfutures_sink-ad7c3c030108a7fb.rmeta","--extern","log=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/liblog-0ed70860e3168808.rmeta","--extern","pin_project_lite=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libpin_project_lite-9947e3c941c54187.rmeta","--extern","tokio=/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libtokio-50f035e28d3cce9c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/omar/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/media/usb-drive/home/remo/Documents/iot-q4/hyper-rust/target/rls/debug/deps/libtokio_util-7c1f01ac9578b6ab.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[2537750572844002545,0]},"crate_root":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src","external_crates":[{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":19,"id":{"name":"futures_core","disambiguator":[17347509187775134927,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":20,"id":{"name":"futures_sink","disambiguator":[12754915357028105211,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":21,"id":{"name":"tokio","disambiguator":[13102331263066103903,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":22,"id":{"name":"parking_lot","disambiguator":[2992758115595900887,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":23,"id":{"name":"instant","disambiguator":[1211205218544689310,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":25,"id":{"name":"lock_api","disambiguator":[5270498435020225635,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":26,"id":{"name":"scopeguard","disambiguator":[7544798874576579179,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":27,"id":{"name":"parking_lot_core","disambiguator":[8949319583887861797,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":28,"id":{"name":"smallvec","disambiguator":[16372994366574303381,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[2024884194342880756,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":30,"id":{"name":"pin_project_lite","disambiguator":[13850998262773622920,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":31,"id":{"name":"mio","disambiguator":[3625309083328881892,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","num":32,"id":{"name":"log","disambiguator":[12107161782752528182,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","num":33,"id":{"name":"bytes","disambiguator":[4391728918271824596,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":34,"id":{"name":"once_cell","disambiguator":[7356205855446529421,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[17757043306029362321,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":36,"id":{"name":"memchr","disambiguator":[2512208809680259524,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":37,"id":{"name":"num_cpus","disambiguator":[18349004145145287718,0]}},{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[88865005928359445,0]}}],"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253726,"byte_end":14253736,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253775,"byte_end":14253782,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253821,"byte_end":14253828,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253990,"byte_end":14253996,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253998,"byte_end":14254009,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254057,"byte_end":14254067,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254116,"byte_end":14254127,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254189,"byte_end":14254209,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254211,"byte_end":14254236,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254285,"byte_end":14254295,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254297,"byte_end":14254312,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254377,"byte_end":14254394,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254396,"byte_end":14254418,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6717,"byte_end":6726,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6728,"byte_end":6745,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6747,"byte_end":6772,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6835,"byte_end":6845,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6892,"byte_end":6905,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6948,"byte_end":6965,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243454,"byte_end":14243507,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243508,"byte_end":14243511,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243512,"byte_end":14243587,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243588,"byte_end":14243653,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243654,"byte_end":14243657,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243658,"byte_end":14243738,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243739,"byte_end":14243814,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243815,"byte_end":14243863,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243864,"byte_end":14243867,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243868,"byte_end":14243891,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243892,"byte_end":14243895,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243896,"byte_end":14243975,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14243976,"byte_end":14244055,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244056,"byte_end":14244127,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244128,"byte_end":14244198,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244199,"byte_end":14244277,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244278,"byte_end":14244354,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244355,"byte_end":14244388,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244389,"byte_end":14244392,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244393,"byte_end":14244473,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244474,"byte_end":14244554,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244555,"byte_end":14244605,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244606,"byte_end":14244609,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244610,"byte_end":14244661,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244662,"byte_end":14244711,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244712,"byte_end":14244763,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244764,"byte_end":14244767,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244768,"byte_end":14244833,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244834,"byte_end":14244837,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244838,"byte_end":14244915,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244916,"byte_end":14244957,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244958,"byte_end":14244961,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14244962,"byte_end":14245042,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245043,"byte_end":14245122,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245123,"byte_end":14245201,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245202,"byte_end":14245281,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245282,"byte_end":14245296,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245297,"byte_end":14245300,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245301,"byte_end":14245380,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245381,"byte_end":14245460,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245461,"byte_end":14245478,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245479,"byte_end":14245482,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245483,"byte_end":14245560,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245561,"byte_end":14245640,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245641,"byte_end":14245718,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245719,"byte_end":14245789,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245790,"byte_end":14245839,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245840,"byte_end":14245843,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245844,"byte_end":14245857,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245858,"byte_end":14245890,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245891,"byte_end":14245958,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14245959,"byte_end":14246073,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246074,"byte_end":14246111,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246112,"byte_end":14246173,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246174,"byte_end":14246223,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246224,"byte_end":14246227,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246228,"byte_end":14246269,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246270,"byte_end":14246280,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246281,"byte_end":14246365,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246366,"byte_end":14246422,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246423,"byte_end":14246426,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246427,"byte_end":14246448,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246449,"byte_end":14246516,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246517,"byte_end":14246545,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246546,"byte_end":14246559,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246560,"byte_end":14246578,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246579,"byte_end":14246588,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246589,"byte_end":14246592,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246593,"byte_end":14246652,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246653,"byte_end":14246677,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246678,"byte_end":14246687,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246688,"byte_end":14246693,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246694,"byte_end":14246702,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246703,"byte_end":14246710,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246711,"byte_end":14246785,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246786,"byte_end":14246789,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246790,"byte_end":14246812,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246813,"byte_end":14246816,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246817,"byte_end":14246894,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246895,"byte_end":14246971,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14246972,"byte_end":14247051,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247052,"byte_end":14247106,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247107,"byte_end":14247110,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247111,"byte_end":14247155,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247156,"byte_end":14247163,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247164,"byte_end":14247199,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247200,"byte_end":14247231,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247232,"byte_end":14247235,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247236,"byte_end":14247265,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247266,"byte_end":14247269,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247270,"byte_end":14247309,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247310,"byte_end":14247313,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247314,"byte_end":14247352,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247353,"byte_end":14247380,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247381,"byte_end":14247417,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247418,"byte_end":14247421,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247422,"byte_end":14247440,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247441,"byte_end":14247463,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247464,"byte_end":14247494,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247495,"byte_end":14247549,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247550,"byte_end":14247580,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247581,"byte_end":14247638,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247639,"byte_end":14247671,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247672,"byte_end":14247685,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247686,"byte_end":14247689,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247690,"byte_end":14247724,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247725,"byte_end":14247769,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247770,"byte_end":14247822,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247823,"byte_end":14247890,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247891,"byte_end":14247894,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247895,"byte_end":14247969,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14247970,"byte_end":14248036,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248037,"byte_end":14248066,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248067,"byte_end":14248114,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248115,"byte_end":14248167,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248168,"byte_end":14248239,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248240,"byte_end":14248259,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248260,"byte_end":14248273,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248274,"byte_end":14248277,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248278,"byte_end":14248317,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248318,"byte_end":14248373,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248374,"byte_end":14248392,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248393,"byte_end":14248469,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248470,"byte_end":14248536,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248537,"byte_end":14248589,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248590,"byte_end":14248593,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248594,"byte_end":14248674,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248675,"byte_end":14248700,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248701,"byte_end":14248733,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248734,"byte_end":14248747,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248748,"byte_end":14248751,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248752,"byte_end":14248824,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248825,"byte_end":14248851,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248852,"byte_end":14248903,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248904,"byte_end":14248940,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248941,"byte_end":14248944,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14248945,"byte_end":14249023,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249024,"byte_end":14249067,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249068,"byte_end":14249115,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249116,"byte_end":14249152,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249153,"byte_end":14249197,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249198,"byte_end":14249254,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249255,"byte_end":14249303,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249304,"byte_end":14249326,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249327,"byte_end":14249345,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249346,"byte_end":14249359,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249360,"byte_end":14249369,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249370,"byte_end":14249375,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249376,"byte_end":14249383,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249384,"byte_end":14249387,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249388,"byte_end":14249411,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249412,"byte_end":14249415,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249416,"byte_end":14249494,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249495,"byte_end":14249568,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249569,"byte_end":14249645,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249646,"byte_end":14249726,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249727,"byte_end":14249743,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249744,"byte_end":14249747,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249748,"byte_end":14249828,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249829,"byte_end":14249908,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249909,"byte_end":14249989,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14249990,"byte_end":14250062,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250063,"byte_end":14250066,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250067,"byte_end":14250144,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250145,"byte_end":14250223,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250224,"byte_end":14250297,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250298,"byte_end":14250364,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250365,"byte_end":14250368,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250369,"byte_end":14250382,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250383,"byte_end":14250416,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250417,"byte_end":14250451,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250452,"byte_end":14250489,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250490,"byte_end":14250557,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250558,"byte_end":14250593,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250594,"byte_end":14250655,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250656,"byte_end":14250702,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250703,"byte_end":14250764,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250765,"byte_end":14250768,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250769,"byte_end":14250797,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250798,"byte_end":14250801,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250802,"byte_end":14250843,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250844,"byte_end":14250854,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250855,"byte_end":14250879,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250880,"byte_end":14250954,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250955,"byte_end":14250997,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14250998,"byte_end":14251012,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251013,"byte_end":14251070,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251071,"byte_end":14251120,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251121,"byte_end":14251135,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251136,"byte_end":14251173,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251174,"byte_end":14251225,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251226,"byte_end":14251272,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251273,"byte_end":14251303,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251304,"byte_end":14251318,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251319,"byte_end":14251328,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251329,"byte_end":14251334,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251335,"byte_end":14251342,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251343,"byte_end":14251350,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251351,"byte_end":14251426,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251427,"byte_end":14251500,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251501,"byte_end":14251543,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251544,"byte_end":14251547,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251548,"byte_end":14251570,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251571,"byte_end":14251574,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251575,"byte_end":14251652,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251653,"byte_end":14251729,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251730,"byte_end":14251806,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251807,"byte_end":14251830,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251831,"byte_end":14251834,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251835,"byte_end":14251880,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251881,"byte_end":14251888,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251889,"byte_end":14251924,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251925,"byte_end":14251949,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251950,"byte_end":14251953,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251954,"byte_end":14251983,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251984,"byte_end":14251987,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14251988,"byte_end":14252027,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252028,"byte_end":14252031,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252032,"byte_end":14252078,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252079,"byte_end":14252115,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252116,"byte_end":14252119,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252120,"byte_end":14252211,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252212,"byte_end":14252286,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252287,"byte_end":14252309,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252310,"byte_end":14252343,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252344,"byte_end":14252391,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252392,"byte_end":14252444,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252445,"byte_end":14252520,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252521,"byte_end":14252540,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252541,"byte_end":14252554,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252555,"byte_end":14252558,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252559,"byte_end":14252611,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252612,"byte_end":14252689,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252690,"byte_end":14252754,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252755,"byte_end":14252758,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252759,"byte_end":14252802,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252803,"byte_end":14252843,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252844,"byte_end":14252847,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252848,"byte_end":14252905,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252906,"byte_end":14252952,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14252953,"byte_end":14253004,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253005,"byte_end":14253023,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253024,"byte_end":14253033,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253034,"byte_end":14253039,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253040,"byte_end":14253047,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253048,"byte_end":14253051,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253052,"byte_end":14253091,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253092,"byte_end":14253133,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253134,"byte_end":14253170,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253171,"byte_end":14253203,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253204,"byte_end":14253300,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253301,"byte_end":14253352,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253353,"byte_end":14253406,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253407,"byte_end":14253450,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253451,"byte_end":14253495,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253496,"byte_end":14253544,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253545,"byte_end":14253593,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253594,"byte_end":14253640,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14253641,"byte_end":14253680,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255704,"byte_end":14255714,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254547,"byte_end":14254632,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254633,"byte_end":14254636,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254637,"byte_end":14254675,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254676,"byte_end":14254714,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254715,"byte_end":14254718,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254719,"byte_end":14254732,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254733,"byte_end":14254736,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254737,"byte_end":14254818,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254819,"byte_end":14254822,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254823,"byte_end":14254862,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254863,"byte_end":14254896,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254897,"byte_end":14254926,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254927,"byte_end":14254930,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254931,"byte_end":14254938,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254939,"byte_end":14254957,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254958,"byte_end":14254988,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14254989,"byte_end":14255013,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255014,"byte_end":14255021,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255022,"byte_end":14255051,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255052,"byte_end":14255104,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255105,"byte_end":14255108,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255109,"byte_end":14255127,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255128,"byte_end":14255145,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255146,"byte_end":14255226,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255227,"byte_end":14255261,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255262,"byte_end":14255315,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255316,"byte_end":14255327,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255328,"byte_end":14255335,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255336,"byte_end":14255341,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255342,"byte_end":14255389,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255390,"byte_end":14255443,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255444,"byte_end":14255502,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255503,"byte_end":14255582,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255583,"byte_end":14255595,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255596,"byte_end":14255603,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255604,"byte_end":14255611,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255612,"byte_end":14255615,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255816,"byte_end":14255819,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255743,"byte_end":14255804,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257820,"byte_end":14257827,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256534,"byte_end":14256569,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256570,"byte_end":14256573,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256574,"byte_end":14256643,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256644,"byte_end":14256723,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256724,"byte_end":14256796,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256797,"byte_end":14256821,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256822,"byte_end":14256825,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256826,"byte_end":14256894,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256895,"byte_end":14256972,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14256973,"byte_end":14257034,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257035,"byte_end":14257038,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257039,"byte_end":14257100,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257101,"byte_end":14257163,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257164,"byte_end":14257167,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257168,"byte_end":14257231,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257232,"byte_end":14257295,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257296,"byte_end":14257375,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257376,"byte_end":14257450,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257451,"byte_end":14257470,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257471,"byte_end":14257474,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257475,"byte_end":14257543,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257544,"byte_end":14257606,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257607,"byte_end":14257682,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257683,"byte_end":14257723,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257724,"byte_end":14257727,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257728,"byte_end":14257764,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257765,"byte_end":14257809,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257875,"byte_end":14257879,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257834,"byte_end":14257865,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258645,"byte_end":14258650,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257886,"byte_end":14257938,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257943,"byte_end":14257946,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14257951,"byte_end":14258020,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258025,"byte_end":14258095,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258100,"byte_end":14258146,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258151,"byte_end":14258154,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258159,"byte_end":14258235,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258240,"byte_end":14258315,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258320,"byte_end":14258395,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258400,"byte_end":14258440,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258445,"byte_end":14258448,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258453,"byte_end":14258527,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258532,"byte_end":14258578,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258583,"byte_end":14258586,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258591,"byte_end":14258635,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261586,"byte_end":14261592,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258674,"byte_end":14258739,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258744,"byte_end":14258747,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258752,"byte_end":14258826,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258831,"byte_end":14258903,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258908,"byte_end":14258981,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14258986,"byte_end":14259029,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259034,"byte_end":14259037,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259042,"byte_end":14259115,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259120,"byte_end":14259183,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259188,"byte_end":14259263,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259268,"byte_end":14259343,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259348,"byte_end":14259371,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259376,"byte_end":14259379,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259384,"byte_end":14259456,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259461,"byte_end":14259535,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259540,"byte_end":14259610,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259615,"byte_end":14259618,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259623,"byte_end":14259691,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259696,"byte_end":14259767,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259772,"byte_end":14259852,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259857,"byte_end":14259869,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259874,"byte_end":14259877,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259882,"byte_end":14259952,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14259957,"byte_end":14260032,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260037,"byte_end":14260074,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260079,"byte_end":14260082,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260087,"byte_end":14260123,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260128,"byte_end":14260172,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260177,"byte_end":14260180,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260185,"byte_end":14260208,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260213,"byte_end":14260216,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260221,"byte_end":14260295,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260300,"byte_end":14260374,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260379,"byte_end":14260432,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260437,"byte_end":14260440,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260445,"byte_end":14260516,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260521,"byte_end":14260591,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260596,"byte_end":14260612,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260617,"byte_end":14260620,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260625,"byte_end":14260638,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260643,"byte_end":14260661,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260666,"byte_end":14260671,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260676,"byte_end":14260702,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260707,"byte_end":14260744,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260749,"byte_end":14260754,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260759,"byte_end":14260780,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260785,"byte_end":14260790,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260795,"byte_end":14260825,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260830,"byte_end":14260844,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260849,"byte_end":14260880,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260885,"byte_end":14260918,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260923,"byte_end":14260926,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14260931,"byte_end":14261024,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261029,"byte_end":14261047,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261052,"byte_end":14261055,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261060,"byte_end":14261132,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261137,"byte_end":14261197,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261202,"byte_end":14261254,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261259,"byte_end":14261321,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261326,"byte_end":14261393,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261398,"byte_end":14261401,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261406,"byte_end":14261434,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261439,"byte_end":14261448,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261453,"byte_end":14261458,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261463,"byte_end":14261470,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261475,"byte_end":14261478,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261483,"byte_end":14261552,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261557,"byte_end":14261578,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262758,"byte_end":14262768,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261673,"byte_end":14261745,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261750,"byte_end":14261799,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261804,"byte_end":14261807,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261812,"byte_end":14261880,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261885,"byte_end":14261952,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14261957,"byte_end":14262025,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262030,"byte_end":14262106,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262111,"byte_end":14262177,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262182,"byte_end":14262185,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262190,"byte_end":14262258,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262263,"byte_end":14262338,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262343,"byte_end":14262418,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262423,"byte_end":14262495,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262500,"byte_end":14262542,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262547,"byte_end":14262550,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262555,"byte_end":14262630,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262635,"byte_end":14262713,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14262718,"byte_end":14262750,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264376,"byte_end":14264382,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263186,"byte_end":14263266,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263271,"byte_end":14263347,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263352,"byte_end":14263355,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263360,"byte_end":14263435,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263440,"byte_end":14263510,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263515,"byte_end":14263586,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263591,"byte_end":14263663,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263668,"byte_end":14263726,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263731,"byte_end":14263734,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263739,"byte_end":14263808,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263813,"byte_end":14263888,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263893,"byte_end":14263969,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14263974,"byte_end":14263996,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264001,"byte_end":14264004,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264009,"byte_end":14264082,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264087,"byte_end":14264160,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264165,"byte_end":14264241,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264246,"byte_end":14264249,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264254,"byte_end":14264290,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264295,"byte_end":14264327,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/decoder.rs","byte_start":14264332,"byte_end":14264368,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264716,"byte_end":14264723,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264561,"byte_end":14264633,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264634,"byte_end":14264654,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264655,"byte_end":14264658,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264659,"byte_end":14264705,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264988,"byte_end":14264993,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264736,"byte_end":14264768,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264773,"byte_end":14264776,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264781,"byte_end":14264858,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264863,"byte_end":14264919,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264924,"byte_end":14264927,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14264932,"byte_end":14264978,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265344,"byte_end":14265350,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265017,"byte_end":14265062,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265067,"byte_end":14265070,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265075,"byte_end":14265149,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265154,"byte_end":14265234,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265239,"byte_end":14265277,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265282,"byte_end":14265285,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/encoder.rs","byte_start":14265290,"byte_end":14265336,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276167,"byte_end":14276173,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1508}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277946,"byte_end":14277949,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276315,"byte_end":14276395,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276400,"byte_end":14276481,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276486,"byte_end":14276489,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276494,"byte_end":14276569,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276574,"byte_end":14276644,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276649,"byte_end":14276718,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276723,"byte_end":14276795,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276800,"byte_end":14276858,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276863,"byte_end":14276866,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276871,"byte_end":14276942,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276947,"byte_end":14277024,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277029,"byte_end":14277105,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277110,"byte_end":14277132,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277137,"byte_end":14277140,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277145,"byte_end":14277218,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277223,"byte_end":14277296,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277301,"byte_end":14277377,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277382,"byte_end":14277385,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277390,"byte_end":14277466,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277471,"byte_end":14277547,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277552,"byte_end":14277627,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277632,"byte_end":14277667,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277672,"byte_end":14277675,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277680,"byte_end":14277716,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277721,"byte_end":14277753,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277758,"byte_end":14277795,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277800,"byte_end":14277838,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14277843,"byte_end":14277934,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279557,"byte_end":14279570,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278162,"byte_end":14278242,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278247,"byte_end":14278328,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278333,"byte_end":14278382,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278387,"byte_end":14278390,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278395,"byte_end":14278470,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278475,"byte_end":14278545,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278550,"byte_end":14278619,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278624,"byte_end":14278696,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278701,"byte_end":14278759,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278764,"byte_end":14278767,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278772,"byte_end":14278843,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278848,"byte_end":14278925,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14278930,"byte_end":14279006,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279011,"byte_end":14279033,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279038,"byte_end":14279041,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279046,"byte_end":14279119,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279124,"byte_end":14279197,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279202,"byte_end":14279278,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279283,"byte_end":14279286,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279291,"byte_end":14279327,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279332,"byte_end":14279364,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279369,"byte_end":14279406,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279411,"byte_end":14279449,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14279454,"byte_end":14279545,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281673,"byte_end":14281683,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280096,"byte_end":14280176,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280181,"byte_end":14280262,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280267,"byte_end":14280270,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280275,"byte_end":14280350,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280355,"byte_end":14280425,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280430,"byte_end":14280501,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280506,"byte_end":14280578,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280583,"byte_end":14280641,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280646,"byte_end":14280649,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280654,"byte_end":14280725,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280730,"byte_end":14280807,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280812,"byte_end":14280888,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280893,"byte_end":14280915,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280920,"byte_end":14280923,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280928,"byte_end":14281007,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281012,"byte_end":14281089,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281094,"byte_end":14281097,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281102,"byte_end":14281175,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281180,"byte_end":14281253,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281258,"byte_end":14281334,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281339,"byte_end":14281342,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281347,"byte_end":14281383,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281388,"byte_end":14281420,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281425,"byte_end":14281463,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281468,"byte_end":14281506,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281511,"byte_end":14281565,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14281570,"byte_end":14281661,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282318,"byte_end":14282325,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282035,"byte_end":14282098,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282103,"byte_end":14282116,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282121,"byte_end":14282124,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282129,"byte_end":14282204,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282209,"byte_end":14282279,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282284,"byte_end":14282306,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282669,"byte_end":14282676,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282378,"byte_end":14282449,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282454,"byte_end":14282467,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282472,"byte_end":14282475,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282480,"byte_end":14282555,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282560,"byte_end":14282630,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282635,"byte_end":14282657,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283039,"byte_end":14283050,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282741,"byte_end":14282819,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282824,"byte_end":14282837,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282842,"byte_end":14282845,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282850,"byte_end":14282925,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14282930,"byte_end":14283000,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283005,"byte_end":14283027,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283397,"byte_end":14283402,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283146,"byte_end":14283204,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283209,"byte_end":14283222,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283227,"byte_end":14283230,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283235,"byte_end":14283309,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283314,"byte_end":14283385,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283714,"byte_end":14283723,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283455,"byte_end":14283521,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283526,"byte_end":14283539,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283544,"byte_end":14283547,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283552,"byte_end":14283626,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283631,"byte_end":14283702,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283843,"byte_end":14283854,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283788,"byte_end":14283831,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283989,"byte_end":14284004,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14283926,"byte_end":14283977,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284144,"byte_end":14284156,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284088,"byte_end":14284132,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284293,"byte_end":14284309,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284229,"byte_end":14284281,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284659,"byte_end":14284669,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284394,"byte_end":14284457,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284462,"byte_end":14284465,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284470,"byte_end":14284545,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284550,"byte_end":14284620,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284625,"byte_end":14284647,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285041,"byte_end":14285051,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284719,"byte_end":14284793,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284798,"byte_end":14284839,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284844,"byte_end":14284847,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284852,"byte_end":14284927,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14284932,"byte_end":14285002,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285007,"byte_end":14285029,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287025,"byte_end":14287036,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286710,"byte_end":14286781,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286782,"byte_end":14286854,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286855,"byte_end":14286915,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286916,"byte_end":14286919,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286920,"byte_end":14286956,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286974,"byte_end":14287013,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287122,"byte_end":14287124,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287049,"byte_end":14287113,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287156,"byte_end":14287161,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287134,"byte_end":14287147,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287226,"byte_end":14287234,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287171,"byte_end":14287217,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287321,"byte_end":14287330,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287251,"byte_end":14287312,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287563,"byte_end":14287566,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287511,"byte_end":14287551,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288295,"byte_end":14288305,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288556,"byte_end":14288559,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288488,"byte_end":14288544,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288907,"byte_end":14288920,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288791,"byte_end":14288873,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288878,"byte_end":14288895,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289634,"byte_end":14289641,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289347,"byte_end":14289410,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289415,"byte_end":14289432,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289437,"byte_end":14289440,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289445,"byte_end":14289520,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289525,"byte_end":14289595,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289600,"byte_end":14289622,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289989,"byte_end":14289996,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289694,"byte_end":14289765,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289770,"byte_end":14289787,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289792,"byte_end":14289795,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289800,"byte_end":14289875,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289880,"byte_end":14289950,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289955,"byte_end":14289977,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290363,"byte_end":14290374,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290061,"byte_end":14290139,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290144,"byte_end":14290161,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290166,"byte_end":14290169,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290174,"byte_end":14290249,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290254,"byte_end":14290324,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290329,"byte_end":14290351,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290739,"byte_end":14290749,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290470,"byte_end":14290537,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290542,"byte_end":14290545,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290550,"byte_end":14290625,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290630,"byte_end":14290700,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290705,"byte_end":14290727,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290861,"byte_end":14290868,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290799,"byte_end":14290849,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290991,"byte_end":14291002,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14290921,"byte_end":14290979,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291122,"byte_end":14291133,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291067,"byte_end":14291110,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291263,"byte_end":14291278,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291200,"byte_end":14291251,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293379,"byte_end":14293390,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293597,"byte_end":14293600,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293528,"byte_end":14293585,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294158,"byte_end":14294165,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293870,"byte_end":14293933,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293938,"byte_end":14293956,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293961,"byte_end":14293964,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293969,"byte_end":14294044,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294049,"byte_end":14294119,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294124,"byte_end":14294146,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294514,"byte_end":14294521,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294218,"byte_end":14294289,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294294,"byte_end":14294312,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294317,"byte_end":14294320,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294325,"byte_end":14294400,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294405,"byte_end":14294475,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294480,"byte_end":14294502,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294889,"byte_end":14294900,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294586,"byte_end":14294664,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294669,"byte_end":14294687,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294692,"byte_end":14294695,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294700,"byte_end":14294775,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294780,"byte_end":14294850,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294855,"byte_end":14294877,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295266,"byte_end":14295276,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14294996,"byte_end":14295064,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295069,"byte_end":14295072,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295077,"byte_end":14295152,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295157,"byte_end":14295227,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295232,"byte_end":14295254,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295388,"byte_end":14295395,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295326,"byte_end":14295376,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295518,"byte_end":14295529,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295448,"byte_end":14295506,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295650,"byte_end":14295662,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295594,"byte_end":14295638,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295793,"byte_end":14295809,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295729,"byte_end":14295781,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1233},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1009},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297336,"byte_end":14297388,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297389,"byte_end":14297392,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297393,"byte_end":14297463,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297464,"byte_end":14297522,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297523,"byte_end":14297595,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297596,"byte_end":14297666,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297667,"byte_end":14297734,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297735,"byte_end":14297738,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297739,"byte_end":14297760,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297761,"byte_end":14297764,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297765,"byte_end":14297840,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297841,"byte_end":14297912,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297913,"byte_end":14297984,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14297985,"byte_end":14298055,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298056,"byte_end":14298096,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298097,"byte_end":14298100,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298101,"byte_end":14298108,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298109,"byte_end":14298152,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298153,"byte_end":14298211,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298212,"byte_end":14298215,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298216,"byte_end":14298271,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298272,"byte_end":14298314,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298315,"byte_end":14298320,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298321,"byte_end":14298373,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298374,"byte_end":14298379,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298380,"byte_end":14298402,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298403,"byte_end":14298410,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298411,"byte_end":14298414,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298415,"byte_end":14298487,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298488,"byte_end":14298559,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298560,"byte_end":14298579,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298580,"byte_end":14298583,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298584,"byte_end":14298595,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298596,"byte_end":14298645,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298646,"byte_end":14298695,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298696,"byte_end":14298745,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298746,"byte_end":14298753,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298754,"byte_end":14298757,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298758,"byte_end":14298796,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298797,"byte_end":14298800,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298801,"byte_end":14298808,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298809,"byte_end":14298852,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298853,"byte_end":14298911,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298912,"byte_end":14298915,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298916,"byte_end":14298941,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298942,"byte_end":14298963,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298964,"byte_end":14298967,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14298968,"byte_end":14299044,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299045,"byte_end":14299054,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299055,"byte_end":14299097,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299098,"byte_end":14299103,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299104,"byte_end":14299177,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299178,"byte_end":14299225,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299226,"byte_end":14299229,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299230,"byte_end":14299267,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299268,"byte_end":14299282,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299283,"byte_end":14299288,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299289,"byte_end":14299296,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299297,"byte_end":14299300,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299301,"byte_end":14299343,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299344,"byte_end":14299347,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299348,"byte_end":14299359,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299360,"byte_end":14299399,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299400,"byte_end":14299439,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299440,"byte_end":14299479,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299480,"byte_end":14299487,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299488,"byte_end":14299491,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299492,"byte_end":14299506,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299507,"byte_end":14299510,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299511,"byte_end":14299586,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299587,"byte_end":14299660,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299661,"byte_end":14299727,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299728,"byte_end":14299797,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299798,"byte_end":14299863,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299864,"byte_end":14299867,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299868,"byte_end":14299884,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299885,"byte_end":14299888,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299889,"byte_end":14299965,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14299966,"byte_end":14300007,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300008,"byte_end":14300011,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300012,"byte_end":14300019,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300020,"byte_end":14300051,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300052,"byte_end":14300102,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300103,"byte_end":14300144,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300145,"byte_end":14300180,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300181,"byte_end":14300229,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300230,"byte_end":14300261,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300262,"byte_end":14300310,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300311,"byte_end":14300360,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300361,"byte_end":14300383,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300384,"byte_end":14300391,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300392,"byte_end":14300414,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300415,"byte_end":14300422,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300423,"byte_end":14300426,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300427,"byte_end":14300475,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300476,"byte_end":14300479,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300480,"byte_end":14300491,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300492,"byte_end":14300544,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300545,"byte_end":14300610,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300611,"byte_end":14300676,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300677,"byte_end":14300742,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300743,"byte_end":14300750,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300751,"byte_end":14300754,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300755,"byte_end":14300831,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300832,"byte_end":14300906,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300907,"byte_end":14300979,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14300980,"byte_end":14301056,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301057,"byte_end":14301099,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301100,"byte_end":14301103,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301104,"byte_end":14301120,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301121,"byte_end":14301124,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301125,"byte_end":14301200,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301201,"byte_end":14301242,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301243,"byte_end":14301246,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301247,"byte_end":14301254,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301255,"byte_end":14301286,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301287,"byte_end":14301337,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301338,"byte_end":14301379,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301380,"byte_end":14301415,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301416,"byte_end":14301464,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301465,"byte_end":14301496,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301497,"byte_end":14301545,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301546,"byte_end":14301605,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301606,"byte_end":14301628,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301629,"byte_end":14301636,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301637,"byte_end":14301659,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301660,"byte_end":14301667,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301668,"byte_end":14301671,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301672,"byte_end":14301720,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301721,"byte_end":14301724,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301725,"byte_end":14301736,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301737,"byte_end":14301786,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301787,"byte_end":14301841,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301842,"byte_end":14301896,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301897,"byte_end":14301951,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301952,"byte_end":14301959,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301960,"byte_end":14301963,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14301964,"byte_end":14302037,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302038,"byte_end":14302105,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302106,"byte_end":14302109,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302110,"byte_end":14302126,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302127,"byte_end":14302130,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302131,"byte_end":14302207,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302208,"byte_end":14302280,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302281,"byte_end":14302320,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302321,"byte_end":14302324,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302325,"byte_end":14302332,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302333,"byte_end":14302364,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302365,"byte_end":14302415,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302416,"byte_end":14302457,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302458,"byte_end":14302493,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302494,"byte_end":14302542,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302543,"byte_end":14302574,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302575,"byte_end":14302622,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302623,"byte_end":14302643,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302644,"byte_end":14302666,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302667,"byte_end":14302674,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302675,"byte_end":14302697,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302698,"byte_end":14302705,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302706,"byte_end":14302709,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302710,"byte_end":14302758,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302759,"byte_end":14302762,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302763,"byte_end":14302774,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302775,"byte_end":14302827,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302828,"byte_end":14302893,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302894,"byte_end":14302959,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14302960,"byte_end":14303025,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303026,"byte_end":14303033,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303034,"byte_end":14303037,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303038,"byte_end":14303110,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303111,"byte_end":14303186,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303187,"byte_end":14303259,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303260,"byte_end":14303336,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303337,"byte_end":14303410,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303411,"byte_end":14303414,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303415,"byte_end":14303431,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303432,"byte_end":14303435,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303436,"byte_end":14303510,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303511,"byte_end":14303578,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303579,"byte_end":14303582,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303583,"byte_end":14303590,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303591,"byte_end":14303622,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303623,"byte_end":14303673,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303674,"byte_end":14303715,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303716,"byte_end":14303751,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303752,"byte_end":14303800,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303801,"byte_end":14303832,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303833,"byte_end":14303881,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303882,"byte_end":14303902,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303903,"byte_end":14303925,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303926,"byte_end":14303933,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303934,"byte_end":14303956,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303957,"byte_end":14303964,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303965,"byte_end":14303968,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14303969,"byte_end":14304017,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304018,"byte_end":14304021,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304022,"byte_end":14304033,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304034,"byte_end":14304060,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304061,"byte_end":14304106,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304107,"byte_end":14304152,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304153,"byte_end":14304198,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304199,"byte_end":14304202,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304203,"byte_end":14304231,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304232,"byte_end":14304277,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304278,"byte_end":14304323,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304324,"byte_end":14304369,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304370,"byte_end":14304377,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304378,"byte_end":14304381,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304382,"byte_end":14304454,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304455,"byte_end":14304531,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304532,"byte_end":14304602,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304603,"byte_end":14304672,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304673,"byte_end":14304710,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304711,"byte_end":14304714,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304715,"byte_end":14304789,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304790,"byte_end":14304844,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304845,"byte_end":14304848,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304849,"byte_end":14304865,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304866,"byte_end":14304869,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304870,"byte_end":14304943,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14304944,"byte_end":14305020,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305021,"byte_end":14305095,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305096,"byte_end":14305109,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305110,"byte_end":14305113,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305114,"byte_end":14305121,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305122,"byte_end":14305153,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305154,"byte_end":14305204,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305205,"byte_end":14305246,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305247,"byte_end":14305282,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305283,"byte_end":14305332,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305333,"byte_end":14305364,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305365,"byte_end":14305413,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305414,"byte_end":14305458,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305459,"byte_end":14305481,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305482,"byte_end":14305489,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305490,"byte_end":14305512,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305513,"byte_end":14305520,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305521,"byte_end":14305524,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305525,"byte_end":14305573,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305574,"byte_end":14305577,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305578,"byte_end":14305589,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305590,"byte_end":14305616,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305617,"byte_end":14305667,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305668,"byte_end":14305718,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305719,"byte_end":14305769,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305770,"byte_end":14305773,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305774,"byte_end":14305794,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305795,"byte_end":14305825,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305826,"byte_end":14305856,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305857,"byte_end":14305887,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305888,"byte_end":14305895,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305896,"byte_end":14305899,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305900,"byte_end":14305973,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14305974,"byte_end":14306049,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306050,"byte_end":14306122,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306123,"byte_end":14306161,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306162,"byte_end":14306165,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306166,"byte_end":14306240,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306241,"byte_end":14306317,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306318,"byte_end":14306391,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306392,"byte_end":14306420,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306421,"byte_end":14306424,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306425,"byte_end":14306441,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306442,"byte_end":14306445,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306446,"byte_end":14306519,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306520,"byte_end":14306596,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306597,"byte_end":14306671,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306672,"byte_end":14306744,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306745,"byte_end":14306756,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306757,"byte_end":14306760,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306761,"byte_end":14306768,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306769,"byte_end":14306800,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306801,"byte_end":14306851,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306852,"byte_end":14306893,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306894,"byte_end":14306929,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306930,"byte_end":14306979,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14306980,"byte_end":14307011,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307012,"byte_end":14307077,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307078,"byte_end":14307098,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307099,"byte_end":14307121,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307122,"byte_end":14307129,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307130,"byte_end":14307137,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307138,"byte_end":14307141,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307142,"byte_end":14307190,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307191,"byte_end":14307194,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307195,"byte_end":14307206,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307207,"byte_end":14307233,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307234,"byte_end":14307284,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307285,"byte_end":14307335,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307336,"byte_end":14307386,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307387,"byte_end":14307390,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307391,"byte_end":14307411,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307412,"byte_end":14307442,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307443,"byte_end":14307473,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307474,"byte_end":14307504,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307505,"byte_end":14307512,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307513,"byte_end":14307516,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307517,"byte_end":14307590,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307591,"byte_end":14307665,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307666,"byte_end":14307740,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307741,"byte_end":14307814,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307815,"byte_end":14307891,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307892,"byte_end":14307925,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307926,"byte_end":14307929,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307930,"byte_end":14307946,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307947,"byte_end":14307950,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14307951,"byte_end":14308025,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308026,"byte_end":14308093,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308094,"byte_end":14308097,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308098,"byte_end":14308105,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308106,"byte_end":14308137,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308138,"byte_end":14308188,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308189,"byte_end":14308230,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308231,"byte_end":14308266,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308267,"byte_end":14308315,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308316,"byte_end":14308347,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308348,"byte_end":14308395,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308396,"byte_end":14308442,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308443,"byte_end":14308465,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308466,"byte_end":14308473,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308474,"byte_end":14308496,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308497,"byte_end":14308504,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308505,"byte_end":14308508,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308509,"byte_end":14308557,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308558,"byte_end":14308561,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308562,"byte_end":14308573,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308574,"byte_end":14308630,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308631,"byte_end":14308692,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308693,"byte_end":14308754,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308755,"byte_end":14308816,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308817,"byte_end":14308824,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308825,"byte_end":14308828,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308829,"byte_end":14308903,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308904,"byte_end":14308924,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308925,"byte_end":14308928,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308929,"byte_end":14308943,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308944,"byte_end":14308947,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14308948,"byte_end":14309023,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309024,"byte_end":14309096,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309097,"byte_end":14309165,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309166,"byte_end":14309242,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309243,"byte_end":14309284,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309285,"byte_end":14309288,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309289,"byte_end":14309359,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309360,"byte_end":14309378,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309379,"byte_end":14309382,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309383,"byte_end":14309390,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309391,"byte_end":14309423,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309424,"byte_end":14309474,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309475,"byte_end":14309519,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309520,"byte_end":14309533,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309534,"byte_end":14309569,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309570,"byte_end":14309601,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309602,"byte_end":14309625,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309626,"byte_end":14309633,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309634,"byte_end":14309656,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309657,"byte_end":14309664,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309665,"byte_end":14309668,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309669,"byte_end":14309719,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309720,"byte_end":14309723,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309724,"byte_end":14309735,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309736,"byte_end":14309769,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309770,"byte_end":14309803,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309804,"byte_end":14309837,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309838,"byte_end":14309845,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309846,"byte_end":14309849,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309850,"byte_end":14309919,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309920,"byte_end":14309957,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309958,"byte_end":14309997,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14309998,"byte_end":14310043,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310044,"byte_end":14310091,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310092,"byte_end":14310122,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310123,"byte_end":14310156,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310718,"byte_end":14310725,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310400,"byte_end":14310455,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310456,"byte_end":14310459,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310460,"byte_end":14310535,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310536,"byte_end":14310616,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14310617,"byte_end":14310676,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311396,"byte_end":14311421,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311311,"byte_end":14311384,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311766,"byte_end":14311786,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311442,"byte_end":14311516,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311517,"byte_end":14311520,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311521,"byte_end":14311600,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311601,"byte_end":14311644,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311645,"byte_end":14311648,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311649,"byte_end":14311702,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311703,"byte_end":14311706,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14311707,"byte_end":14311737,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312130,"byte_end":14312133,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312039,"byte_end":14312118,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312360,"byte_end":14312367,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312257,"byte_end":14312332,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312337,"byte_end":14312348,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312589,"byte_end":14312605,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312417,"byte_end":14312458,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312463,"byte_end":14312466,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312471,"byte_end":14312544,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312549,"byte_end":14312577,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14313026,"byte_end":14313046,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312670,"byte_end":14312704,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312709,"byte_end":14312712,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312717,"byte_end":14312787,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312792,"byte_end":14312867,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312872,"byte_end":14312944,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312949,"byte_end":14313014,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318302,"byte_end":14318305,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317760,"byte_end":14317835,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317840,"byte_end":14317851,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317856,"byte_end":14317859,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317864,"byte_end":14317878,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317883,"byte_end":14317886,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317891,"byte_end":14317898,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317903,"byte_end":14317934,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317939,"byte_end":14317987,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317992,"byte_end":14317995,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318000,"byte_end":14318041,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318046,"byte_end":14318081,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318086,"byte_end":14318117,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318122,"byte_end":14318153,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318158,"byte_end":14318187,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318192,"byte_end":14318212,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318217,"byte_end":14318239,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318244,"byte_end":14318251,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318256,"byte_end":14318278,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318283,"byte_end":14318290,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319490,"byte_end":14319500,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14318969,"byte_end":14319018,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319023,"byte_end":14319026,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319031,"byte_end":14319063,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319068,"byte_end":14319071,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319076,"byte_end":14319144,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319149,"byte_end":14319152,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319157,"byte_end":14319171,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319176,"byte_end":14319179,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319184,"byte_end":14319191,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319196,"byte_end":14319227,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319232,"byte_end":14319280,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319285,"byte_end":14319288,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319293,"byte_end":14319334,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319339,"byte_end":14319374,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319379,"byte_end":14319400,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319405,"byte_end":14319427,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319432,"byte_end":14319439,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319444,"byte_end":14319466,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319471,"byte_end":14319478,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320132,"byte_end":14320145,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319599,"byte_end":14319651,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319656,"byte_end":14319659,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319664,"byte_end":14319702,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319707,"byte_end":14319710,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319715,"byte_end":14319783,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319788,"byte_end":14319791,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319796,"byte_end":14319810,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319815,"byte_end":14319818,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319823,"byte_end":14319830,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319835,"byte_end":14319866,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319871,"byte_end":14319919,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319924,"byte_end":14319927,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319932,"byte_end":14319973,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14319978,"byte_end":14320013,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320018,"byte_end":14320042,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320047,"byte_end":14320069,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320074,"byte_end":14320081,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320086,"byte_end":14320108,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320113,"byte_end":14320120,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320778,"byte_end":14320791,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320245,"byte_end":14320297,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320302,"byte_end":14320305,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320310,"byte_end":14320348,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320353,"byte_end":14320356,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320361,"byte_end":14320429,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320434,"byte_end":14320437,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320442,"byte_end":14320456,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320461,"byte_end":14320464,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320469,"byte_end":14320476,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320481,"byte_end":14320512,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320517,"byte_end":14320565,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320570,"byte_end":14320573,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320578,"byte_end":14320619,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320624,"byte_end":14320659,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320664,"byte_end":14320688,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320693,"byte_end":14320715,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320720,"byte_end":14320727,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320732,"byte_end":14320754,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320759,"byte_end":14320766,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321872,"byte_end":14321888,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320960,"byte_end":14320989,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14320994,"byte_end":14320997,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321002,"byte_end":14321074,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321079,"byte_end":14321104,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321109,"byte_end":14321112,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321117,"byte_end":14321189,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321194,"byte_end":14321263,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321268,"byte_end":14321341,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321346,"byte_end":14321358,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321363,"byte_end":14321366,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321371,"byte_end":14321446,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321451,"byte_end":14321512,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321517,"byte_end":14321520,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321525,"byte_end":14321539,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321544,"byte_end":14321547,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321552,"byte_end":14321559,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321564,"byte_end":14321595,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321600,"byte_end":14321648,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321653,"byte_end":14321656,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321661,"byte_end":14321702,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321707,"byte_end":14321742,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321747,"byte_end":14321782,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321787,"byte_end":14321809,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321814,"byte_end":14321821,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321826,"byte_end":14321848,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321853,"byte_end":14321860,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322549,"byte_end":14322568,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14321985,"byte_end":14322048,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322053,"byte_end":14322056,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322061,"byte_end":14322112,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322117,"byte_end":14322120,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322125,"byte_end":14322193,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322198,"byte_end":14322201,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322206,"byte_end":14322220,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322225,"byte_end":14322228,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322233,"byte_end":14322240,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322245,"byte_end":14322276,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322281,"byte_end":14322329,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322334,"byte_end":14322337,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322342,"byte_end":14322383,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322388,"byte_end":14322423,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322428,"byte_end":14322459,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322464,"byte_end":14322486,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322491,"byte_end":14322498,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322503,"byte_end":14322525,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322530,"byte_end":14322537,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323227,"byte_end":14323246,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322737,"byte_end":14322803,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322808,"byte_end":14322811,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322816,"byte_end":14322871,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322876,"byte_end":14322879,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322884,"byte_end":14322898,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322903,"byte_end":14322906,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322911,"byte_end":14322918,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322923,"byte_end":14322954,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14322959,"byte_end":14323007,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323012,"byte_end":14323015,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323020,"byte_end":14323061,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323066,"byte_end":14323101,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323106,"byte_end":14323137,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323142,"byte_end":14323164,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323169,"byte_end":14323176,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323181,"byte_end":14323203,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323208,"byte_end":14323215,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323800,"byte_end":14323817,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323349,"byte_end":14323422,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323427,"byte_end":14323445,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323450,"byte_end":14323453,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323458,"byte_end":14323472,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323477,"byte_end":14323480,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323485,"byte_end":14323492,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323497,"byte_end":14323528,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323533,"byte_end":14323581,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323586,"byte_end":14323589,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323594,"byte_end":14323635,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323640,"byte_end":14323675,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323680,"byte_end":14323710,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323715,"byte_end":14323737,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323742,"byte_end":14323749,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323754,"byte_end":14323776,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323781,"byte_end":14323788,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324467,"byte_end":14324475,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323918,"byte_end":14323981,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323986,"byte_end":14323989,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14323994,"byte_end":14324055,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324060,"byte_end":14324063,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324068,"byte_end":14324122,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324127,"byte_end":14324130,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324135,"byte_end":14324149,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324154,"byte_end":14324157,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324162,"byte_end":14324169,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324174,"byte_end":14324205,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324210,"byte_end":14324258,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324263,"byte_end":14324266,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324271,"byte_end":14324312,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324317,"byte_end":14324352,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324357,"byte_end":14324377,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324382,"byte_end":14324404,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324409,"byte_end":14324416,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324421,"byte_end":14324443,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324448,"byte_end":14324455,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324995,"byte_end":14325004,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324573,"byte_end":14324636,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324641,"byte_end":14324644,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324649,"byte_end":14324663,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324668,"byte_end":14324671,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324676,"byte_end":14324683,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324688,"byte_end":14324736,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324741,"byte_end":14324762,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324767,"byte_end":14324802,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324807,"byte_end":14324838,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324843,"byte_end":14324874,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324879,"byte_end":14324908,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324913,"byte_end":14324933,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324938,"byte_end":14324959,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324964,"byte_end":14324971,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14324976,"byte_end":14324983,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325660,"byte_end":14325668,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325156,"byte_end":14325209,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325214,"byte_end":14325217,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325222,"byte_end":14325236,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325241,"byte_end":14325244,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325249,"byte_end":14325256,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325261,"byte_end":14325292,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325297,"byte_end":14325345,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325350,"byte_end":14325353,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325358,"byte_end":14325399,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325404,"byte_end":14325439,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325444,"byte_end":14325475,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325480,"byte_end":14325511,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325516,"byte_end":14325545,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325550,"byte_end":14325570,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325575,"byte_end":14325597,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325602,"byte_end":14325609,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325614,"byte_end":14325636,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325641,"byte_end":14325648,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326241,"byte_end":14326250,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325832,"byte_end":14325886,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325891,"byte_end":14325894,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325899,"byte_end":14325913,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325918,"byte_end":14325921,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325926,"byte_end":14325933,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325938,"byte_end":14325970,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14325975,"byte_end":14326025,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326030,"byte_end":14326074,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326079,"byte_end":14326114,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326119,"byte_end":14326150,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326155,"byte_end":14326178,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326183,"byte_end":14326190,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326195,"byte_end":14326217,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326222,"byte_end":14326229,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326859,"byte_end":14326869,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326411,"byte_end":14326460,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326465,"byte_end":14326468,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326473,"byte_end":14326487,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326492,"byte_end":14326495,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326500,"byte_end":14326507,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326512,"byte_end":14326557,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326562,"byte_end":14326612,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326617,"byte_end":14326673,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326678,"byte_end":14326691,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326696,"byte_end":14326731,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326736,"byte_end":14326767,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326772,"byte_end":14326796,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326801,"byte_end":14326808,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326813,"byte_end":14326835,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14326840,"byte_end":14326847,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328248,"byte_end":14328258,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328005,"byte_end":14328092,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328093,"byte_end":14328096,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328097,"byte_end":14328135,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328136,"byte_end":14328174,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329358,"byte_end":14329361,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328939,"byte_end":14328999,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329004,"byte_end":14329007,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329012,"byte_end":14329022,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329027,"byte_end":14329030,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329035,"byte_end":14329107,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329112,"byte_end":14329185,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329190,"byte_end":14329257,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329262,"byte_end":14329265,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329270,"byte_end":14329346,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330492,"byte_end":14330511,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329519,"byte_end":14329579,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329584,"byte_end":14329587,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329592,"byte_end":14329655,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329660,"byte_end":14329738,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329743,"byte_end":14329810,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329815,"byte_end":14329887,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329892,"byte_end":14329962,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329967,"byte_end":14329990,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14329995,"byte_end":14329998,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330003,"byte_end":14330013,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330018,"byte_end":14330021,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330026,"byte_end":14330101,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330106,"byte_end":14330179,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330184,"byte_end":14330260,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330265,"byte_end":14330338,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330343,"byte_end":14330413,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330418,"byte_end":14330421,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330426,"byte_end":14330480,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14331077,"byte_end":14331087,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330639,"byte_end":14330689,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330694,"byte_end":14330697,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330702,"byte_end":14330709,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330714,"byte_end":14330733,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330738,"byte_end":14330776,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330781,"byte_end":14330784,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330789,"byte_end":14330823,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330828,"byte_end":14330875,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330880,"byte_end":14330887,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330892,"byte_end":14330899,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330904,"byte_end":14330942,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330947,"byte_end":14330950,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14330955,"byte_end":14331008,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14331013,"byte_end":14331053,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14331058,"byte_end":14331065,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335413,"byte_end":14335434,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335367,"byte_end":14335408,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335470,"byte_end":14335472,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335440,"byte_end":14335465,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1283},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335345,"byte_end":14335360,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335262,"byte_end":14335318,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337394,"byte_end":14337411,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336208,"byte_end":14336349,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336350,"byte_end":14336353,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336354,"byte_end":14336392,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336393,"byte_end":14336431,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336432,"byte_end":14336435,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336436,"byte_end":14336449,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336450,"byte_end":14336517,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336518,"byte_end":14336521,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336522,"byte_end":14336555,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336556,"byte_end":14336585,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336586,"byte_end":14336589,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336590,"byte_end":14336597,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336598,"byte_end":14336654,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336655,"byte_end":14336689,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336690,"byte_end":14336693,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336694,"byte_end":14336699,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336700,"byte_end":14336747,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336748,"byte_end":14336801,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336802,"byte_end":14336879,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336880,"byte_end":14336915,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336916,"byte_end":14336937,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336938,"byte_end":14336988,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14336989,"byte_end":14337052,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337053,"byte_end":14337116,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337117,"byte_end":14337180,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337181,"byte_end":14337237,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337238,"byte_end":14337287,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337288,"byte_end":14337300,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337301,"byte_end":14337308,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337309,"byte_end":14337316,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14337317,"byte_end":14337320,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338746,"byte_end":14338749,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338304,"byte_end":14338372,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338377,"byte_end":14338380,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338385,"byte_end":14338395,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338400,"byte_end":14338403,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338408,"byte_end":14338487,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338492,"byte_end":14338566,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338571,"byte_end":14338638,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338643,"byte_end":14338646,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338651,"byte_end":14338734,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340060,"byte_end":14340079,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339029,"byte_end":14339097,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339102,"byte_end":14339105,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339110,"byte_end":14339180,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339185,"byte_end":14339271,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339276,"byte_end":14339346,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339351,"byte_end":14339428,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339433,"byte_end":14339503,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339508,"byte_end":14339531,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339536,"byte_end":14339539,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339544,"byte_end":14339554,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339559,"byte_end":14339562,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339567,"byte_end":14339649,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339654,"byte_end":14339727,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339732,"byte_end":14339809,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339814,"byte_end":14339887,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339892,"byte_end":14339967,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339972,"byte_end":14339975,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14339980,"byte_end":14340048,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340867,"byte_end":14340877,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340336,"byte_end":14340387,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340392,"byte_end":14340395,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340400,"byte_end":14340407,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340412,"byte_end":14340431,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340436,"byte_end":14340481,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340486,"byte_end":14340489,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340494,"byte_end":14340566,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340571,"byte_end":14340618,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340623,"byte_end":14340630,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340635,"byte_end":14340642,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340647,"byte_end":14340692,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340697,"byte_end":14340700,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340705,"byte_end":14340798,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340803,"byte_end":14340843,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340848,"byte_end":14340855,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344973,"byte_end":14344995,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344926,"byte_end":14344968,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345031,"byte_end":14345033,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345001,"byte_end":14345026,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1315},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344897,"byte_end":14344919,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344813,"byte_end":14344870,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mod.rs","byte_start":6625,"byte_end":6655,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40554,"byte_end":40563,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40377,"byte_end":40441,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40442,"byte_end":40525,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40826,"byte_end":40832,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40639,"byte_end":40713,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40718,"byte_end":40788,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40793,"byte_end":40814,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8652,"byte_end":8669,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7434,"byte_end":7511,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7512,"byte_end":7522,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7523,"byte_end":7526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7527,"byte_end":7592,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7593,"byte_end":7667,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7668,"byte_end":7671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7672,"byte_end":7755,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7756,"byte_end":7759,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7760,"byte_end":7774,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7775,"byte_end":7778,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7779,"byte_end":7792,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7793,"byte_end":7815,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7816,"byte_end":7856,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7857,"byte_end":7860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7861,"byte_end":7879,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7880,"byte_end":7901,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7902,"byte_end":7947,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7948,"byte_end":7989,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7990,"byte_end":7993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":7994,"byte_end":8045,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8109,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8131,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8181,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8182,"byte_end":8228,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8250,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8251,"byte_end":8268,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8350,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8351,"byte_end":8373,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8374,"byte_end":8391,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8392,"byte_end":8405,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8406,"byte_end":8417,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8418,"byte_end":8421,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8422,"byte_end":8455,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8456,"byte_end":8531,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8532,"byte_end":8559,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8560,"byte_end":8571,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8572,"byte_end":8575,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8576,"byte_end":8626,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8632,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8633,"byte_end":8640,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9089,"byte_end":9114,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8936,"byte_end":9010,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9011,"byte_end":9028,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9029,"byte_end":9077,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11622,"byte_end":11625,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11547,"byte_end":11610,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13678,"byte_end":13689,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12415,"byte_end":12486,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12491,"byte_end":12524,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12529,"byte_end":12532,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12537,"byte_end":12608,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12645,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12650,"byte_end":12653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12672,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12677,"byte_end":12680,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12685,"byte_end":12698,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12725,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12730,"byte_end":12770,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12775,"byte_end":12778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12783,"byte_end":12801,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12806,"byte_end":12827,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12832,"byte_end":12877,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12882,"byte_end":12928,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12933,"byte_end":12936,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12941,"byte_end":12992,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":12997,"byte_end":13060,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13065,"byte_end":13086,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13091,"byte_end":13139,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13144,"byte_end":13190,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13195,"byte_end":13216,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13221,"byte_end":13238,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13243,"byte_end":13324,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13329,"byte_end":13351,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13356,"byte_end":13373,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13378,"byte_end":13391,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13396,"byte_end":13407,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13412,"byte_end":13415,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13420,"byte_end":13453,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13458,"byte_end":13533,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13538,"byte_end":13565,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13570,"byte_end":13581,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13586,"byte_end":13589,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13594,"byte_end":13644,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13654,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":13659,"byte_end":13666,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16264,"byte_end":16270,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16075,"byte_end":16147,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16152,"byte_end":16172,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16177,"byte_end":16180,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16185,"byte_end":16252,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16398,"byte_end":16410,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16322,"byte_end":16386,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16561,"byte_end":16570,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16475,"byte_end":16549,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16972,"byte_end":16982,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16809,"byte_end":16850,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16855,"byte_end":16858,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16863,"byte_end":16935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":16940,"byte_end":16960,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71142,"byte_end":71152,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71004,"byte_end":71061,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71062,"byte_end":71065,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71066,"byte_end":71113,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71875,"byte_end":71878,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71833,"byte_end":71863,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72593,"byte_end":72603,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72081,"byte_end":72110,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72115,"byte_end":72118,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72123,"byte_end":72199,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72204,"byte_end":72273,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72278,"byte_end":72296,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72301,"byte_end":72304,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72309,"byte_end":72380,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72385,"byte_end":72458,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72463,"byte_end":72537,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":72542,"byte_end":72581,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74124,"byte_end":74138,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73027,"byte_end":73108,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73113,"byte_end":73159,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73164,"byte_end":73167,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73172,"byte_end":73220,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73225,"byte_end":73228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73233,"byte_end":73317,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73322,"byte_end":73381,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73386,"byte_end":73471,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73476,"byte_end":73495,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73500,"byte_end":73579,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73584,"byte_end":73587,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73592,"byte_end":73667,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73672,"byte_end":73748,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73753,"byte_end":73808,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73813,"byte_end":73887,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73892,"byte_end":73965,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":73970,"byte_end":74004,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74009,"byte_end":74012,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74017,"byte_end":74093,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74098,"byte_end":74112,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74772,"byte_end":74780,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74524,"byte_end":74589,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74594,"byte_end":74597,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74602,"byte_end":74675,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74680,"byte_end":74690,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74695,"byte_end":74698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74703,"byte_end":74760,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74892,"byte_end":74901,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":74834,"byte_end":74880,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75242,"byte_end":75253,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75043,"byte_end":75077,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75082,"byte_end":75085,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75090,"byte_end":75163,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75168,"byte_end":75230,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75558,"byte_end":75567,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75358,"byte_end":75393,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75398,"byte_end":75401,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75406,"byte_end":75479,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75484,"byte_end":75546,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76267,"byte_end":76284,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75718,"byte_end":75787,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75792,"byte_end":75795,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75800,"byte_end":75870,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75875,"byte_end":75948,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":75953,"byte_end":75999,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76004,"byte_end":76007,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76012,"byte_end":76087,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76092,"byte_end":76166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76171,"byte_end":76197,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76202,"byte_end":76205,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76210,"byte_end":76255,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76450,"byte_end":76460,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76337,"byte_end":76384,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76389,"byte_end":76392,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76397,"byte_end":76438,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78972,"byte_end":78985,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78841,"byte_end":78914,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78915,"byte_end":78918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":78919,"byte_end":78960,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79179,"byte_end":79182,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79134,"byte_end":79167,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79346,"byte_end":79351,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79309,"byte_end":79334,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79457,"byte_end":79468,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79403,"byte_end":79445,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79583,"byte_end":79593,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79538,"byte_end":79571,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80327,"byte_end":80339,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79654,"byte_end":79702,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79707,"byte_end":79710,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79715,"byte_end":79756,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79761,"byte_end":79764,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79769,"byte_end":79831,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79896,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79901,"byte_end":79961,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79966,"byte_end":79969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79974,"byte_end":80049,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80054,"byte_end":80122,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80127,"byte_end":80203,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80208,"byte_end":80276,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":80281,"byte_end":80315,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81767,"byte_end":81784,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81483,"byte_end":81535,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81540,"byte_end":81543,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81548,"byte_end":81624,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81629,"byte_end":81663,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81668,"byte_end":81671,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81676,"byte_end":81755,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82244,"byte_end":82255,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81857,"byte_end":81899,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81904,"byte_end":81907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81912,"byte_end":81985,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":81990,"byte_end":82030,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82035,"byte_end":82038,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82043,"byte_end":82113,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82118,"byte_end":82152,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82232,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83398,"byte_end":83415,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83198,"byte_end":83255,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83256,"byte_end":83259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83260,"byte_end":83327,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83328,"byte_end":83386,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83593,"byte_end":83596,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83510,"byte_end":83581,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84177,"byte_end":84180,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83962,"byte_end":84014,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84019,"byte_end":84022,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84027,"byte_end":84099,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84104,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84623,"byte_end":84630,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84382,"byte_end":84434,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84439,"byte_end":84442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84447,"byte_end":84520,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84525,"byte_end":84595,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":84600,"byte_end":84611,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86470,"byte_end":86477,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86406,"byte_end":86458,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86763,"byte_end":86767,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86708,"byte_end":86751,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1406},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":87880,"byte_end":87915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89862,"byte_end":89866,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89875,"byte_end":89880,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1406},"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89843,"byte_end":89849,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1412}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88092,"byte_end":88198,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88199,"byte_end":88202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88203,"byte_end":88293,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88294,"byte_end":88297,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88298,"byte_end":88333,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88334,"byte_end":88337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88338,"byte_end":88351,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88352,"byte_end":88355,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88356,"byte_end":88393,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88394,"byte_end":88397,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88398,"byte_end":88417,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88418,"byte_end":88460,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88461,"byte_end":88511,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88512,"byte_end":88563,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88564,"byte_end":88582,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88583,"byte_end":88604,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88605,"byte_end":88647,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88648,"byte_end":88681,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88682,"byte_end":88698,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88699,"byte_end":88793,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88794,"byte_end":88804,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88805,"byte_end":88808,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88809,"byte_end":88856,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88857,"byte_end":88862,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88863,"byte_end":88870,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":88871,"byte_end":88874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89075,"byte_end":89078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89079,"byte_end":89165,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89166,"byte_end":89176,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89177,"byte_end":89180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89181,"byte_end":89188,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89189,"byte_end":89224,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89225,"byte_end":89267,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89268,"byte_end":89318,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89319,"byte_end":89370,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89371,"byte_end":89374,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89375,"byte_end":89393,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89394,"byte_end":89415,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89416,"byte_end":89458,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89459,"byte_end":89506,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89507,"byte_end":89523,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89524,"byte_end":89573,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89574,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89585,"byte_end":89588,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89589,"byte_end":89622,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89623,"byte_end":89663,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89664,"byte_end":89696,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89697,"byte_end":89702,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89703,"byte_end":89710,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":89711,"byte_end":89733,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255726,"byte_end":14255736,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255887,"byte_end":14255897,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14256224,"byte_end":14256234,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266413,"byte_end":14266422,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266622,"byte_end":14266632,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266783,"byte_end":14266792,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267115,"byte_end":14267125,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267371,"byte_end":14267379,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267476,"byte_end":14267484,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267595,"byte_end":14267603,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267703,"byte_end":14267711,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267821,"byte_end":14267831,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14273413,"byte_end":14273423,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276259,"byte_end":14276265,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280077,"byte_end":14280083,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285398,"byte_end":14285404,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285720,"byte_end":14285726,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286441,"byte_end":14286447,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287487,"byte_end":14287498,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288425,"byte_end":14288435,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289324,"byte_end":14289334,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291431,"byte_end":14291441,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291754,"byte_end":14291764,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14292490,"byte_end":14292500,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293479,"byte_end":14293490,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293846,"byte_end":14293857,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295966,"byte_end":14295977,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14296741,"byte_end":14296752,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14296993,"byte_end":14297004,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312012,"byte_end":14312032,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14315366,"byte_end":14315386,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14316272,"byte_end":14316292,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317633,"byte_end":14317653,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317746,"byte_end":14317753,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327352,"byte_end":14327359,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327485,"byte_end":14327510,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327668,"byte_end":14327693,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327828,"byte_end":14327853,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328922,"byte_end":14328932,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14331474,"byte_end":14331484,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14334860,"byte_end":14334870,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335193,"byte_end":14335203,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335510,"byte_end":14335525,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335807,"byte_end":14335822,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335939,"byte_end":14335954,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338280,"byte_end":14338297,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340946,"byte_end":14340963,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344255,"byte_end":14344272,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344636,"byte_end":14344653,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345071,"byte_end":14345093,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345422,"byte_end":14345444,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345575,"byte_end":14345597,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/mod.rs","byte_start":14254138,"byte_end":14254154,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255726,"byte_end":14255736,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14255887,"byte_end":14255897,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/bytes_codec.rs","byte_start":14256224,"byte_end":14256234,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266413,"byte_end":14266422,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266622,"byte_end":14266632,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14266783,"byte_end":14266792,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267115,"byte_end":14267125,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267371,"byte_end":14267379,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267476,"byte_end":14267484,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267595,"byte_end":14267603,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267703,"byte_end":14267711,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14267821,"byte_end":14267831,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1555},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_impl.rs","byte_start":14273413,"byte_end":14273423,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1555},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14276259,"byte_end":14276265,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14280077,"byte_end":14280083,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285398,"byte_end":14285404,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1505},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14285720,"byte_end":14285726,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1505},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14286441,"byte_end":14286447,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed.rs","byte_start":14287487,"byte_end":14287498,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14288425,"byte_end":14288435,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14289324,"byte_end":14289334,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291431,"byte_end":14291441,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1464},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14291754,"byte_end":14291764,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1464},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_read.rs","byte_start":14292490,"byte_end":14292500,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293479,"byte_end":14293490,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14293846,"byte_end":14293857,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14295966,"byte_end":14295977,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1423},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14296741,"byte_end":14296752,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1423},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/framed_write.rs","byte_start":14296993,"byte_end":14297004,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14312012,"byte_end":14312032,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14315366,"byte_end":14315386,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14316272,"byte_end":14316292,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317633,"byte_end":14317653,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14317746,"byte_end":14317753,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327352,"byte_end":14327359,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327485,"byte_end":14327510,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327668,"byte_end":14327693,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/length_delimited.rs","byte_start":14327828,"byte_end":14327853,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14328922,"byte_end":14328932,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14331474,"byte_end":14331484,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14334860,"byte_end":14334870,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335193,"byte_end":14335203,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335510,"byte_end":14335525,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335807,"byte_end":14335822,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/lines_codec.rs","byte_start":14335939,"byte_end":14335954,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1283},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14338280,"byte_end":14338297,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14340946,"byte_end":14340963,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344255,"byte_end":14344272,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14344636,"byte_end":14344653,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345071,"byte_end":14345093,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345422,"byte_end":14345444,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/codec/any_delimiter_codec.rs","byte_start":14345575,"byte_end":14345597,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2318}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40623,"byte_end":40632,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token/guard.rs","byte_start":40992,"byte_end":41001,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8872,"byte_end":8889,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":8914,"byte_end":8931,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9665,"byte_end":9690,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":9764,"byte_end":9781,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10006,"byte_end":10023,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10446,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11416,"byte_end":11433,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11540,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17652,"byte_end":17677,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":17849,"byte_end":17874,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":19309,"byte_end":19334,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20522,"byte_end":20536,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":20870,"byte_end":20887,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":21487,"byte_end":21504,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":22362,"byte_end":22375,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/cancellation_token.rs","byte_start":23560,"byte_end":23582,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":41882,"byte_end":41890,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42140,"byte_end":42148,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42253,"byte_end":42261,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/intrusive_double_linked_list.rs","byte_start":42570,"byte_end":42580,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":71813,"byte_end":71823,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":76684,"byte_end":76694,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/mpsc.rs","byte_start":77098,"byte_end":77108,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1398},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":79114,"byte_end":79127,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82339,"byte_end":82352,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82566,"byte_end":82579,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82697,"byte_end":82710,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/poll_semaphore.rs","byte_start":82922,"byte_end":82935,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":83483,"byte_end":83500,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":86874,"byte_end":86891,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87198,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87416,"byte_end":87433,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87529,"byte_end":87546,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87571,"byte_end":87588,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/sync/reusable_box.rs","byte_start":87732,"byte_end":87749,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90486,"byte_end":90492,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":12186}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":90735,"byte_end":90741,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":226}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91014,"byte_end":91020,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":184}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91348,"byte_end":91354,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":265}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":91708,"byte_end":91714,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":305}},{"span":{"file_name":"/home/omar/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.8/src/either.rs","byte_start":92266,"byte_end":92272,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1406},"to":{"krate":19,"index":96}}]}